/**
 * @licstart The following is the entire license notice for the
 * Javascript code in this page
 *
 * Copyright 2021 Mozilla Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @licend The above is the entire license notice for the
 * Javascript code in this page
 */
!function webpackUniversalModuleDefinition(I,g){"object"==typeof exports&&"object"==typeof module?module.exports=g():"function"==typeof define&&define.amd?define("pdfjs-dist/build/pdf.sandbox",[],g):"object"==typeof exports?exports["pdfjs-dist/build/pdf.sandbox"]=g():I["pdfjs-dist/build/pdf.sandbox"]=I.pdfjsSandbox=g()}(this,(function(){return(()=>{var I=[,(I,g,Q)=>{"use strict";Object.defineProperty(g,"__esModule",{value:!0});g.default=void 0;Q(2);Q(101);Q(126);Q(127);Q(132);Q(133);Q(134);Q(135);Q(136);Q(137);Q(138);Q(139);Q(146);var C,E=(C="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,function(I){I=I||{};var g,Q,E;g||(g=void 0!==I?I:{});g.ready=new Promise((function(I,g){Q=I;E=g}));var n,e={};for(n in g)g.hasOwnProperty(n)&&(e[n]=g[n]);var i="";"undefined"!=typeof document&&document.currentScript&&(i=document.currentScript.src);C&&(i=C);i=0!==i.indexOf("blob:")?i.substr(0,i.lastIndexOf("/")+1):"";var o,t=g.print||console.log.bind(console),r=g.printErr||console.warn.bind(console);for(n in e)e.hasOwnProperty(n)&&(g[n]=e[n]);e=null;g.wasmBinary&&(o=g.wasmBinary);g.noExitRuntime;"object"!=typeof WebAssembly&&w("no native wasm support detected");var s,h=!1;function A(I){var Q=g["_"+I];Q||w("Assertion failed: Cannot call unknown function "+I+", make sure it is exported");return Q}function B(I,g,Q,C){var E,n={string:function(I){var g=0;if(null!=I&&0!==I){var Q=1+(I.length<<2);g=AA(Q);D(I,M,g,Q)}return g},array:function(I){var g=AA(I.length);R.set(I,g);return g}},e=A(I),i=[];I=0;if(C)for(var o=0;o<C.length;o++){var t=n[Q[o]];t?(0===I&&(I=z()),i[o]=t(C[o])):i[o]=C[o]}Q=e.apply(null,i);Q=(E=Q,"string"===g?H(E):"boolean"===g?!!E:E);0!==I&&$(I);return Q}var y,R,M,G,l="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function K(I,g,Q){var C=g+Q;for(Q=g;I[Q]&&!(Q>=C);)++Q;if(16<Q-g&&I.subarray&&l)return l.decode(I.subarray(g,Q));for(C="";g<Q;){var E=I[g++];if(128&E){var n=63&I[g++];if(192==(224&E))C+=String.fromCharCode((31&E)<<6|n);else{var e=63&I[g++];65536>(E=224==(240&E)?(15&E)<<12|n<<6|e:(7&E)<<18|n<<12|e<<6|63&I[g++])?C+=String.fromCharCode(E):(E-=65536,C+=String.fromCharCode(55296|E>>10,56320|1023&E))}}else C+=String.fromCharCode(E)}return C}function H(I){return I?K(M,I,void 0):""}function D(I,g,Q,C){if(0<C){C=Q+C-1;for(var E=0;E<I.length;++E){var n=I.charCodeAt(E);55296<=n&&57343>=n&&(n=65536+((1023&n)<<10)|1023&I.charCodeAt(++E));if(127>=n){if(Q>=C)break;g[Q++]=n}else{if(2047>=n){if(Q+1>=C)break;g[Q++]=192|n>>6}else{if(65535>=n){if(Q+2>=C)break;g[Q++]=224|n>>12}else{if(Q+3>=C)break;g[Q++]=240|n>>18;g[Q++]=128|n>>12&63}g[Q++]=128|n>>6&63}g[Q++]=128|63&n}}g[Q]=0}}function L(I){for(var g=0,Q=0;Q<I.length;++Q){var C=I.charCodeAt(Q);55296<=C&&57343>=C&&(C=65536+((1023&C)<<10)|1023&I.charCodeAt(++Q));127>=C?++g:g=2047>=C?g+2:65535>=C?g+3:g+4}return g}function ba(I){var g=L(I)+1,Q=O(g);Q&&D(I,R,Q,g);return Q}function da(){var I=s.buffer;y=I;g.HEAP8=R=new Int8Array(I);g.HEAP16=new Int16Array(I);g.HEAP32=G=new Int32Array(I);g.HEAPU8=M=new Uint8Array(I);g.HEAPU16=new Uint16Array(I);g.HEAPU32=new Uint32Array(I);g.HEAPF32=new Float32Array(I);g.HEAPF64=new Float64Array(I)}var k,u=[],N=[],U=[],p=[];function ja(){var I=g.preRun.shift();u.unshift(I)}var f=0,J=null,Y=null;g.preloadedImages={};g.preloadedAudios={};function w(I){g.onAbort&&g.onAbort(I);r(I);h=!0;I=new WebAssembly.RuntimeError("abort("+I+"). Build with -s ASSERTIONS=1 for more info.");E(I);throw I}function S(I){return String.prototype.startsWith?I.startsWith("data:application/octet-stream;base64,"):0===I.indexOf("data:application/octet-stream;base64,")}var _="data:application/octet-stream;base64,";if(!S(_)){var m=_;_=g.locateFile?g.locateFile(m,i):i+m}function la(){var I=_;try{if(I==_&&o)return new Uint8Array(o);if(S(I))try{var g=v(I.slice(37)),Q=new Uint8Array(g.length);for(I=0;I<g.length;++I)Q[I]=g.charCodeAt(I);var C=Q}catch(I){throw Error("Converting base64 string to bytes failed.")}else C=void 0;if(C)return C;throw"both async and sync fetching of the wasm failed"}catch(I){w(I)}}function V(I){for(;0<I.length;){var Q=I.shift();if("function"==typeof Q)Q(g);else{var C=Q.B;"number"==typeof C?void 0===Q.A?k.get(C)():k.get(C)(Q.A):C(void 0===Q.A?null:Q.A)}}}function W(I){var g=L(I)+1,Q=O(g);D(I,M,Q,g);return Q}var b,x=[null,[],[]],v="function"==typeof atob?atob:function(I){var g="",Q=0;I=I.replace(/[^A-Za-z0-9\+\/=]/g,"");do{var C="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(I.charAt(Q++)),E="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(I.charAt(Q++)),n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(I.charAt(Q++)),e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(I.charAt(Q++));C=C<<2|E>>4;E=(15&E)<<4|n>>2;var i=(3&n)<<6|e;g+=String.fromCharCode(C);64!==n&&(g+=String.fromCharCode(E));64!==e&&(g+=String.fromCharCode(i))}while(Q<I.length);return g},q={a:function(I,g,Q,C){w("Assertion failed: "+H(I)+", at: "+[g?H(g):"unknown filename",Q,C?H(C):"unknown function"])},b:function(){w()},g:(I,Q,C)=>{I=H(I);Q=null!==Q?JSON.parse(H(Q)):[];try{const C=g.externalCall(I,Q);return C?W(C):null}catch(I){return g.HEAPU8[C]=1,W(I.message)}},f:function(I,g){I=H(I);let Q;try{Q=window.JSON.parse(I)}catch(g){Q=I}0!==g?window.alert(I):window.console.log("DUMP",Q)},e:function(I){var g=M.length;if(2147483648<(I>>>=0))return!1;for(var Q=1;4>=Q;Q*=2){var C=g*(1+.2/Q);C=Math.min(C,I+100663296);0<(C=Math.max(I,C))%65536&&(C+=65536-C%65536);A:{try{s.grow(Math.min(2147483648,C)-y.byteLength+65535>>>16);da();var E=1;break A}catch(I){}E=void 0}if(E)return!0}return!1},d:function(I,g,Q,C){for(var E=0,n=0;n<Q;n++){for(var e=G[g+8*n>>2],i=G[g+(8*n+4)>>2],o=0;o<i;o++){var s=M[e+o],h=x[I];0===s||10===s?((1===I?t:r)(K(h,0)),h.length=0):h.push(s)}E+=i}G[C>>2]=E;return 0},c:function(I){var g=Date.now();G[I>>2]=g/1e3|0;G[I+4>>2]=g%1e3*1e3|0;return 0},h:function(I,g){!function qa(){function a(I){return(I=I.toTimeString().match(/\(([A-Za-z ]+)\)$/))?I[1]:"GMT"}if(!b){b=!0;var I=(new Date).getFullYear(),g=new Date(I,0,1),Q=new Date(I,6,1);I=g.getTimezoneOffset();var C=Q.getTimezoneOffset(),E=Math.max(I,C);G[X()>>2]=60*E;G[j()>>2]=Number(I!=C);g=a(g);Q=a(Q);g=ba(g);Q=ba(Q);C<I?(G[P()>>2]=g,G[P()+4>>2]=Q):(G[P()>>2]=Q,G[P()+4>>2]=g)}}();I=new Date(1e3*G[I>>2]);G[g>>2]=I.getSeconds();G[g+4>>2]=I.getMinutes();G[g+8>>2]=I.getHours();G[g+12>>2]=I.getDate();G[g+16>>2]=I.getMonth();G[g+20>>2]=I.getFullYear()-1900;G[g+24>>2]=I.getDay();var Q=new Date(I.getFullYear(),0,1);G[g+28>>2]=(I.getTime()-Q.getTime())/864e5|0;G[g+36>>2]=-60*I.getTimezoneOffset();var C=new Date(I.getFullYear(),6,1).getTimezoneOffset();I=0|(C!=(Q=Q.getTimezoneOffset())&&I.getTimezoneOffset()==Math.min(Q,C));G[g+32>>2]=I;I=G[P()+(I?4:0)>>2];G[g+40>>2]=I;return g},i:function(I){I=H(I);window.console.log(I)},j:function(I,g,Q,C){I=H(I);g=H(g);Q=H(Q);Q="Quickjs -- ".concat(I,": ").concat(g,"\n").concat(Q);0!==C?window.alert(Q):window.console.error(Q)}};!function(){function a(I){g.asm=I.exports;s=g.asm.k;da();k=g.asm.t;N.unshift(g.asm.l);f--;g.monitorRunDependencies&&g.monitorRunDependencies(f);0==f&&(null!==J&&(clearInterval(J),J=null),Y&&(I=Y,Y=null,I()))}function c(I){a(I.instance)}function d(g){return function na(){return o||"function"!=typeof fetch?Promise.resolve().then((function(){return la()})):fetch(_,{credentials:"same-origin"}).then((function(I){if(!I.ok)throw"failed to load wasm binary file at '"+_+"'";return I.arrayBuffer()})).catch((function(){return la()}))}().then((function(g){return WebAssembly.instantiate(g,I)})).then(g,(function(I){r("failed to asynchronously prepare wasm: "+I);w(I)}))}var I={a:q};f++;g.monitorRunDependencies&&g.monitorRunDependencies(f);if(g.instantiateWasm)try{return g.instantiateWasm(I,a)}catch(I){return r("Module.instantiateWasm callback failed with error: "+I),!1}(o||"function"!=typeof WebAssembly.instantiateStreaming||S(_)||"function"!=typeof fetch?d(c):fetch(_,{credentials:"same-origin"}).then((function(g){return WebAssembly.instantiateStreaming(g,I).then(c,(function(I){r("wasm streaming compile failed: "+I);r("falling back to ArrayBuffer instantiation");return d(c)}))}))).catch(E)}();g.___wasm_call_ctors=function(){return(g.___wasm_call_ctors=g.asm.l).apply(null,arguments)};g._evalInSandbox=function(){return(g._evalInSandbox=g.asm.m).apply(null,arguments)};g._nukeSandbox=function(){return(g._nukeSandbox=g.asm.n).apply(null,arguments)};g._init=function(){return(g._init=g.asm.o).apply(null,arguments)};g._commFun=function(){return(g._commFun=g.asm.p).apply(null,arguments)};g._dumpMemoryUse=function(){return(g._dumpMemoryUse=g.asm.q).apply(null,arguments)};var O=g._malloc=function(){return(O=g._malloc=g.asm.r).apply(null,arguments)};g._free=function(){return(g._free=g.asm.s).apply(null,arguments)};var T,P=g.__get_tzname=function(){return(P=g.__get_tzname=g.asm.u).apply(null,arguments)},j=g.__get_daylight=function(){return(j=g.__get_daylight=g.asm.v).apply(null,arguments)},X=g.__get_timezone=function(){return(X=g.__get_timezone=g.asm.w).apply(null,arguments)},z=g.stackSave=function(){return(z=g.stackSave=g.asm.x).apply(null,arguments)},$=g.stackRestore=function(){return($=g.stackRestore=g.asm.y).apply(null,arguments)},AA=g.stackAlloc=function(){return(AA=g.stackAlloc=g.asm.z).apply(null,arguments)};g.ccall=B;g.cwrap=function(I,g,Q,C){var E=(Q=Q||[]).every((function(I){return"number"===I}));return"string"!==g&&E&&!C?A(I):function(){return B(I,g,Q,arguments)}};g.stringToNewUTF8=W;Y=function va(){T||Z();T||(Y=va)};function Z(){function a(){if(!T&&(T=!0,g.calledRun=!0,!h)){V(N);V(U);Q(g);g.onRuntimeInitialized&&g.onRuntimeInitialized();if(g.postRun)for("function"==typeof g.postRun&&(g.postRun=[g.postRun]);g.postRun.length;){var I=g.postRun.shift();p.unshift(I)}V(p)}}if(!(0<f)){if(g.preRun)for("function"==typeof g.preRun&&(g.preRun=[g.preRun]);g.preRun.length;)ja();V(u);0<f||(g.setStatus?(g.setStatus("Running..."),setTimeout((function(){setTimeout((function(){g.setStatus("")}),1);a()}),1)):a())}}g.run=Z;if(g.preInit)for("function"==typeof g.preInit&&(g.preInit=[g.preInit]);0<g.preInit.length;)g.preInit.pop()();Z();return I.ready}),n=E;g.default=n},(I,g,Q)=>{"use strict";var C,E,n,e,i=Q(3),o=Q(34),t=Q(4),r=Q(22),s=Q(8),h=Q(65),y=Q(46),R=Q(66),M=Q(67),G=Q(69),l=Q(70),k=Q(29),u=Q(20),N=Q(19),U=Q(71),p=Q(47),f=Q(72),J=Q(81),Y=Q(82),_=Q(85).set,m=Q(92),b=Q(95),x=Q(97),v=Q(96),q=Q(98),O=Q(99),T=Q(48),P=Q(64),j=Q(32),X=Q(100),z=Q(91),$=Q(26),AA=j("species"),IA="Promise",gA=T.getterFor(IA),QA=T.set,CA=T.getterFor(IA),BA=h&&h.prototype,EA=h,nA=BA,eA=t.TypeError,iA=t.document,oA=t.process,tA=v.f,rA=tA,DA=!!(iA&&iA.createEvent&&t.dispatchEvent),sA=u(t.PromiseRejectionEvent),aA="unhandledrejection",wA=!1,cA=P(IA,(function(){var I=p(EA),g=I!==String(EA);if(!g&&66===$)return!0;if(o&&!nA.finally)return!0;if($>=51&&/native code/.test(I))return!1;var Q=new EA((function(I){I(1)})),FakePromise=function(I){I((function(){}),(function(){}))};(Q.constructor={})[AA]=FakePromise;return!(wA=Q.then((function(){}))instanceof FakePromise)||!g&&X&&!sA})),hA=cA||!J((function(I){EA.all(I).catch((function(){}))})),isThenable=function(I){var g;return!(!N(I)||!u(g=I.then))&&g},callReaction=function(I,g){var Q,C,E,n=g.value,e=1==g.state,i=e?I.ok:I.fail,o=I.resolve,t=I.reject,r=I.domain;try{if(i){if(!e){2===g.rejection&&onHandleUnhandled(g);g.rejection=1}if(!0===i)Q=n;else{r&&r.enter();Q=i(n);if(r){r.exit();E=!0}}Q===I.promise?t(eA("Promise-chain cycle")):(C=isThenable(Q))?s(C,Q,o,t):o(Q)}else t(n)}catch(I){r&&!E&&r.exit();t(I)}},notify=function(I,g){if(!I.notified){I.notified=!0;m((function(){for(var Q,C=I.reactions;Q=C.get();)callReaction(Q,I);I.notified=!1;g&&!I.rejection&&onUnhandled(I)}))}},dispatchEvent=function(I,g,Q){var C,E;if(DA){(C=iA.createEvent("Event")).promise=g;C.reason=Q;C.initEvent(I,!1,!0);t.dispatchEvent(C)}else C={promise:g,reason:Q};!sA&&(E=t["on"+I])?E(C):I===aA&&x("Unhandled promise rejection",Q)},onUnhandled=function(I){s(_,t,(function(){var g,Q=I.facade,C=I.value;if(isUnhandled(I)){g=q((function(){z?oA.emit("unhandledRejection",C,Q):dispatchEvent(aA,Q,C)}));I.rejection=z||isUnhandled(I)?2:1;if(g.error)throw g.value}}))},isUnhandled=function(I){return 1!==I.rejection&&!I.parent},onHandleUnhandled=function(I){s(_,t,(function(){var g=I.facade;z?oA.emit("rejectionHandled",g):dispatchEvent("rejectionhandled",g,I.value)}))},bind=function(I,g,Q){return function(C){I(g,C,Q)}},internalReject=function(I,g,Q){if(!I.done){I.done=!0;Q&&(I=Q);I.value=g;I.state=2;notify(I,!0)}},internalResolve=function(I,g,Q){if(!I.done){I.done=!0;Q&&(I=Q);try{if(I.facade===g)throw eA("Promise can't be resolved itself");var C=isThenable(g);if(C)m((function(){var Q={done:!1};try{s(C,g,bind(internalResolve,Q,I),bind(internalReject,Q,I))}catch(g){internalReject(Q,g,I)}}));else{I.value=g;I.state=1;notify(I,!1)}}catch(g){internalReject({done:!1},g,I)}}};if(cA){nA=(EA=function Promise(I){U(this,nA);k(I);s(C,this);var g=gA(this);try{I(bind(internalResolve,g),bind(internalReject,g))}catch(I){internalReject(g,I)}}).prototype;(C=function Promise(I){QA(this,{type:IA,done:!1,notified:!1,parent:!1,reactions:new O,rejection:!1,state:0,value:void 0})}).prototype=R(nA,{then:function then(I,g){var Q=CA(this),C=tA(Y(this,EA));Q.parent=!0;C.ok=!u(I)||I;C.fail=u(g)&&g;C.domain=z?oA.domain:void 0;0==Q.state?Q.reactions.add(C):m((function(){callReaction(C,Q)}));return C.promise},catch:function(I){return this.then(void 0,I)}});E=function(){var I=new C,g=gA(I);this.promise=I;this.resolve=bind(internalResolve,g);this.reject=bind(internalReject,g)};v.f=tA=function(I){return I===EA||I===n?new E(I):rA(I)};if(!o&&u(h)&&BA!==Object.prototype){e=BA.then;if(!wA){y(BA,"then",(function then(I,g){var Q=this;return new EA((function(I,g){s(e,Q,I,g)})).then(I,g)}),{unsafe:!0});y(BA,"catch",nA.catch,{unsafe:!0})}try{delete BA.constructor}catch(I){}M&&M(BA,nA)}}i({global:!0,wrap:!0,forced:cA},{Promise:EA});G(EA,IA,!1,!0);l(IA);n=r(IA);i({target:IA,stat:!0,forced:cA},{reject:function reject(I){var g=tA(this);s(g.reject,void 0,I);return g.promise}});i({target:IA,stat:!0,forced:o||cA},{resolve:function resolve(I){return b(o&&this===n?EA:this,I)}});i({target:IA,stat:!0,forced:hA},{all:function all(I){var g=this,Q=tA(g),C=Q.resolve,E=Q.reject,n=q((function(){var Q=k(g.resolve),n=[],e=0,i=1;f(I,(function(I){var o=e++,t=!1;i++;s(Q,g,I).then((function(I){if(!t){t=!0;n[o]=I;--i||C(n)}}),E)}));--i||C(n)}));n.error&&E(n.value);return Q.promise},race:function race(I){var g=this,Q=tA(g),C=Q.reject,E=q((function(){var E=k(g.resolve);f(I,(function(I){s(E,g,I).then(Q.resolve,C)}))}));E.error&&C(E.value);return Q.promise}})},(I,g,Q)=>{var C=Q(4),E=Q(5).f,n=Q(42),e=Q(46),i=Q(36),o=Q(53),t=Q(64);I.exports=function(I,g){var Q,r,s,h,y,R=I.target,M=I.global,G=I.stat;if(Q=M?C:G?C[R]||i(R,{}):(C[R]||{}).prototype)for(r in g){h=g[r];s=I.noTargetGet?(y=E(Q,r))&&y.value:Q[r];if(!t(M?r:R+(G?".":"#")+r,I.forced)&&void 0!==s){if(typeof h==typeof s)continue;o(h,s)}(I.sham||s&&s.sham)&&n(h,"sham",!0);e(Q,r,h,I)}}},I=>{var check=function(I){return I&&I.Math==Math&&I};I.exports=check("object"==typeof globalThis&&globalThis)||check("object"==typeof window&&window)||check("object"==typeof self&&self)||check("object"==typeof global&&global)||function(){return this}()||Function("return this")()},(I,g,Q)=>{var C=Q(6),E=Q(8),n=Q(10),e=Q(11),i=Q(12),o=Q(17),t=Q(37),r=Q(40),s=Object.getOwnPropertyDescriptor;g.f=C?s:function getOwnPropertyDescriptor(I,g){I=i(I);g=o(g);if(r)try{return s(I,g)}catch(I){}if(t(I,g))return e(!E(n.f,I,g),I[g])}},(I,g,Q)=>{var C=Q(7);I.exports=!C((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},I=>{I.exports=function(I){try{return!!I()}catch(I){return!0}}},(I,g,Q)=>{var C=Q(9),E=Function.prototype.call;I.exports=C?E.bind(E):function(){return E.apply(E,arguments)}},(I,g,Q)=>{var C=Q(7);I.exports=!C((function(){var I=function(){}.bind();return"function"!=typeof I||I.hasOwnProperty("prototype")}))},(I,g)=>{"use strict";var Q={}.propertyIsEnumerable,C=Object.getOwnPropertyDescriptor,E=C&&!Q.call({1:2},1);g.f=E?function propertyIsEnumerable(I){var g=C(this,I);return!!g&&g.enumerable}:Q},I=>{I.exports=function(I,g){return{enumerable:!(1&I),configurable:!(2&I),writable:!(4&I),value:g}}},(I,g,Q)=>{var C=Q(13),E=Q(16);I.exports=function(I){return C(E(I))}},(I,g,Q)=>{var C=Q(4),E=Q(14),n=Q(7),e=Q(15),i=C.Object,o=E("".split);I.exports=n((function(){return!i("z").propertyIsEnumerable(0)}))?function(I){return"String"==e(I)?o(I,""):i(I)}:i},(I,g,Q)=>{var C=Q(9),E=Function.prototype,n=E.bind,e=E.call,i=C&&n.bind(e,e);I.exports=C?function(I){return I&&i(I)}:function(I){return I&&function(){return e.apply(I,arguments)}}},(I,g,Q)=>{var C=Q(14),E=C({}.toString),n=C("".slice);I.exports=function(I){return n(E(I),8,-1)}},(I,g,Q)=>{var C=Q(4).TypeError;I.exports=function(I){if(null==I)throw C("Can't call method on "+I);return I}},(I,g,Q)=>{var C=Q(18),E=Q(21);I.exports=function(I){var g=C(I,"string");return E(g)?g:g+""}},(I,g,Q)=>{var C=Q(4),E=Q(8),n=Q(19),e=Q(21),i=Q(28),o=Q(31),t=Q(32),r=C.TypeError,s=t("toPrimitive");I.exports=function(I,g){if(!n(I)||e(I))return I;var Q,C=i(I,s);if(C){void 0===g&&(g="default");Q=E(C,I,g);if(!n(Q)||e(Q))return Q;throw r("Can't convert object to primitive value")}void 0===g&&(g="number");return o(I,g)}},(I,g,Q)=>{var C=Q(20);I.exports=function(I){return"object"==typeof I?null!==I:C(I)}},I=>{I.exports=function(I){return"function"==typeof I}},(I,g,Q)=>{var C=Q(4),E=Q(22),n=Q(20),e=Q(23),i=Q(24),o=C.Object;I.exports=i?function(I){return"symbol"==typeof I}:function(I){var g=E("Symbol");return n(g)&&e(g.prototype,o(I))}},(I,g,Q)=>{var C=Q(4),E=Q(20),aFunction=function(I){return E(I)?I:void 0};I.exports=function(I,g){return arguments.length<2?aFunction(C[I]):C[I]&&C[I][g]}},(I,g,Q)=>{var C=Q(14);I.exports=C({}.isPrototypeOf)},(I,g,Q)=>{var C=Q(25);I.exports=C&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},(I,g,Q)=>{var C=Q(26),E=Q(7);I.exports=!!Object.getOwnPropertySymbols&&!E((function(){var I=Symbol();return!String(I)||!(Object(I)instanceof Symbol)||!Symbol.sham&&C&&C<41}))},(I,g,Q)=>{var C,E,n=Q(4),e=Q(27),i=n.process,o=n.Deno,t=i&&i.versions||o&&o.version,r=t&&t.v8;r&&(E=(C=r.split("."))[0]>0&&C[0]<4?1:+(C[0]+C[1]));!E&&e&&(!(C=e.match(/Edge\/(\d+)/))||C[1]>=74)&&(C=e.match(/Chrome\/(\d+)/))&&(E=+C[1]);I.exports=E},(I,g,Q)=>{var C=Q(22);I.exports=C("navigator","userAgent")||""},(I,g,Q)=>{var C=Q(29);I.exports=function(I,g){var Q=I[g];return null==Q?void 0:C(Q)}},(I,g,Q)=>{var C=Q(4),E=Q(20),n=Q(30),e=C.TypeError;I.exports=function(I){if(E(I))return I;throw e(n(I)+" is not a function")}},(I,g,Q)=>{var C=Q(4).String;I.exports=function(I){try{return C(I)}catch(I){return"Object"}}},(I,g,Q)=>{var C=Q(4),E=Q(8),n=Q(20),e=Q(19),i=C.TypeError;I.exports=function(I,g){var Q,C;if("string"===g&&n(Q=I.toString)&&!e(C=E(Q,I)))return C;if(n(Q=I.valueOf)&&!e(C=E(Q,I)))return C;if("string"!==g&&n(Q=I.toString)&&!e(C=E(Q,I)))return C;throw i("Can't convert object to primitive value")}},(I,g,Q)=>{var C=Q(4),E=Q(33),n=Q(37),e=Q(39),i=Q(25),o=Q(24),t=E("wks"),r=C.Symbol,s=r&&r.for,h=o?r:r&&r.withoutSetter||e;I.exports=function(I){if(!n(t,I)||!i&&"string"!=typeof t[I]){var g="Symbol."+I;i&&n(r,I)?t[I]=r[I]:t[I]=o&&s?s(g):h(g)}return t[I]}},(I,g,Q)=>{var C=Q(34),E=Q(35);(I.exports=function(I,g){return E[I]||(E[I]=void 0!==g?g:{})})("versions",[]).push({version:"3.21.0",mode:C?"pure":"global",copyright:"© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.21.0/LICENSE",source:"https://github.com/zloirock/core-js"})},I=>{I.exports=!1},(I,g,Q)=>{var C=Q(4),E=Q(36),n="__core-js_shared__",e=C[n]||E(n,{});I.exports=e},(I,g,Q)=>{var C=Q(4),E=Object.defineProperty;I.exports=function(I,g){try{E(C,I,{value:g,configurable:!0,writable:!0})}catch(Q){C[I]=g}return g}},(I,g,Q)=>{var C=Q(14),E=Q(38),n=C({}.hasOwnProperty);I.exports=Object.hasOwn||function hasOwn(I,g){return n(E(I),g)}},(I,g,Q)=>{var C=Q(4),E=Q(16),n=C.Object;I.exports=function(I){return n(E(I))}},(I,g,Q)=>{var C=Q(14),E=0,n=Math.random(),e=C(1..toString);I.exports=function(I){return"Symbol("+(void 0===I?"":I)+")_"+e(++E+n,36)}},(I,g,Q)=>{var C=Q(6),E=Q(7),n=Q(41);I.exports=!C&&!E((function(){return 7!=Object.defineProperty(n("div"),"a",{get:function(){return 7}}).a}))},(I,g,Q)=>{var C=Q(4),E=Q(19),n=C.document,e=E(n)&&E(n.createElement);I.exports=function(I){return e?n.createElement(I):{}}},(I,g,Q)=>{var C=Q(6),E=Q(43),n=Q(11);I.exports=C?function(I,g,Q){return E.f(I,g,n(1,Q))}:function(I,g,Q){I[g]=Q;return I}},(I,g,Q)=>{var C=Q(4),E=Q(6),n=Q(40),e=Q(44),i=Q(45),o=Q(17),t=C.TypeError,r=Object.defineProperty,s=Object.getOwnPropertyDescriptor,h="enumerable",y="configurable",R="writable";g.f=E?e?function defineProperty(I,g,Q){i(I);g=o(g);i(Q);if("function"==typeof I&&"prototype"===g&&"value"in Q&&R in Q&&!Q.writable){var C=s(I,g);if(C&&C.writable){I[g]=Q.value;Q={configurable:y in Q?Q.configurable:C.configurable,enumerable:h in Q?Q.enumerable:C.enumerable,writable:!1}}}return r(I,g,Q)}:r:function defineProperty(I,g,Q){i(I);g=o(g);i(Q);if(n)try{return r(I,g,Q)}catch(I){}if("get"in Q||"set"in Q)throw t("Accessors not supported");"value"in Q&&(I[g]=Q.value);return I}},(I,g,Q)=>{var C=Q(6),E=Q(7);I.exports=C&&E((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},(I,g,Q)=>{var C=Q(4),E=Q(19),n=C.String,e=C.TypeError;I.exports=function(I){if(E(I))return I;throw e(n(I)+" is not an object")}},(I,g,Q)=>{var C=Q(4),E=Q(20),n=Q(37),e=Q(42),i=Q(36),o=Q(47),t=Q(48),r=Q(52).CONFIGURABLE,s=t.get,h=t.enforce,y=String(String).split("String");(I.exports=function(I,g,Q,o){var t,s=!!o&&!!o.unsafe,R=!!o&&!!o.enumerable,M=!!o&&!!o.noTargetGet,G=o&&void 0!==o.name?o.name:g;if(E(Q)){"Symbol("===String(G).slice(0,7)&&(G="["+String(G).replace(/^Symbol\(([^)]*)\)/,"$1")+"]");(!n(Q,"name")||r&&Q.name!==G)&&e(Q,"name",G);(t=h(Q)).source||(t.source=y.join("string"==typeof G?G:""))}if(I!==C){s?!M&&I[g]&&(R=!0):delete I[g];R?I[g]=Q:e(I,g,Q)}else R?I[g]=Q:i(g,Q)})(Function.prototype,"toString",(function toString(){return E(this)&&s(this).source||o(this)}))},(I,g,Q)=>{var C=Q(14),E=Q(20),n=Q(35),e=C(Function.toString);E(n.inspectSource)||(n.inspectSource=function(I){return e(I)});I.exports=n.inspectSource},(I,g,Q)=>{var C,E,n,e=Q(49),i=Q(4),o=Q(14),t=Q(19),r=Q(42),s=Q(37),h=Q(35),y=Q(50),R=Q(51),M="Object already initialized",G=i.TypeError,l=i.WeakMap;if(e||h.state){var k=h.state||(h.state=new l),u=o(k.get),N=o(k.has),U=o(k.set);C=function(I,g){if(N(k,I))throw new G(M);g.facade=I;U(k,I,g);return g};E=function(I){return u(k,I)||{}};n=function(I){return N(k,I)}}else{var p=y("state");R[p]=!0;C=function(I,g){if(s(I,p))throw new G(M);g.facade=I;r(I,p,g);return g};E=function(I){return s(I,p)?I[p]:{}};n=function(I){return s(I,p)}}I.exports={set:C,get:E,has:n,enforce:function(I){return n(I)?E(I):C(I,{})},getterFor:function(I){return function(g){var Q;if(!t(g)||(Q=E(g)).type!==I)throw G("Incompatible receiver, "+I+" required");return Q}}}},(I,g,Q)=>{var C=Q(4),E=Q(20),n=Q(47),e=C.WeakMap;I.exports=E(e)&&/native code/.test(n(e))},(I,g,Q)=>{var C=Q(33),E=Q(39),n=C("keys");I.exports=function(I){return n[I]||(n[I]=E(I))}},I=>{I.exports={}},(I,g,Q)=>{var C=Q(6),E=Q(37),n=Function.prototype,e=C&&Object.getOwnPropertyDescriptor,i=E(n,"name"),o=i&&"something"===function something(){}.name,t=i&&(!C||C&&e(n,"name").configurable);I.exports={EXISTS:i,PROPER:o,CONFIGURABLE:t}},(I,g,Q)=>{var C=Q(37),E=Q(54),n=Q(5),e=Q(43);I.exports=function(I,g,Q){for(var i=E(g),o=e.f,t=n.f,r=0;r<i.length;r++){var s=i[r];C(I,s)||Q&&C(Q,s)||o(I,s,t(g,s))}}},(I,g,Q)=>{var C=Q(22),E=Q(14),n=Q(55),e=Q(63),i=Q(45),o=E([].concat);I.exports=C("Reflect","ownKeys")||function ownKeys(I){var g=n.f(i(I)),Q=e.f;return Q?o(g,Q(I)):g}},(I,g,Q)=>{var C=Q(56),E=Q(62).concat("length","prototype");g.f=Object.getOwnPropertyNames||function getOwnPropertyNames(I){return C(I,E)}},(I,g,Q)=>{var C=Q(14),E=Q(37),n=Q(12),e=Q(57).indexOf,i=Q(51),o=C([].push);I.exports=function(I,g){var Q,C=n(I),t=0,r=[];for(Q in C)!E(i,Q)&&E(C,Q)&&o(r,Q);for(;g.length>t;)E(C,Q=g[t++])&&(~e(r,Q)||o(r,Q));return r}},(I,g,Q)=>{var C=Q(12),E=Q(58),n=Q(60),createMethod=function(I){return function(g,Q,e){var i,o=C(g),t=n(o),r=E(e,t);if(I&&Q!=Q){for(;t>r;)if((i=o[r++])!=i)return!0}else for(;t>r;r++)if((I||r in o)&&o[r]===Q)return I||r||0;return!I&&-1}};I.exports={includes:createMethod(!0),indexOf:createMethod(!1)}},(I,g,Q)=>{var C=Q(59),E=Math.max,n=Math.min;I.exports=function(I,g){var Q=C(I);return Q<0?E(Q+g,0):n(Q,g)}},I=>{var g=Math.ceil,Q=Math.floor;I.exports=function(I){var C=+I;return C!=C||0===C?0:(C>0?Q:g)(C)}},(I,g,Q)=>{var C=Q(61);I.exports=function(I){return C(I.length)}},(I,g,Q)=>{var C=Q(59),E=Math.min;I.exports=function(I){return I>0?E(C(I),9007199254740991):0}},I=>{I.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},(I,g)=>{g.f=Object.getOwnPropertySymbols},(I,g,Q)=>{var C=Q(7),E=Q(20),n=/#|\.prototype\./,isForced=function(I,g){var Q=i[e(I)];return Q==t||Q!=o&&(E(g)?C(g):!!g)},e=isForced.normalize=function(I){return String(I).replace(n,".").toLowerCase()},i=isForced.data={},o=isForced.NATIVE="N",t=isForced.POLYFILL="P";I.exports=isForced},(I,g,Q)=>{var C=Q(4);I.exports=C.Promise},(I,g,Q)=>{var C=Q(46);I.exports=function(I,g,Q){for(var E in g)C(I,E,g[E],Q);return I}},(I,g,Q)=>{var C=Q(14),E=Q(45),n=Q(68);I.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var I,g=!1,Q={};try{(I=C(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(Q,[]);g=Q instanceof Array}catch(I){}return function setPrototypeOf(Q,C){E(Q);n(C);g?I(Q,C):Q.__proto__=C;return Q}}():void 0)},(I,g,Q)=>{var C=Q(4),E=Q(20),n=C.String,e=C.TypeError;I.exports=function(I){if("object"==typeof I||E(I))return I;throw e("Can't set "+n(I)+" as a prototype")}},(I,g,Q)=>{var C=Q(43).f,E=Q(37),n=Q(32)("toStringTag");I.exports=function(I,g,Q){I&&!Q&&(I=I.prototype);I&&!E(I,n)&&C(I,n,{configurable:!0,value:g})}},(I,g,Q)=>{"use strict";var C=Q(22),E=Q(43),n=Q(32),e=Q(6),i=n("species");I.exports=function(I){var g=C(I),Q=E.f;e&&g&&!g[i]&&Q(g,i,{configurable:!0,get:function(){return this}})}},(I,g,Q)=>{var C=Q(4),E=Q(23),n=C.TypeError;I.exports=function(I,g){if(E(g,I))return I;throw n("Incorrect invocation")}},(I,g,Q)=>{var C=Q(4),E=Q(73),n=Q(8),e=Q(45),i=Q(30),o=Q(74),t=Q(60),r=Q(23),s=Q(76),h=Q(77),y=Q(80),R=C.TypeError,Result=function(I,g){this.stopped=I;this.result=g},M=Result.prototype;I.exports=function(I,g,Q){var C,G,l,k,u,N,U,p=Q&&Q.that,f=!(!Q||!Q.AS_ENTRIES),J=!(!Q||!Q.IS_ITERATOR),Y=!(!Q||!Q.INTERRUPTED),_=E(g,p),stop=function(I){C&&y(C,"normal",I);return new Result(!0,I)},callFn=function(I){if(f){e(I);return Y?_(I[0],I[1],stop):_(I[0],I[1])}return Y?_(I,stop):_(I)};if(J)C=I;else{if(!(G=h(I)))throw R(i(I)+" is not iterable");if(o(G)){for(l=0,k=t(I);k>l;l++)if((u=callFn(I[l]))&&r(M,u))return u;return new Result(!1)}C=s(I,G)}N=C.next;for(;!(U=n(N,C)).done;){try{u=callFn(U.value)}catch(I){y(C,"throw",I)}if("object"==typeof u&&u&&r(M,u))return u}return new Result(!1)}},(I,g,Q)=>{var C=Q(14),E=Q(29),n=Q(9),e=C(C.bind);I.exports=function(I,g){E(I);return void 0===g?I:n?e(I,g):function(){return I.apply(g,arguments)}}},(I,g,Q)=>{var C=Q(32),E=Q(75),n=C("iterator"),e=Array.prototype;I.exports=function(I){return void 0!==I&&(E.Array===I||e[n]===I)}},I=>{I.exports={}},(I,g,Q)=>{var C=Q(4),E=Q(8),n=Q(29),e=Q(45),i=Q(30),o=Q(77),t=C.TypeError;I.exports=function(I,g){var Q=arguments.length<2?o(I):g;if(n(Q))return e(E(Q,I));throw t(i(I)+" is not iterable")}},(I,g,Q)=>{var C=Q(78),E=Q(28),n=Q(75),e=Q(32)("iterator");I.exports=function(I){if(null!=I)return E(I,e)||E(I,"@@iterator")||n[C(I)]}},(I,g,Q)=>{var C=Q(4),E=Q(79),n=Q(20),e=Q(15),i=Q(32)("toStringTag"),o=C.Object,t="Arguments"==e(function(){return arguments}());I.exports=E?e:function(I){var g,Q,C;return void 0===I?"Undefined":null===I?"Null":"string"==typeof(Q=function(I,g){try{return I[g]}catch(I){}}(g=o(I),i))?Q:t?e(g):"Object"==(C=e(g))&&n(g.callee)?"Arguments":C}},(I,g,Q)=>{var C={};C[Q(32)("toStringTag")]="z";I.exports="[object z]"===String(C)},(I,g,Q)=>{var C=Q(8),E=Q(45),n=Q(28);I.exports=function(I,g,Q){var e,i;E(I);try{if(!(e=n(I,"return"))){if("throw"===g)throw Q;return Q}e=C(e,I)}catch(I){i=!0;e=I}if("throw"===g)throw Q;if(i)throw e;E(e);return Q}},(I,g,Q)=>{var C=Q(32)("iterator"),E=!1;try{var n=0,e={next:function(){return{done:!!n++}},return:function(){E=!0}};e[C]=function(){return this};Array.from(e,(function(){throw 2}))}catch(I){}I.exports=function(I,g){if(!g&&!E)return!1;var Q=!1;try{var n={};n[C]=function(){return{next:function(){return{done:Q=!0}}}};I(n)}catch(I){}return Q}},(I,g,Q)=>{var C=Q(45),E=Q(83),n=Q(32)("species");I.exports=function(I,g){var Q,e=C(I).constructor;return void 0===e||null==(Q=C(e)[n])?g:E(Q)}},(I,g,Q)=>{var C=Q(4),E=Q(84),n=Q(30),e=C.TypeError;I.exports=function(I){if(E(I))return I;throw e(n(I)+" is not a constructor")}},(I,g,Q)=>{var C=Q(14),E=Q(7),n=Q(20),e=Q(78),i=Q(22),o=Q(47),noop=function(){},t=[],r=i("Reflect","construct"),s=/^\s*(?:class|function)\b/,h=C(s.exec),y=!s.exec(noop),R=function isConstructor(I){if(!n(I))return!1;try{r(noop,t,I);return!0}catch(I){return!1}},M=function isConstructor(I){if(!n(I))return!1;switch(e(I)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}try{return y||!!h(s,o(I))}catch(I){return!0}};M.sham=!0;I.exports=!r||E((function(){var I;return R(R.call)||!R(Object)||!R((function(){I=!0}))||I}))?M:R},(I,g,Q)=>{var C,E,n,e,i=Q(4),o=Q(86),t=Q(73),r=Q(20),s=Q(37),h=Q(7),y=Q(87),R=Q(88),M=Q(41),G=Q(89),l=Q(90),k=Q(91),u=i.setImmediate,N=i.clearImmediate,U=i.process,p=i.Dispatch,f=i.Function,J=i.MessageChannel,Y=i.String,_=0,m={},b="onreadystatechange";try{C=i.location}catch(I){}var run=function(I){if(s(m,I)){var g=m[I];delete m[I];g()}},runner=function(I){return function(){run(I)}},listener=function(I){run(I.data)},post=function(I){i.postMessage(Y(I),C.protocol+"//"+C.host)};if(!u||!N){u=function setImmediate(I){G(arguments.length,1);var g=r(I)?I:f(I),Q=R(arguments,1);m[++_]=function(){o(g,void 0,Q)};E(_);return _};N=function clearImmediate(I){delete m[I]};if(k)E=function(I){U.nextTick(runner(I))};else if(p&&p.now)E=function(I){p.now(runner(I))};else if(J&&!l){e=(n=new J).port2;n.port1.onmessage=listener;E=t(e.postMessage,e)}else if(i.addEventListener&&r(i.postMessage)&&!i.importScripts&&C&&"file:"!==C.protocol&&!h(post)){E=post;i.addEventListener("message",listener,!1)}else E=b in M("script")?function(I){y.appendChild(M("script")).onreadystatechange=function(){y.removeChild(this);run(I)}}:function(I){setTimeout(runner(I),0)}}I.exports={set:u,clear:N}},(I,g,Q)=>{var C=Q(9),E=Function.prototype,n=E.apply,e=E.call;I.exports="object"==typeof Reflect&&Reflect.apply||(C?e.bind(n):function(){return e.apply(n,arguments)})},(I,g,Q)=>{var C=Q(22);I.exports=C("document","documentElement")},(I,g,Q)=>{var C=Q(14);I.exports=C([].slice)},(I,g,Q)=>{var C=Q(4).TypeError;I.exports=function(I,g){if(I<g)throw C("Not enough arguments");return I}},(I,g,Q)=>{var C=Q(27);I.exports=/(?:ipad|iphone|ipod).*applewebkit/i.test(C)},(I,g,Q)=>{var C=Q(15),E=Q(4);I.exports="process"==C(E.process)},(I,g,Q)=>{var C,E,n,e,i,o,t,r,s=Q(4),h=Q(73),y=Q(5).f,R=Q(85).set,M=Q(90),G=Q(93),l=Q(94),k=Q(91),u=s.MutationObserver||s.WebKitMutationObserver,N=s.document,U=s.process,p=s.Promise,f=y(s,"queueMicrotask"),J=f&&f.value;if(!J){C=function(){var I,g;k&&(I=U.domain)&&I.exit();for(;E;){g=E.fn;E=E.next;try{g()}catch(I){E?e():n=void 0;throw I}}n=void 0;I&&I.enter()};if(M||k||l||!u||!N)if(!G&&p&&p.resolve){(t=p.resolve(void 0)).constructor=p;r=h(t.then,t);e=function(){r(C)}}else if(k)e=function(){U.nextTick(C)};else{R=h(R,s);e=function(){R(C)}}else{i=!0;o=N.createTextNode("");new u(C).observe(o,{characterData:!0});e=function(){o.data=i=!i}}}I.exports=J||function(I){var g={fn:I,next:void 0};n&&(n.next=g);if(!E){E=g;e()}n=g}},(I,g,Q)=>{var C=Q(27),E=Q(4);I.exports=/ipad|iphone|ipod/i.test(C)&&void 0!==E.Pebble},(I,g,Q)=>{var C=Q(27);I.exports=/web0s(?!.*chrome)/i.test(C)},(I,g,Q)=>{var C=Q(45),E=Q(19),n=Q(96);I.exports=function(I,g){C(I);if(E(g)&&g.constructor===I)return g;var Q=n.f(I);(0,Q.resolve)(g);return Q.promise}},(I,g,Q)=>{"use strict";var C=Q(29),PromiseCapability=function(I){var g,Q;this.promise=new I((function(I,C){if(void 0!==g||void 0!==Q)throw TypeError("Bad Promise constructor");g=I;Q=C}));this.resolve=C(g);this.reject=C(Q)};I.exports.f=function(I){return new PromiseCapability(I)}},(I,g,Q)=>{var C=Q(4);I.exports=function(I,g){var Q=C.console;Q&&Q.error&&(1==arguments.length?Q.error(I):Q.error(I,g))}},I=>{I.exports=function(I){try{return{error:!1,value:I()}}catch(I){return{error:!0,value:I}}}},I=>{var Queue=function(){this.head=null;this.tail=null};Queue.prototype={add:function(I){var g={item:I,next:null};this.head?this.tail.next=g:this.head=g;this.tail=g},get:function(){var I=this.head;if(I){this.head=I.next;this.tail===I&&(this.tail=null);return I.item}}};I.exports=Queue},I=>{I.exports="object"==typeof window},(I,g,Q)=>{Q(102)("Int8",(function(I){return function Int8Array(g,Q,C){return I(this,g,Q,C)}}))},(I,g,Q)=>{"use strict";var C=Q(3),E=Q(4),n=Q(8),e=Q(6),i=Q(103),o=Q(104),t=Q(108),r=Q(71),s=Q(11),h=Q(42),y=Q(114),R=Q(61),M=Q(109),G=Q(115),l=Q(17),k=Q(37),u=Q(78),N=Q(19),U=Q(21),p=Q(117),f=Q(23),J=Q(67),Y=Q(55).f,_=Q(120),m=Q(121).forEach,b=Q(70),x=Q(43),v=Q(5),q=Q(48),O=Q(125),T=q.get,P=q.set,j=x.f,X=v.f,z=Math.round,$=E.RangeError,AA=t.ArrayBuffer,IA=AA.prototype,gA=t.DataView,QA=o.NATIVE_ARRAY_BUFFER_VIEWS,CA=o.TYPED_ARRAY_CONSTRUCTOR,BA=o.TYPED_ARRAY_TAG,EA=o.TypedArray,nA=o.TypedArrayPrototype,eA=o.aTypedArrayConstructor,iA=o.isTypedArray,oA="BYTES_PER_ELEMENT",tA="Wrong length",fromList=function(I,g){eA(I);for(var Q=0,C=g.length,E=new I(C);C>Q;)E[Q]=g[Q++];return E},addGetter=function(I,g){j(I,g,{get:function(){return T(this)[g]}})},isArrayBuffer=function(I){var g;return f(IA,I)||"ArrayBuffer"==(g=u(I))||"SharedArrayBuffer"==g},isTypedArrayIndex=function(I,g){return iA(I)&&!U(g)&&g in I&&y(+g)&&g>=0},rA=function getOwnPropertyDescriptor(I,g){g=l(g);return isTypedArrayIndex(I,g)?s(2,I[g]):X(I,g)},DA=function defineProperty(I,g,Q){g=l(g);if(isTypedArrayIndex(I,g)&&N(Q)&&k(Q,"value")&&!k(Q,"get")&&!k(Q,"set")&&!Q.configurable&&(!k(Q,"writable")||Q.writable)&&(!k(Q,"enumerable")||Q.enumerable)){I[g]=Q.value;return I}return j(I,g,Q)};if(e){if(!QA){v.f=rA;x.f=DA;addGetter(nA,"buffer");addGetter(nA,"byteOffset");addGetter(nA,"byteLength");addGetter(nA,"length")}C({target:"Object",stat:!0,forced:!QA},{getOwnPropertyDescriptor:rA,defineProperty:DA});I.exports=function(I,g,Q){var e=I.match(/\d+$/)[0]/8,o=I+(Q?"Clamped":"")+"Array",t="get"+I,s="set"+I,y=E[o],l=y,k=l&&l.prototype,u={},addElement=function(I,g){j(I,g,{get:function(){return function(I,g){var Q=T(I);return Q.view[t](g*e+Q.byteOffset,!0)}(this,g)},set:function(I){return function(I,g,C){var E=T(I);Q&&(C=(C=z(C))<0?0:C>255?255:255&C);E.view[s](g*e+E.byteOffset,C,!0)}(this,g,I)},enumerable:!0})};if(QA){if(i){l=g((function(I,g,Q,C){r(I,k);return O(N(g)?isArrayBuffer(g)?void 0!==C?new y(g,G(Q,e),C):void 0!==Q?new y(g,G(Q,e)):new y(g):iA(g)?fromList(l,g):n(_,l,g):new y(M(g)),I,l)}));J&&J(l,EA);m(Y(y),(function(I){I in l||h(l,I,y[I])}));l.prototype=k}}else{l=g((function(I,g,Q,C){r(I,k);var E,i,o,t=0,s=0;if(N(g)){if(!isArrayBuffer(g))return iA(g)?fromList(l,g):n(_,l,g);E=g;s=G(Q,e);var h=g.byteLength;if(void 0===C){if(h%e)throw $(tA);if((i=h-s)<0)throw $(tA)}else if((i=R(C)*e)+s>h)throw $(tA);o=i/e}else{o=M(g);E=new AA(i=o*e)}P(I,{buffer:E,byteOffset:s,byteLength:i,length:o,view:new gA(E)});for(;t<o;)addElement(I,t++)}));J&&J(l,EA);k=l.prototype=p(nA)}k.constructor!==l&&h(k,"constructor",l);h(k,CA,l);BA&&h(k,BA,o);u[o]=l;C({global:!0,forced:l!=y,sham:!QA},u);oA in l||h(l,oA,e);oA in k||h(k,oA,e);b(o)}}else I.exports=function(){}},(I,g,Q)=>{var C=Q(4),E=Q(7),n=Q(81),e=Q(104).NATIVE_ARRAY_BUFFER_VIEWS,i=C.ArrayBuffer,o=C.Int8Array;I.exports=!e||!E((function(){o(1)}))||!E((function(){new o(-1)}))||!n((function(I){new o;new o(null);new o(1.5);new o(I)}),!0)||E((function(){return 1!==new o(new i(2),1,void 0).length}))},(I,g,Q)=>{"use strict";var C,E,n,e=Q(105),i=Q(6),o=Q(4),t=Q(20),r=Q(19),s=Q(37),h=Q(78),y=Q(30),R=Q(42),M=Q(46),G=Q(43).f,l=Q(23),k=Q(106),u=Q(67),N=Q(32),U=Q(39),p=o.Int8Array,f=p&&p.prototype,J=o.Uint8ClampedArray,Y=J&&J.prototype,_=p&&k(p),m=f&&k(f),b=Object.prototype,x=o.TypeError,v=N("toStringTag"),q=U("TYPED_ARRAY_TAG"),O=U("TYPED_ARRAY_CONSTRUCTOR"),T=e&&!!u&&"Opera"!==h(o.opera),P=!1,j={Int8Array:1,Uint8Array:1,Uint8ClampedArray:1,Int16Array:2,Uint16Array:2,Int32Array:4,Uint32Array:4,Float32Array:4,Float64Array:8},X={BigInt64Array:8,BigUint64Array:8},isTypedArray=function(I){if(!r(I))return!1;var g=h(I);return s(j,g)||s(X,g)};for(C in j)(n=(E=o[C])&&E.prototype)?R(n,O,E):T=!1;for(C in X)(n=(E=o[C])&&E.prototype)&&R(n,O,E);if(!T||!t(_)||_===Function.prototype){_=function TypedArray(){throw x("Incorrect invocation")};if(T)for(C in j)o[C]&&u(o[C],_)}if(!T||!m||m===b){m=_.prototype;if(T)for(C in j)o[C]&&u(o[C].prototype,m)}T&&k(Y)!==m&&u(Y,m);if(i&&!s(m,v)){P=!0;G(m,v,{get:function(){return r(this)?this[q]:void 0}});for(C in j)o[C]&&R(o[C],q,C)}I.exports={NATIVE_ARRAY_BUFFER_VIEWS:T,TYPED_ARRAY_CONSTRUCTOR:O,TYPED_ARRAY_TAG:P&&q,aTypedArray:function(I){if(isTypedArray(I))return I;throw x("Target is not a typed array")},aTypedArrayConstructor:function(I){if(t(I)&&(!u||l(_,I)))return I;throw x(y(I)+" is not a typed array constructor")},exportTypedArrayMethod:function(I,g,Q,C){if(i){if(Q)for(var E in j){var n=o[E];if(n&&s(n.prototype,I))try{delete n.prototype[I]}catch(Q){try{n.prototype[I]=g}catch(I){}}}m[I]&&!Q||M(m,I,Q?g:T&&f[I]||g,C)}},exportTypedArrayStaticMethod:function(I,g,Q){var C,E;if(i){if(u){if(Q)for(C in j)if((E=o[C])&&s(E,I))try{delete E[I]}catch(I){}if(_[I]&&!Q)return;try{return M(_,I,Q?g:T&&_[I]||g)}catch(I){}}for(C in j)!(E=o[C])||E[I]&&!Q||M(E,I,g)}},isView:function isView(I){if(!r(I))return!1;var g=h(I);return"DataView"===g||s(j,g)||s(X,g)},isTypedArray:isTypedArray,TypedArray:_,TypedArrayPrototype:m}},I=>{I.exports="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof DataView},(I,g,Q)=>{var C=Q(4),E=Q(37),n=Q(20),e=Q(38),i=Q(50),o=Q(107),t=i("IE_PROTO"),r=C.Object,s=r.prototype;I.exports=o?r.getPrototypeOf:function(I){var g=e(I);if(E(g,t))return g[t];var Q=g.constructor;return n(Q)&&g instanceof Q?Q.prototype:g instanceof r?s:null}},(I,g,Q)=>{var C=Q(7);I.exports=!C((function(){function F(){}F.prototype.constructor=null;return Object.getPrototypeOf(new F)!==F.prototype}))},(I,g,Q)=>{"use strict";var C=Q(4),E=Q(14),n=Q(6),e=Q(105),i=Q(52),o=Q(42),t=Q(66),r=Q(7),s=Q(71),h=Q(59),y=Q(61),R=Q(109),M=Q(110),G=Q(106),l=Q(67),k=Q(55).f,u=Q(43).f,N=Q(111),U=Q(112),p=Q(69),f=Q(48),J=i.PROPER,Y=i.CONFIGURABLE,_=f.get,m=f.set,b="ArrayBuffer",x="DataView",v="Wrong index",q=C.ArrayBuffer,O=q,T=O&&O.prototype,P=C.DataView,j=P&&P.prototype,X=Object.prototype,z=C.Array,$=C.RangeError,AA=E(N),IA=E([].reverse),gA=M.pack,QA=M.unpack,packInt8=function(I){return[255&I]},packInt16=function(I){return[255&I,I>>8&255]},packInt32=function(I){return[255&I,I>>8&255,I>>16&255,I>>24&255]},unpackInt32=function(I){return I[3]<<24|I[2]<<16|I[1]<<8|I[0]},packFloat32=function(I){return gA(I,23,4)},packFloat64=function(I){return gA(I,52,8)},addGetter=function(I,g){u(I.prototype,g,{get:function(){return _(this)[g]}})},get=function(I,g,Q,C){var E=R(Q),n=_(I);if(E+g>n.byteLength)throw $(v);var e=_(n.buffer).bytes,i=E+n.byteOffset,o=U(e,i,i+g);return C?o:IA(o)},set=function(I,g,Q,C,E,n){var e=R(Q),i=_(I);if(e+g>i.byteLength)throw $(v);for(var o=_(i.buffer).bytes,t=e+i.byteOffset,r=C(+E),s=0;s<g;s++)o[t+s]=r[n?s:g-s-1]};if(e){var CA=J&&q.name!==b;if(r((function(){q(1)}))&&r((function(){new q(-1)}))&&!r((function(){new q;new q(1.5);new q(NaN);return CA&&!Y})))CA&&Y&&o(q,"name",b);else{(O=function ArrayBuffer(I){s(this,T);return new q(R(I))}).prototype=T;for(var BA,EA=k(q),nA=0;EA.length>nA;)(BA=EA[nA++])in O||o(O,BA,q[BA]);T.constructor=O}l&&G(j)!==X&&l(j,X);var eA=new P(new O(2)),iA=E(j.setInt8);eA.setInt8(0,2147483648);eA.setInt8(1,2147483649);!eA.getInt8(0)&&eA.getInt8(1)||t(j,{setInt8:function setInt8(I,g){iA(this,I,g<<24>>24)},setUint8:function setUint8(I,g){iA(this,I,g<<24>>24)}},{unsafe:!0})}else{T=(O=function ArrayBuffer(I){s(this,T);var g=R(I);m(this,{bytes:AA(z(g),0),byteLength:g});n||(this.byteLength=g)}).prototype;j=(P=function DataView(I,g,Q){s(this,j);s(I,T);var C=_(I).byteLength,E=h(g);if(E<0||E>C)throw $("Wrong offset");if(E+(Q=void 0===Q?C-E:y(Q))>C)throw $("Wrong length");m(this,{buffer:I,byteLength:Q,byteOffset:E});if(!n){this.buffer=I;this.byteLength=Q;this.byteOffset=E}}).prototype;if(n){addGetter(O,"byteLength");addGetter(P,"buffer");addGetter(P,"byteLength");addGetter(P,"byteOffset")}t(j,{getInt8:function getInt8(I){return get(this,1,I)[0]<<24>>24},getUint8:function getUint8(I){return get(this,1,I)[0]},getInt16:function getInt16(I){var g=get(this,2,I,arguments.length>1?arguments[1]:void 0);return(g[1]<<8|g[0])<<16>>16},getUint16:function getUint16(I){var g=get(this,2,I,arguments.length>1?arguments[1]:void 0);return g[1]<<8|g[0]},getInt32:function getInt32(I){return unpackInt32(get(this,4,I,arguments.length>1?arguments[1]:void 0))},getUint32:function getUint32(I){return unpackInt32(get(this,4,I,arguments.length>1?arguments[1]:void 0))>>>0},getFloat32:function getFloat32(I){return QA(get(this,4,I,arguments.length>1?arguments[1]:void 0),23)},getFloat64:function getFloat64(I){return QA(get(this,8,I,arguments.length>1?arguments[1]:void 0),52)},setInt8:function setInt8(I,g){set(this,1,I,packInt8,g)},setUint8:function setUint8(I,g){set(this,1,I,packInt8,g)},setInt16:function setInt16(I,g){set(this,2,I,packInt16,g,arguments.length>2?arguments[2]:void 0)},setUint16:function setUint16(I,g){set(this,2,I,packInt16,g,arguments.length>2?arguments[2]:void 0)},setInt32:function setInt32(I,g){set(this,4,I,packInt32,g,arguments.length>2?arguments[2]:void 0)},setUint32:function setUint32(I,g){set(this,4,I,packInt32,g,arguments.length>2?arguments[2]:void 0)},setFloat32:function setFloat32(I,g){set(this,4,I,packFloat32,g,arguments.length>2?arguments[2]:void 0)},setFloat64:function setFloat64(I,g){set(this,8,I,packFloat64,g,arguments.length>2?arguments[2]:void 0)}})}p(O,b);p(P,x);I.exports={ArrayBuffer:O,DataView:P}},(I,g,Q)=>{var C=Q(4),E=Q(59),n=Q(61),e=C.RangeError;I.exports=function(I){if(void 0===I)return 0;var g=E(I),Q=n(g);if(g!==Q)throw e("Wrong length or index");return Q}},(I,g,Q)=>{var C=Q(4).Array,E=Math.abs,n=Math.pow,e=Math.floor,i=Math.log,o=Math.LN2;I.exports={pack:function(I,g,Q){var t,r,s,h=C(Q),y=8*Q-g-1,R=(1<<y)-1,M=R>>1,G=23===g?n(2,-24)-n(2,-77):0,l=I<0||0===I&&1/I<0?1:0,k=0;if((I=E(I))!=I||I===1/0){r=I!=I?1:0;t=R}else{t=e(i(I)/o);if(I*(s=n(2,-t))<1){t--;s*=2}if((I+=t+M>=1?G/s:G*n(2,1-M))*s>=2){t++;s/=2}if(t+M>=R){r=0;t=R}else if(t+M>=1){r=(I*s-1)*n(2,g);t+=M}else{r=I*n(2,M-1)*n(2,g);t=0}}for(;g>=8;){h[k++]=255&r;r/=256;g-=8}t=t<<g|r;y+=g;for(;y>0;){h[k++]=255&t;t/=256;y-=8}h[--k]|=128*l;return h},unpack:function(I,g){var Q,C=I.length,E=8*C-g-1,e=(1<<E)-1,i=e>>1,o=E-7,t=C-1,r=I[t--],s=127&r;r>>=7;for(;o>0;){s=256*s+I[t--];o-=8}Q=s&(1<<-o)-1;s>>=-o;o+=g;for(;o>0;){Q=256*Q+I[t--];o-=8}if(0===s)s=1-i;else{if(s===e)return Q?NaN:r?-1/0:1/0;Q+=n(2,g);s-=i}return(r?-1:1)*Q*n(2,s-g)}}},(I,g,Q)=>{"use strict";var C=Q(38),E=Q(58),n=Q(60);I.exports=function fill(I){for(var g=C(this),Q=n(g),e=arguments.length,i=E(e>1?arguments[1]:void 0,Q),o=e>2?arguments[2]:void 0,t=void 0===o?Q:E(o,Q);t>i;)g[i++]=I;return g}},(I,g,Q)=>{var C=Q(4),E=Q(58),n=Q(60),e=Q(113),i=C.Array,o=Math.max;I.exports=function(I,g,Q){for(var C=n(I),t=E(g,C),r=E(void 0===Q?C:Q,C),s=i(o(r-t,0)),h=0;t<r;t++,h++)e(s,h,I[t]);s.length=h;return s}},(I,g,Q)=>{"use strict";var C=Q(17),E=Q(43),n=Q(11);I.exports=function(I,g,Q){var e=C(g);e in I?E.f(I,e,n(0,Q)):I[e]=Q}},(I,g,Q)=>{var C=Q(19),E=Math.floor;I.exports=Number.isInteger||function isInteger(I){return!C(I)&&isFinite(I)&&E(I)===I}},(I,g,Q)=>{var C=Q(4),E=Q(116),n=C.RangeError;I.exports=function(I,g){var Q=E(I);if(Q%g)throw n("Wrong offset");return Q}},(I,g,Q)=>{var C=Q(4),E=Q(59),n=C.RangeError;I.exports=function(I){var g=E(I);if(g<0)throw n("The argument can't be less than 0");return g}},(I,g,Q)=>{var C,E=Q(45),n=Q(118),e=Q(62),i=Q(51),o=Q(87),t=Q(41),r=Q(50),s=r("IE_PROTO"),EmptyConstructor=function(){},scriptTag=function(I){return"<script>"+I+"</"+"script>"},NullProtoObjectViaActiveX=function(I){I.write(scriptTag(""));I.close();var g=I.parentWindow.Object;I=null;return g},NullProtoObject=function(){try{C=new ActiveXObject("htmlfile")}catch(I){}NullProtoObject="undefined"!=typeof document?document.domain&&C?NullProtoObjectViaActiveX(C):function(){var I,g=t("iframe");g.style.display="none";o.appendChild(g);g.src=String("javascript:");(I=g.contentWindow.document).open();I.write(scriptTag("document.F=Object"));I.close();return I.F}():NullProtoObjectViaActiveX(C);for(var I=e.length;I--;)delete NullProtoObject.prototype[e[I]];return NullProtoObject()};i[s]=!0;I.exports=Object.create||function create(I,g){var Q;if(null!==I){EmptyConstructor.prototype=E(I);Q=new EmptyConstructor;EmptyConstructor.prototype=null;Q[s]=I}else Q=NullProtoObject();return void 0===g?Q:n.f(Q,g)}},(I,g,Q)=>{var C=Q(6),E=Q(44),n=Q(43),e=Q(45),i=Q(12),o=Q(119);g.f=C&&!E?Object.defineProperties:function defineProperties(I,g){e(I);for(var Q,C=i(g),E=o(g),t=E.length,r=0;t>r;)n.f(I,Q=E[r++],C[Q]);return I}},(I,g,Q)=>{var C=Q(56),E=Q(62);I.exports=Object.keys||function keys(I){return C(I,E)}},(I,g,Q)=>{var C=Q(73),E=Q(8),n=Q(83),e=Q(38),i=Q(60),o=Q(76),t=Q(77),r=Q(74),s=Q(104).aTypedArrayConstructor;I.exports=function from(I){var g,Q,h,y,R,M,G=n(this),l=e(I),k=arguments.length,u=k>1?arguments[1]:void 0,N=void 0!==u,U=t(l);if(U&&!r(U)){M=(R=o(l,U)).next;l=[];for(;!(y=E(M,R)).done;)l.push(y.value)}N&&k>2&&(u=C(u,arguments[2]));Q=i(l);h=new(s(G))(Q);for(g=0;Q>g;g++)h[g]=N?u(l[g],g):l[g];return h}},(I,g,Q)=>{var C=Q(73),E=Q(14),n=Q(13),e=Q(38),i=Q(60),o=Q(122),t=E([].push),createMethod=function(I){var g=1==I,Q=2==I,E=3==I,r=4==I,s=6==I,h=7==I,y=5==I||s;return function(R,M,G,l){for(var k,u,N=e(R),U=n(N),p=C(M,G),f=i(U),J=0,Y=l||o,_=g?Y(R,f):Q||h?Y(R,0):void 0;f>J;J++)if(y||J in U){u=p(k=U[J],J,N);if(I)if(g)_[J]=u;else if(u)switch(I){case 3:return!0;case 5:return k;case 6:return J;case 2:t(_,k)}else switch(I){case 4:return!1;case 7:t(_,k)}}return s?-1:E||r?r:_}};I.exports={forEach:createMethod(0),map:createMethod(1),filter:createMethod(2),some:createMethod(3),every:createMethod(4),find:createMethod(5),findIndex:createMethod(6),filterReject:createMethod(7)}},(I,g,Q)=>{var C=Q(123);I.exports=function(I,g){return new(C(I))(0===g?0:g)}},(I,g,Q)=>{var C=Q(4),E=Q(124),n=Q(84),e=Q(19),i=Q(32)("species"),o=C.Array;I.exports=function(I){var g;if(E(I)){g=I.constructor;(n(g)&&(g===o||E(g.prototype))||e(g)&&null===(g=g[i]))&&(g=void 0)}return void 0===g?o:g}},(I,g,Q)=>{var C=Q(15);I.exports=Array.isArray||function isArray(I){return"Array"==C(I)}},(I,g,Q)=>{var C=Q(20),E=Q(19),n=Q(67);I.exports=function(I,g,Q){var e,i;n&&C(e=g.constructor)&&e!==Q&&E(i=e.prototype)&&i!==Q.prototype&&n(I,i);return I}},(I,g,Q)=>{"use strict";var C=Q(4),E=Q(8),n=Q(104),e=Q(60),i=Q(115),o=Q(38),t=Q(7),r=C.RangeError,s=C.Int8Array,h=s&&s.prototype,y=h&&h.set,R=n.aTypedArray,M=n.exportTypedArrayMethod,G=!t((function(){var I=new Uint8ClampedArray(2);E(y,I,{length:1,0:3},1);return 3!==I[1]})),l=G&&n.NATIVE_ARRAY_BUFFER_VIEWS&&t((function(){var I=new s(2);I.set(1);I.set("2",1);return 0!==I[0]||2!==I[1]}));M("set",(function set(I){R(this);var g=i(arguments.length>1?arguments[1]:void 0,1),Q=o(I);if(G)return E(y,this,Q,g);var C=this.length,n=e(Q),t=0;if(n+g>C)throw r("Wrong length");for(;t<n;)this[g+t]=Q[t++]}),!G||l)},(I,g,Q)=>{"use strict";var C=Q(4),E=Q(14),n=Q(7),e=Q(29),i=Q(128),o=Q(104),t=Q(129),r=Q(130),s=Q(26),h=Q(131),y=C.Array,R=o.aTypedArray,M=o.exportTypedArrayMethod,G=C.Uint16Array,l=G&&E(G.prototype.sort),k=!(!l||n((function(){l(new G(2),null)}))&&n((function(){l(new G(2),{})}))),u=!!l&&!n((function(){if(s)return s<74;if(t)return t<67;if(r)return!0;if(h)return h<602;var I,g,Q=new G(516),C=y(516);for(I=0;I<516;I++){g=I%4;Q[I]=515-I;C[I]=I-2*g+3}l(Q,(function(I,g){return(I/4|0)-(g/4|0)}));for(I=0;I<516;I++)if(Q[I]!==C[I])return!0}));M("sort",(function sort(I){void 0!==I&&e(I);return u?l(this,I):i(R(this),function(I){return function(g,Q){return void 0!==I?+I(g,Q)||0:Q!=Q?-1:g!=g?1:0===g&&0===Q?1/g>0&&1/Q<0?1:-1:g>Q}}(I))}),!u||k)},(I,g,Q)=>{var C=Q(112),E=Math.floor,mergeSort=function(I,g){var Q=I.length,n=E(Q/2);return Q<8?insertionSort(I,g):merge(I,mergeSort(C(I,0,n),g),mergeSort(C(I,n),g),g)},insertionSort=function(I,g){for(var Q,C,E=I.length,n=1;n<E;){C=n;Q=I[n];for(;C&&g(I[C-1],Q)>0;)I[C]=I[--C];C!==n++&&(I[C]=Q)}return I},merge=function(I,g,Q,C){for(var E=g.length,n=Q.length,e=0,i=0;e<E||i<n;)I[e+i]=e<E&&i<n?C(g[e],Q[i])<=0?g[e++]:Q[i++]:e<E?g[e++]:Q[i++];return I};I.exports=mergeSort},(I,g,Q)=>{var C=Q(27).match(/firefox\/(\d+)/i);I.exports=!!C&&+C[1]},(I,g,Q)=>{var C=Q(27);I.exports=/MSIE|Trident/.test(C)},(I,g,Q)=>{var C=Q(27).match(/AppleWebKit\/(\d+)\./);I.exports=!!C&&+C[1]},(I,g,Q)=>{Q(102)("Int16",(function(I){return function Int16Array(g,Q,C){return I(this,g,Q,C)}}))},(I,g,Q)=>{Q(102)("Int32",(function(I){return function Int32Array(g,Q,C){return I(this,g,Q,C)}}))},(I,g,Q)=>{Q(102)("Uint8",(function(I){return function Uint8Array(g,Q,C){return I(this,g,Q,C)}}))},(I,g,Q)=>{Q(102)("Uint16",(function(I){return function Uint16Array(g,Q,C){return I(this,g,Q,C)}}))},(I,g,Q)=>{Q(102)("Uint32",(function(I){return function Uint32Array(g,Q,C){return I(this,g,Q,C)}}))},(I,g,Q)=>{Q(102)("Float32",(function(I){return function Float32Array(g,Q,C){return I(this,g,Q,C)}}))},(I,g,Q)=>{Q(102)("Float64",(function(I){return function Float64Array(g,Q,C){return I(this,g,Q,C)}}))},(I,g,Q)=>{"use strict";var C=Q(3),E=Q(140);C({target:"RegExp",proto:!0,forced:/./.exec!==E},{exec:E})},(I,g,Q)=>{"use strict";var C=Q(8),E=Q(14),n=Q(141),e=Q(142),i=Q(143),o=Q(33),t=Q(117),r=Q(48).get,s=Q(144),h=Q(145),y=o("native-string-replace",String.prototype.replace),R=RegExp.prototype.exec,M=R,G=E("".charAt),l=E("".indexOf),k=E("".replace),u=E("".slice),N=function(){var I=/a/,g=/b*/g;C(R,I,"a");C(R,g,"a");return 0!==I.lastIndex||0!==g.lastIndex}(),U=i.BROKEN_CARET,p=void 0!==/()??/.exec("")[1];(N||p||U||s||h)&&(M=function exec(I){var g,Q,E,i,o,s,h,f=this,J=r(f),Y=n(I),_=J.raw;if(_){_.lastIndex=f.lastIndex;g=C(M,_,Y);f.lastIndex=_.lastIndex;return g}var m=J.groups,b=U&&f.sticky,x=C(e,f),v=f.source,q=0,O=Y;if(b){x=k(x,"y","");-1===l(x,"g")&&(x+="g");O=u(Y,f.lastIndex);if(f.lastIndex>0&&(!f.multiline||f.multiline&&"\n"!==G(Y,f.lastIndex-1))){v="(?: "+v+")";O=" "+O;q++}Q=new RegExp("^(?:"+v+")",x)}p&&(Q=new RegExp("^"+v+"$(?!\\s)",x));N&&(E=f.lastIndex);i=C(R,b?Q:f,O);if(b)if(i){i.input=u(i.input,q);i[0]=u(i[0],q);i.index=f.lastIndex;f.lastIndex+=i[0].length}else f.lastIndex=0;else N&&i&&(f.lastIndex=f.global?i.index+i[0].length:E);p&&i&&i.length>1&&C(y,i[0],Q,(function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(i[o]=void 0)}));if(i&&m){i.groups=s=t(null);for(o=0;o<m.length;o++)s[(h=m[o])[0]]=i[h[1]]}return i});I.exports=M},(I,g,Q)=>{var C=Q(4),E=Q(78),n=C.String;I.exports=function(I){if("Symbol"===E(I))throw TypeError("Cannot convert a Symbol value to a string");return n(I)}},(I,g,Q)=>{"use strict";var C=Q(45);I.exports=function(){var I=C(this),g="";I.global&&(g+="g");I.ignoreCase&&(g+="i");I.multiline&&(g+="m");I.dotAll&&(g+="s");I.unicode&&(g+="u");I.sticky&&(g+="y");return g}},(I,g,Q)=>{var C=Q(7),E=Q(4).RegExp,n=C((function(){var I=E("a","y");I.lastIndex=2;return null!=I.exec("abcd")})),e=n||C((function(){return!E("a","y").sticky})),i=n||C((function(){var I=E("^r","gy");I.lastIndex=2;return null!=I.exec("str")}));I.exports={BROKEN_CARET:i,MISSED_STICKY:e,UNSUPPORTED_Y:n}},(I,g,Q)=>{var C=Q(7),E=Q(4).RegExp;I.exports=C((function(){var I=E(".","s");return!(I.dotAll&&I.exec("\n")&&"s"===I.flags)}))},(I,g,Q)=>{var C=Q(7),E=Q(4).RegExp;I.exports=C((function(){var I=E("(?<a>b)","g");return"b"!==I.exec("b").groups.a||"bc"!=="b".replace(I,"$<a>c")}))},(I,g,Q)=>{"use strict";var C=Q(86),E=Q(8),n=Q(14),e=Q(147),i=Q(7),o=Q(45),t=Q(20),r=Q(59),s=Q(61),h=Q(141),y=Q(16),R=Q(148),M=Q(28),G=Q(150),l=Q(151),k=Q(32)("replace"),u=Math.max,N=Math.min,U=n([].concat),p=n([].push),f=n("".indexOf),J=n("".slice),Y="$0"==="a".replace(/./,"$0"),_=!!/./[k]&&""===/./[k]("a","$0");e("replace",(function(I,g,Q){var n=_?"$":"$0";return[function replace(I,Q){var C=y(this),n=null==I?void 0:M(I,k);return n?E(n,I,C,Q):E(g,h(C),I,Q)},function(I,E){var e=o(this),i=h(I);if("string"==typeof E&&-1===f(E,n)&&-1===f(E,"$<")){var y=Q(g,e,i,E);if(y.done)return y.value}var M=t(E);M||(E=h(E));var k=e.global;if(k){var Y=e.unicode;e.lastIndex=0}for(var _=[];;){var m=l(e,i);if(null===m)break;p(_,m);if(!k)break;""===h(m[0])&&(e.lastIndex=R(i,s(e.lastIndex),Y))}for(var b,x="",v=0,q=0;q<_.length;q++){for(var O=h((m=_[q])[0]),T=u(N(r(m.index),i.length),0),P=[],j=1;j<m.length;j++)p(P,void 0===(b=m[j])?b:String(b));var X=m.groups;if(M){var z=U([O],P,T,i);void 0!==X&&p(z,X);var $=h(C(E,void 0,z))}else $=G(O,i,T,P,X,E);if(T>=v){x+=J(i,v,T)+$;v=T+O.length}}return x+J(i,v)}]}),!!i((function(){var I=/./;I.exec=function(){var I=[];I.groups={a:"7"};return I};return"7"!=="".replace(I,"$<a>")}))||!Y||_)},(I,g,Q)=>{"use strict";Q(139);var C=Q(14),E=Q(46),n=Q(140),e=Q(7),i=Q(32),o=Q(42),t=i("species"),r=RegExp.prototype;I.exports=function(I,g,Q,s){var h=i(I),y=!e((function(){var g={};g[h]=function(){return 7};return 7!=""[I](g)})),R=y&&!e((function(){var g=!1,Q=/a/;if("split"===I){(Q={}).constructor={};Q.constructor[t]=function(){return Q};Q.flags="";Q[h]=/./[h]}Q.exec=function(){g=!0;return null};Q[h]("");return!g}));if(!y||!R||Q){var M=C(/./[h]),G=g(h,""[I],(function(I,g,Q,E,e){var i=C(I),o=g.exec;return o===n||o===r.exec?y&&!e?{done:!0,value:M(g,Q,E)}:{done:!0,value:i(Q,g,E)}:{done:!1}}));E(String.prototype,I,G[0]);E(r,h,G[1])}s&&o(r[h],"sham",!0)}},(I,g,Q)=>{"use strict";var C=Q(149).charAt;I.exports=function(I,g,Q){return g+(Q?C(I,g).length:1)}},(I,g,Q)=>{var C=Q(14),E=Q(59),n=Q(141),e=Q(16),i=C("".charAt),o=C("".charCodeAt),t=C("".slice),createMethod=function(I){return function(g,Q){var C,r,s=n(e(g)),h=E(Q),y=s.length;return h<0||h>=y?I?"":void 0:(C=o(s,h))<55296||C>56319||h+1===y||(r=o(s,h+1))<56320||r>57343?I?i(s,h):C:I?t(s,h,h+2):r-56320+(C-55296<<10)+65536}};I.exports={codeAt:createMethod(!1),charAt:createMethod(!0)}},(I,g,Q)=>{var C=Q(14),E=Q(38),n=Math.floor,e=C("".charAt),i=C("".replace),o=C("".slice),t=/\$([$&'`]|\d{1,2}|<[^>]*>)/g,r=/\$([$&'`]|\d{1,2})/g;I.exports=function(I,g,Q,C,s,h){var y=Q+I.length,R=C.length,M=r;if(void 0!==s){s=E(s);M=t}return i(h,M,(function(E,i){var t;switch(e(i,0)){case"$":return"$";case"&":return I;case"`":return o(g,0,Q);case"'":return o(g,y);case"<":t=s[o(i,1,-1)];break;default:var r=+i;if(0===r)return E;if(r>R){var h=n(r/10);return 0===h?E:h<=R?void 0===C[h-1]?e(i,1):C[h-1]+e(i,1):E}t=C[r-1]}return void 0===t?"":t}))}},(I,g,Q)=>{var C=Q(4),E=Q(8),n=Q(45),e=Q(20),i=Q(15),o=Q(140),t=C.TypeError;I.exports=function(I,g){var Q=I.exec;if(e(Q)){var C=E(Q,I,g);null!==C&&n(C);return C}if("RegExp"===i(I))return E(o,I,g);throw t("RegExp#exec called on incompatible receiver")}},(I,g,Q)=>{"use strict";Q(153);class SandboxSupportBase{constructor(I){this.win=I;this.timeoutIds=new Map;this.commFun=null}destroy(){this.commFunc=null;this.timeoutIds.forEach((I=>{let[g,Q]=I;return this.win.clearTimeout(Q)}));this.timeoutIds=null}exportValueToSandbox(I){throw new Error("Not implemented")}importValueFromSandbox(I){throw new Error("Not implemented")}createErrorForSandbox(I){throw new Error("Not implemented")}callSandboxFunction(I,g){try{g=this.exportValueToSandbox(g);this.commFun(I,g)}catch(I){this.win.console.error(I)}}createSandboxExternals(){const I={setTimeout:(I,g)=>{if("number"!=typeof I||"number"!=typeof g)return;const Q=this.win.setTimeout((()=>{this.timeoutIds.delete(I);this.callSandboxFunction("timeoutCb",{callbackId:I,interval:!1})}),g);this.timeoutIds.set(I,Q)},clearTimeout:I=>{this.win.clearTimeout(this.timeoutIds.get(I));this.timeoutIds.delete(I)},setInterval:(I,g)=>{if("number"!=typeof I||"number"!=typeof g)return;const Q=this.win.setInterval((()=>{this.callSandboxFunction("timeoutCb",{callbackId:I,interval:!0})}),g);this.timeoutIds.set(I,Q)},clearInterval:I=>{this.win.clearInterval(this.timeoutIds.get(I));this.timeoutIds.delete(I)},alert:I=>{"string"==typeof I&&this.win.alert(I)},confirm:I=>"string"==typeof I&&this.win.confirm(I),prompt:(I,g)=>"string"!=typeof I||"string"!=typeof g?null:this.win.prompt(I,g),parseURL:I=>{const g=new this.win.URL(I);return Object.fromEntries(["hash","host","hostname","href","origin","password","pathname","port","protocol","search","searchParams","username"].map((I=>[I,g[I].toString()])))},send:I=>{if(!I)return;const g=new this.win.CustomEvent("updatefromsandbox",{detail:this.importValueFromSandbox(I)});this.win.dispatchEvent(g)}};Object.setPrototypeOf(I,null);return(g,Q)=>{try{const C=I[g](...Q);return this.exportValueToSandbox(C)}catch(I){var C;throw this.createErrorForSandbox(null!==(C=null==I?void 0:I.toString())&&void 0!==C?C:"")}}}}g.SandboxSupportBase=SandboxSupportBase},(I,g,Q)=>{var C=Q(4),E=Q(154),n=Q(155),e=Q(156),i=Q(42),o=Q(32),t=o("iterator"),r=o("toStringTag"),s=e.values,handlePrototype=function(I,g){if(I){if(I[t]!==s)try{i(I,t,s)}catch(g){I[t]=s}I[r]||i(I,r,g);if(E[g])for(var Q in e)if(I[Q]!==e[Q])try{i(I,Q,e[Q])}catch(g){I[Q]=e[Q]}}};for(var h in E)handlePrototype(C[h]&&C[h].prototype,h);handlePrototype(n,"DOMTokenList")},I=>{I.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},(I,g,Q)=>{var C=Q(41)("span").classList,E=C&&C.constructor&&C.constructor.prototype;I.exports=E===Object.prototype?void 0:E},(I,g,Q)=>{"use strict";var C=Q(12),E=Q(157),n=Q(75),e=Q(48),i=Q(43).f,o=Q(158),t=Q(34),r=Q(6),s="Array Iterator",h=e.set,y=e.getterFor(s);I.exports=o(Array,"Array",(function(I,g){h(this,{type:s,target:C(I),index:0,kind:g})}),(function(){var I=y(this),g=I.target,Q=I.kind,C=I.index++;if(!g||C>=g.length){I.target=void 0;return{value:void 0,done:!0}}return"keys"==Q?{value:C,done:!1}:"values"==Q?{value:g[C],done:!1}:{value:[C,g[C]],done:!1}}),"values");var R=n.Arguments=n.Array;E("keys");E("values");E("entries");if(!t&&r&&"values"!==R.name)try{i(R,"name",{value:"values"})}catch(I){}},(I,g,Q)=>{var C=Q(32),E=Q(117),n=Q(43),e=C("unscopables"),i=Array.prototype;null==i[e]&&n.f(i,e,{configurable:!0,value:E(null)});I.exports=function(I){i[e][I]=!0}},(I,g,Q)=>{"use strict";var C=Q(3),E=Q(8),n=Q(34),e=Q(52),i=Q(20),o=Q(159),t=Q(106),r=Q(67),s=Q(69),h=Q(42),y=Q(46),R=Q(32),M=Q(75),G=Q(160),l=e.PROPER,k=e.CONFIGURABLE,u=G.IteratorPrototype,N=G.BUGGY_SAFARI_ITERATORS,U=R("iterator"),p="keys",f="values",J="entries",returnThis=function(){return this};I.exports=function(I,g,Q,e,R,G,Y){o(Q,g,e);var _,m,b,getIterationMethod=function(I){if(I===R&&T)return T;if(!N&&I in q)return q[I];switch(I){case p:return function keys(){return new Q(this,I)};case f:return function values(){return new Q(this,I)};case J:return function entries(){return new Q(this,I)}}return function(){return new Q(this)}},x=g+" Iterator",v=!1,q=I.prototype,O=q[U]||q["@@iterator"]||R&&q[R],T=!N&&O||getIterationMethod(R),P="Array"==g&&q.entries||O;if(P&&(_=t(P.call(new I)))!==Object.prototype&&_.next){n||t(_)===u||(r?r(_,u):i(_[U])||y(_,U,returnThis));s(_,x,!0,!0);n&&(M[x]=returnThis)}if(l&&R==f&&O&&O.name!==f)if(!n&&k)h(q,"name",f);else{v=!0;T=function values(){return E(O,this)}}if(R){m={values:getIterationMethod(f),keys:G?T:getIterationMethod(p),entries:getIterationMethod(J)};if(Y)for(b in m)(N||v||!(b in q))&&y(q,b,m[b]);else C({target:g,proto:!0,forced:N||v},m)}n&&!Y||q[U]===T||y(q,U,T,{name:R});M[g]=T;return m}},(I,g,Q)=>{"use strict";var C=Q(160).IteratorPrototype,E=Q(117),n=Q(11),e=Q(69),i=Q(75),returnThis=function(){return this};I.exports=function(I,g,Q,o){var t=g+" Iterator";I.prototype=E(C,{next:n(+!o,Q)});e(I,t,!1,!0);i[t]=returnThis;return I}},(I,g,Q)=>{"use strict";var C,E,n,e=Q(7),i=Q(20),o=Q(117),t=Q(106),r=Q(46),s=Q(32),h=Q(34),y=s("iterator"),R=!1;[].keys&&("next"in(n=[].keys())?(E=t(t(n)))!==Object.prototype&&(C=E):R=!0);null==C||e((function(){var I={};return C[y].call(I)!==I}))?C={}:h&&(C=o(C));i(C[y])||r(C,y,(function(){return this}));I.exports={IteratorPrototype:C,BUGGY_SAFARI_ITERATORS:R}}],g={};function __w_pdfjs_require__(Q){var C=g[Q];if(void 0!==C)return C.exports;var E=g[Q]={exports:{}};I[Q](E,E.exports,__w_pdfjs_require__);return E.exports}var Q={};(()=>{"use strict";var I=Q;Object.defineProperty(I,"__esModule",{value:!0});I.QuickJSSandbox=function QuickJSSandbox(){return(0,g.default)().then((I=>new Sandbox(window,I)))};var g=function _interopRequireDefault(I){return I&&I.__esModule?I:{default:I}}(__w_pdfjs_require__(1)),C=__w_pdfjs_require__(152);class SandboxSupport extends C.SandboxSupportBase{exportValueToSandbox(I){return JSON.stringify(I)}importValueFromSandbox(I){return I}createErrorForSandbox(I){return new Error(I)}}class Sandbox{constructor(I,g){this.support=new SandboxSupport(I,this);g.externalCall=this.support.createSandboxExternals();this._module=g;this._alertOnError=0}create(I){const g=['(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === \'object\' && typeof module === \'object\')\n\t\tmodule.exports = factory();\n\telse if(typeof define === \'function\' && define.amd)\n\t\tdefine("pdfjs-dist/build/pdf.scripting", [], factory);\n\telse if(typeof exports === \'object\')\n\t\texports["pdfjs-dist/build/pdf.scripting"] = factory();\n\telse\n\t\troot.pdfjsScripting = factory();\n})(this, function() {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ([\n/* 0 */,\n/* 1 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.initSandbox = initSandbox;\n\n__w_pdfjs_require__(2);\n\nvar _constants = __w_pdfjs_require__(82);\n\nvar _field = __w_pdfjs_require__(83);\n\nvar _aform = __w_pdfjs_require__(88);\n\nvar _app = __w_pdfjs_require__(113);\n\nvar _color = __w_pdfjs_require__(85);\n\nvar _console = __w_pdfjs_require__(117);\n\nvar _doc = __w_pdfjs_require__(118);\n\nvar _proxy = __w_pdfjs_require__(123);\n\nvar _util = __w_pdfjs_require__(124);\n\nfunction initSandbox(params) {\n  delete globalThis.pdfjsScripting;\n  const externalCall = globalThis.callExternalFunction;\n  delete globalThis.callExternalFunction;\n\n  const globalEval = code => globalThis.eval(code);\n\n  const send = data => externalCall("send", [data]);\n\n  const proxyHandler = new _proxy.ProxyHandler();\n  const {\n    data\n  } = params;\n  const doc = new _doc.Doc({\n    send,\n    globalEval,\n    ...data.docInfo\n  });\n  const _document = {\n    obj: doc,\n    wrapped: new Proxy(doc, proxyHandler)\n  };\n  const app = new _app.App({\n    send,\n    globalEval,\n    externalCall,\n    _document,\n    calculationOrder: data.calculationOrder,\n    proxyHandler,\n    ...data.appInfo\n  });\n  const util = new _util.Util({\n    externalCall\n  });\n  const appObjects = app._objects;\n\n  if (data.objects) {\n    const annotations = [];\n\n    for (const [name, objs] of Object.entries(data.objects)) {\n      annotations.length = 0;\n      let container = null;\n\n      for (const obj of objs) {\n        if (obj.type !== "") {\n          annotations.push(obj);\n        } else {\n          container = obj;\n        }\n      }\n\n      let obj = container;\n\n      if (annotations.length > 0) {\n        obj = annotations[0];\n        obj.send = send;\n      }\n\n      obj.globalEval = globalEval;\n      obj.doc = _document;\n      obj.fieldPath = name;\n      obj.appObjects = appObjects;\n      let field;\n\n      switch (obj.type) {\n        case "radiobutton":\n          {\n            const otherButtons = annotations.slice(1);\n            field = new _field.RadioButtonField(otherButtons, obj);\n            break;\n          }\n\n        case "checkbox":\n          {\n            const otherButtons = annotations.slice(1);\n            field = new _field.CheckboxField(otherButtons, obj);\n            break;\n          }\n\n        case "text":\n          if (annotations.length <= 1) {\n            field = new _field.Field(obj);\n            break;\n          }\n\n          obj.siblings = annotations.map(x => x.id).slice(1);\n          field = new _field.Field(obj);\n          break;\n\n        default:\n          field = new _field.Field(obj);\n      }\n\n      const wrapped = new Proxy(field, proxyHandler);\n\n      doc._addField(name, wrapped);\n\n      const _object = {\n        obj: field,\n        wrapped\n      };\n\n      for (const object of objs) {\n        appObjects[object.id] = _object;\n      }\n\n      if (container) {\n        appObjects[container.id] = _object;\n      }\n    }\n  }\n\n  const color = new _color.Color();\n  globalThis.event = null;\n  globalThis.global = Object.create(null);\n  globalThis.app = new Proxy(app, proxyHandler);\n  globalThis.color = new Proxy(color, proxyHandler);\n  globalThis.console = new Proxy(new _console.Console({\n    send\n  }), proxyHandler);\n  globalThis.util = new Proxy(util, proxyHandler);\n  globalThis.border = _constants.Border;\n  globalThis.cursor = _constants.Cursor;\n  globalThis.display = _constants.Display;\n  globalThis.font = _constants.Font;\n  globalThis.highlight = _constants.Highlight;\n  globalThis.position = _constants.Position;\n  globalThis.scaleHow = _constants.ScaleHow;\n  globalThis.scaleWhen = _constants.ScaleWhen;\n  globalThis.style = _constants.Style;\n  globalThis.trans = _constants.Trans;\n  globalThis.zoomtype = _constants.ZoomType;\n  globalThis.ADBE = {\n    Reader_Value_Asked: true,\n    Viewer_Value_Asked: true\n  };\n  const aform = new _aform.AForm(doc, app, util, color);\n\n  for (const name of Object.getOwnPropertyNames(_aform.AForm.prototype)) {\n    if (name !== "constructor" && !name.startsWith("_")) {\n      globalThis[name] = aform[name].bind(aform);\n    }\n  }\n\n  for (const [name, value] of Object.entries(_constants.GlobalConstants)) {\n    Object.defineProperty(globalThis, name, {\n      value,\n      writable: false\n    });\n  }\n\n  Object.defineProperties(globalThis, {\n    ColorConvert: {\n      value: color.convert.bind(color),\n      writable: true\n    },\n    ColorEqual: {\n      value: color.equal.bind(color),\n      writable: true\n    }\n  });\n  const properties = Object.create(null);\n\n  for (const name of Object.getOwnPropertyNames(_doc.Doc.prototype)) {\n    if (name === "constructor" || name.startsWith("_")) {\n      continue;\n    }\n\n    const descriptor = Object.getOwnPropertyDescriptor(_doc.Doc.prototype, name);\n\n    if (descriptor.get) {\n      properties[name] = {\n        get: descriptor.get.bind(doc),\n        set: descriptor.set.bind(doc)\n      };\n    } else {\n      properties[name] = {\n        value: _doc.Doc.prototype[name].bind(doc)\n      };\n    }\n  }\n\n  Object.defineProperties(globalThis, properties);\n  const functions = {\n    dispatchEvent: app._dispatchEvent.bind(app),\n    timeoutCb: app._evalCallback.bind(app)\n  };\n  return (name, args) => {\n    try {\n      functions[name](args);\n    } catch (error) {\n      const value = "".concat(error.toString(), "\\n").concat(error.stack);\n      send({\n        command: "error",\n        value\n      });\n    }\n  };\n}\n\n/***/ }),\n/* 2 */\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar DOMIterables = __w_pdfjs_require__(4);\nvar DOMTokenListPrototype = __w_pdfjs_require__(5);\nvar ArrayIteratorMethods = __w_pdfjs_require__(9);\nvar createNonEnumerableProperty = __w_pdfjs_require__(62);\nvar wellKnownSymbol = __w_pdfjs_require__(18);\nvar ITERATOR = wellKnownSymbol(\'iterator\');\nvar TO_STRING_TAG = wellKnownSymbol(\'toStringTag\');\nvar ArrayValues = ArrayIteratorMethods.values;\nvar handlePrototype = function (CollectionPrototype, COLLECTION_NAME) {\n if (CollectionPrototype) {\n  if (CollectionPrototype[ITERATOR] !== ArrayValues)\n   try {\n    createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);\n   } catch (error) {\n    CollectionPrototype[ITERATOR] = ArrayValues;\n   }\n  if (!CollectionPrototype[TO_STRING_TAG]) {\n   createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n  }\n  if (DOMIterables[COLLECTION_NAME])\n   for (var METHOD_NAME in ArrayIteratorMethods) {\n    if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME])\n     try {\n      createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);\n     } catch (error) {\n      CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];\n     }\n   }\n }\n};\nfor (var COLLECTION_NAME in DOMIterables) {\n handlePrototype(global[COLLECTION_NAME] && global[COLLECTION_NAME].prototype, COLLECTION_NAME);\n}\nhandlePrototype(DOMTokenListPrototype, \'DOMTokenList\');\n\n/***/ }),\n/* 3 */\n/***/ ((module) => {\n\nvar check = function (it) {\n return it && it.Math == Math && it;\n};\nmodule.exports = check(typeof globalThis == \'object\' && globalThis) || check(typeof window == \'object\' && window) || check(typeof self == \'object\' && self) || check(typeof global == \'object\' && global) || (function () {\n return this;\n}()) || Function(\'return this\')();\n\n/***/ }),\n/* 4 */\n/***/ ((module) => {\n\nmodule.exports = {\n CSSRuleList: 0,\n CSSStyleDeclaration: 0,\n CSSValueList: 0,\n ClientRectList: 0,\n DOMRectList: 0,\n DOMStringList: 0,\n DOMTokenList: 1,\n DataTransferItemList: 0,\n FileList: 0,\n HTMLAllCollection: 0,\n HTMLCollection: 0,\n HTMLFormElement: 0,\n HTMLSelectElement: 0,\n MediaList: 0,\n MimeTypeArray: 0,\n NamedNodeMap: 0,\n NodeList: 1,\n PaintRequestList: 0,\n Plugin: 0,\n PluginArray: 0,\n SVGLengthList: 0,\n SVGNumberList: 0,\n SVGPathSegList: 0,\n SVGPointList: 0,\n SVGStringList: 0,\n SVGTransformList: 0,\n SourceBufferList: 0,\n StyleSheetList: 0,\n TextTrackCueList: 0,\n TextTrackList: 0,\n TouchList: 0\n};\n\n/***/ }),\n/* 5 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar documentCreateElement = __w_pdfjs_require__(6);\nvar classList = documentCreateElement(\'span\').classList;\nvar DOMTokenListPrototype = classList && classList.constructor && classList.constructor.prototype;\nmodule.exports = DOMTokenListPrototype === Object.prototype ? undefined : DOMTokenListPrototype;\n\n/***/ }),\n/* 6 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar isObject = __w_pdfjs_require__(7);\nvar document = global.document;\nvar EXISTS = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n return EXISTS ? document.createElement(it) : {};\n};\n\n/***/ }),\n/* 7 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar isCallable = __w_pdfjs_require__(8);\nmodule.exports = function (it) {\n return typeof it == \'object\' ? it !== null : isCallable(it);\n};\n\n/***/ }),\n/* 8 */\n/***/ ((module) => {\n\nmodule.exports = function (argument) {\n return typeof argument == \'function\';\n};\n\n/***/ }),\n/* 9 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n"use strict";\n\nvar toIndexedObject = __w_pdfjs_require__(10);\nvar addToUnscopables = __w_pdfjs_require__(17);\nvar Iterators = __w_pdfjs_require__(58);\nvar InternalStateModule = __w_pdfjs_require__(59);\nvar defineProperty = (__w_pdfjs_require__(36).f);\nvar defineIterator = __w_pdfjs_require__(64);\nvar IS_PURE = __w_pdfjs_require__(20);\nvar DESCRIPTORS = __w_pdfjs_require__(34);\nvar ARRAY_ITERATOR = \'Array Iterator\';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);\nmodule.exports = defineIterator(Array, \'Array\', function (iterated, kind) {\n setInternalState(this, {\n  type: ARRAY_ITERATOR,\n  target: toIndexedObject(iterated),\n  index: 0,\n  kind: kind\n });\n}, function () {\n var state = getInternalState(this);\n var target = state.target;\n var kind = state.kind;\n var index = state.index++;\n if (!target || index >= target.length) {\n  state.target = undefined;\n  return {\n   value: undefined,\n   done: true\n  };\n }\n if (kind == \'keys\')\n  return {\n   value: index,\n   done: false\n  };\n if (kind == \'values\')\n  return {\n   value: target[index],\n   done: false\n  };\n return {\n  value: [\n   index,\n   target[index]\n  ],\n  done: false\n };\n}, \'values\');\nvar values = Iterators.Arguments = Iterators.Array;\naddToUnscopables(\'keys\');\naddToUnscopables(\'values\');\naddToUnscopables(\'entries\');\nif (!IS_PURE && DESCRIPTORS && values.name !== \'values\')\n try {\n  defineProperty(values, \'name\', { value: \'values\' });\n } catch (error) {\n }\n\n/***/ }),\n/* 10 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar IndexedObject = __w_pdfjs_require__(11);\nvar requireObjectCoercible = __w_pdfjs_require__(16);\nmodule.exports = function (it) {\n return IndexedObject(requireObjectCoercible(it));\n};\n\n/***/ }),\n/* 11 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar uncurryThis = __w_pdfjs_require__(12);\nvar fails = __w_pdfjs_require__(14);\nvar classof = __w_pdfjs_require__(15);\nvar Object = global.Object;\nvar split = uncurryThis(\'\'.split);\nmodule.exports = fails(function () {\n return !Object(\'z\').propertyIsEnumerable(0);\n}) ? function (it) {\n return classof(it) == \'String\' ? split(it, \'\') : Object(it);\n} : Object;\n\n/***/ }),\n/* 12 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar NATIVE_BIND = __w_pdfjs_require__(13);\nvar FunctionPrototype = Function.prototype;\nvar bind = FunctionPrototype.bind;\nvar call = FunctionPrototype.call;\nvar uncurryThis = NATIVE_BIND && bind.bind(call, call);\nmodule.exports = NATIVE_BIND ? function (fn) {\n return fn && uncurryThis(fn);\n} : function (fn) {\n return fn && function () {\n  return call.apply(fn, arguments);\n };\n};\n\n/***/ }),\n/* 13 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar fails = __w_pdfjs_require__(14);\nmodule.exports = !fails(function () {\n var test = function () {\n }.bind();\n return typeof test != \'function\' || test.hasOwnProperty(\'prototype\');\n});\n\n/***/ }),\n/* 14 */\n/***/ ((module) => {\n\nmodule.exports = function (exec) {\n try {\n  return !!exec();\n } catch (error) {\n  return true;\n }\n};\n\n/***/ }),\n/* 15 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar uncurryThis = __w_pdfjs_require__(12);\nvar toString = uncurryThis({}.toString);\nvar stringSlice = uncurryThis(\'\'.slice);\nmodule.exports = function (it) {\n return stringSlice(toString(it), 8, -1);\n};\n\n/***/ }),\n/* 16 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar TypeError = global.TypeError;\nmodule.exports = function (it) {\n if (it == undefined)\n  throw TypeError("Can\'t call method on " + it);\n return it;\n};\n\n/***/ }),\n/* 17 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar wellKnownSymbol = __w_pdfjs_require__(18);\nvar create = __w_pdfjs_require__(31);\nvar definePropertyModule = __w_pdfjs_require__(36);\nvar UNSCOPABLES = wellKnownSymbol(\'unscopables\');\nvar ArrayPrototype = Array.prototype;\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {\n  configurable: true,\n  value: create(null)\n });\n}\nmodule.exports = function (key) {\n ArrayPrototype[UNSCOPABLES][key] = true;\n};\n\n/***/ }),\n/* 18 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar shared = __w_pdfjs_require__(19);\nvar hasOwn = __w_pdfjs_require__(23);\nvar uid = __w_pdfjs_require__(25);\nvar NATIVE_SYMBOL = __w_pdfjs_require__(26);\nvar USE_SYMBOL_AS_UID = __w_pdfjs_require__(30);\nvar WellKnownSymbolsStore = shared(\'wks\');\nvar Symbol = global.Symbol;\nvar symbolFor = Symbol && Symbol[\'for\'];\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\nmodule.exports = function (name) {\n if (!hasOwn(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == \'string\')) {\n  var description = \'Symbol.\' + name;\n  if (NATIVE_SYMBOL && hasOwn(Symbol, name)) {\n   WellKnownSymbolsStore[name] = Symbol[name];\n  } else if (USE_SYMBOL_AS_UID && symbolFor) {\n   WellKnownSymbolsStore[name] = symbolFor(description);\n  } else {\n   WellKnownSymbolsStore[name] = createWellKnownSymbol(description);\n  }\n }\n return WellKnownSymbolsStore[name];\n};\n\n/***/ }),\n/* 19 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar IS_PURE = __w_pdfjs_require__(20);\nvar store = __w_pdfjs_require__(21);\n(module.exports = function (key, value) {\n return store[key] || (store[key] = value !== undefined ? value : {});\n})(\'versions\', []).push({\n version: \'3.21.0\',\n mode: IS_PURE ? \'pure\' : \'global\',\n copyright: \'© 2014-2022 Denis Pushkarev (zloirock.ru)\',\n license: \'https://github.com/zloirock/core-js/blob/v3.21.0/LICENSE\',\n source: \'https://github.com/zloirock/core-js\'\n});\n\n/***/ }),\n/* 20 */\n/***/ ((module) => {\n\nmodule.exports = false;\n\n/***/ }),\n/* 21 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar setGlobal = __w_pdfjs_require__(22);\nvar SHARED = \'__core-js_shared__\';\nvar store = global[SHARED] || setGlobal(SHARED, {});\nmodule.exports = store;\n\n/***/ }),\n/* 22 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar defineProperty = Object.defineProperty;\nmodule.exports = function (key, value) {\n try {\n  defineProperty(global, key, {\n   value: value,\n   configurable: true,\n   writable: true\n  });\n } catch (error) {\n  global[key] = value;\n }\n return value;\n};\n\n/***/ }),\n/* 23 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar uncurryThis = __w_pdfjs_require__(12);\nvar toObject = __w_pdfjs_require__(24);\nvar hasOwnProperty = uncurryThis({}.hasOwnProperty);\nmodule.exports = Object.hasOwn || function hasOwn(it, key) {\n return hasOwnProperty(toObject(it), key);\n};\n\n/***/ }),\n/* 24 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar requireObjectCoercible = __w_pdfjs_require__(16);\nvar Object = global.Object;\nmodule.exports = function (argument) {\n return Object(requireObjectCoercible(argument));\n};\n\n/***/ }),\n/* 25 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar uncurryThis = __w_pdfjs_require__(12);\nvar id = 0;\nvar postfix = Math.random();\nvar toString = uncurryThis(1.0.toString);\nmodule.exports = function (key) {\n return \'Symbol(\' + (key === undefined ? \'\' : key) + \')_\' + toString(++id + postfix, 36);\n};\n\n/***/ }),\n/* 26 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar V8_VERSION = __w_pdfjs_require__(27);\nvar fails = __w_pdfjs_require__(14);\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n var symbol = Symbol();\n return !String(symbol) || !(Object(symbol) instanceof Symbol) || !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n\n/***/ }),\n/* 27 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar userAgent = __w_pdfjs_require__(28);\nvar process = global.process;\nvar Deno = global.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\nif (v8) {\n match = v8.split(\'.\');\n version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n}\nif (!version && userAgent) {\n match = userAgent.match(/Edge\\/(\\d+)/);\n if (!match || match[1] >= 74) {\n  match = userAgent.match(/Chrome\\/(\\d+)/);\n  if (match)\n   version = +match[1];\n }\n}\nmodule.exports = version;\n\n/***/ }),\n/* 28 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar getBuiltIn = __w_pdfjs_require__(29);\nmodule.exports = getBuiltIn(\'navigator\', \'userAgent\') || \'\';\n\n/***/ }),\n/* 29 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar isCallable = __w_pdfjs_require__(8);\nvar aFunction = function (argument) {\n return isCallable(argument) ? argument : undefined;\n};\nmodule.exports = function (namespace, method) {\n return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];\n};\n\n/***/ }),\n/* 30 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar NATIVE_SYMBOL = __w_pdfjs_require__(26);\nmodule.exports = NATIVE_SYMBOL && !Symbol.sham && typeof Symbol.iterator == \'symbol\';\n\n/***/ }),\n/* 31 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar anObject = __w_pdfjs_require__(32);\nvar definePropertiesModule = __w_pdfjs_require__(33);\nvar enumBugKeys = __w_pdfjs_require__(55);\nvar hiddenKeys = __w_pdfjs_require__(54);\nvar html = __w_pdfjs_require__(56);\nvar documentCreateElement = __w_pdfjs_require__(6);\nvar sharedKey = __w_pdfjs_require__(57);\nvar GT = \'>\';\nvar LT = \'<\';\nvar PROTOTYPE = \'prototype\';\nvar SCRIPT = \'script\';\nvar IE_PROTO = sharedKey(\'IE_PROTO\');\nvar EmptyConstructor = function () {\n};\nvar scriptTag = function (content) {\n return LT + SCRIPT + GT + content + LT + \'/\' + SCRIPT + GT;\n};\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n activeXDocument.write(scriptTag(\'\'));\n activeXDocument.close();\n var temp = activeXDocument.parentWindow.Object;\n activeXDocument = null;\n return temp;\n};\nvar NullProtoObjectViaIFrame = function () {\n var iframe = documentCreateElement(\'iframe\');\n var JS = \'java\' + SCRIPT + \':\';\n var iframeDocument;\n iframe.style.display = \'none\';\n html.appendChild(iframe);\n iframe.src = String(JS);\n iframeDocument = iframe.contentWindow.document;\n iframeDocument.open();\n iframeDocument.write(scriptTag(\'document.F=Object\'));\n iframeDocument.close();\n return iframeDocument.F;\n};\nvar activeXDocument;\nvar NullProtoObject = function () {\n try {\n  activeXDocument = new ActiveXObject(\'htmlfile\');\n } catch (error) {\n }\n NullProtoObject = typeof document != \'undefined\' ? document.domain && activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame() : NullProtoObjectViaActiveX(activeXDocument);\n var length = enumBugKeys.length;\n while (length--)\n  delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n return NullProtoObject();\n};\nhiddenKeys[IE_PROTO] = true;\nmodule.exports = Object.create || function create(O, Properties) {\n var result;\n if (O !== null) {\n  EmptyConstructor[PROTOTYPE] = anObject(O);\n  result = new EmptyConstructor();\n  EmptyConstructor[PROTOTYPE] = null;\n  result[IE_PROTO] = O;\n } else\n  result = NullProtoObject();\n return Properties === undefined ? result : definePropertiesModule.f(result, Properties);\n};\n\n/***/ }),\n/* 32 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar isObject = __w_pdfjs_require__(7);\nvar String = global.String;\nvar TypeError = global.TypeError;\nmodule.exports = function (argument) {\n if (isObject(argument))\n  return argument;\n throw TypeError(String(argument) + \' is not an object\');\n};\n\n/***/ }),\n/* 33 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\nvar DESCRIPTORS = __w_pdfjs_require__(34);\nvar V8_PROTOTYPE_DEFINE_BUG = __w_pdfjs_require__(35);\nvar definePropertyModule = __w_pdfjs_require__(36);\nvar anObject = __w_pdfjs_require__(32);\nvar toIndexedObject = __w_pdfjs_require__(10);\nvar objectKeys = __w_pdfjs_require__(47);\nexports.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {\n anObject(O);\n var props = toIndexedObject(Properties);\n var keys = objectKeys(Properties);\n var length = keys.length;\n var index = 0;\n var key;\n while (length > index)\n  definePropertyModule.f(O, key = keys[index++], props[key]);\n return O;\n};\n\n/***/ }),\n/* 34 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar fails = __w_pdfjs_require__(14);\nmodule.exports = !fails(function () {\n return Object.defineProperty({}, 1, {\n  get: function () {\n   return 7;\n  }\n })[1] != 7;\n});\n\n/***/ }),\n/* 35 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar DESCRIPTORS = __w_pdfjs_require__(34);\nvar fails = __w_pdfjs_require__(14);\nmodule.exports = DESCRIPTORS && fails(function () {\n return Object.defineProperty(function () {\n }, \'prototype\', {\n  value: 42,\n  writable: false\n }).prototype != 42;\n});\n\n/***/ }),\n/* 36 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar DESCRIPTORS = __w_pdfjs_require__(34);\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(37);\nvar V8_PROTOTYPE_DEFINE_BUG = __w_pdfjs_require__(35);\nvar anObject = __w_pdfjs_require__(32);\nvar toPropertyKey = __w_pdfjs_require__(38);\nvar TypeError = global.TypeError;\nvar $defineProperty = Object.defineProperty;\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar ENUMERABLE = \'enumerable\';\nvar CONFIGURABLE = \'configurable\';\nvar WRITABLE = \'writable\';\nexports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {\n anObject(O);\n P = toPropertyKey(P);\n anObject(Attributes);\n if (typeof O === \'function\' && P === \'prototype\' && \'value\' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {\n  var current = $getOwnPropertyDescriptor(O, P);\n  if (current && current[WRITABLE]) {\n   O[P] = Attributes.value;\n   Attributes = {\n    configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],\n    enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],\n    writable: false\n   };\n  }\n }\n return $defineProperty(O, P, Attributes);\n} : $defineProperty : function defineProperty(O, P, Attributes) {\n anObject(O);\n P = toPropertyKey(P);\n anObject(Attributes);\n if (IE8_DOM_DEFINE)\n  try {\n   return $defineProperty(O, P, Attributes);\n  } catch (error) {\n  }\n if (\'get\' in Attributes || \'set\' in Attributes)\n  throw TypeError(\'Accessors not supported\');\n if (\'value\' in Attributes)\n  O[P] = Attributes.value;\n return O;\n};\n\n/***/ }),\n/* 37 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar DESCRIPTORS = __w_pdfjs_require__(34);\nvar fails = __w_pdfjs_require__(14);\nvar createElement = __w_pdfjs_require__(6);\nmodule.exports = !DESCRIPTORS && !fails(function () {\n return Object.defineProperty(createElement(\'div\'), \'a\', {\n  get: function () {\n   return 7;\n  }\n }).a != 7;\n});\n\n/***/ }),\n/* 38 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar toPrimitive = __w_pdfjs_require__(39);\nvar isSymbol = __w_pdfjs_require__(41);\nmodule.exports = function (argument) {\n var key = toPrimitive(argument, \'string\');\n return isSymbol(key) ? key : key + \'\';\n};\n\n/***/ }),\n/* 39 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar call = __w_pdfjs_require__(40);\nvar isObject = __w_pdfjs_require__(7);\nvar isSymbol = __w_pdfjs_require__(41);\nvar getMethod = __w_pdfjs_require__(43);\nvar ordinaryToPrimitive = __w_pdfjs_require__(46);\nvar wellKnownSymbol = __w_pdfjs_require__(18);\nvar TypeError = global.TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol(\'toPrimitive\');\nmodule.exports = function (input, pref) {\n if (!isObject(input) || isSymbol(input))\n  return input;\n var exoticToPrim = getMethod(input, TO_PRIMITIVE);\n var result;\n if (exoticToPrim) {\n  if (pref === undefined)\n   pref = \'default\';\n  result = call(exoticToPrim, input, pref);\n  if (!isObject(result) || isSymbol(result))\n   return result;\n  throw TypeError("Can\'t convert object to primitive value");\n }\n if (pref === undefined)\n  pref = \'number\';\n return ordinaryToPrimitive(input, pref);\n};\n\n/***/ }),\n/* 40 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar NATIVE_BIND = __w_pdfjs_require__(13);\nvar call = Function.prototype.call;\nmodule.exports = NATIVE_BIND ? call.bind(call) : function () {\n return call.apply(call, arguments);\n};\n\n/***/ }),\n/* 41 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar getBuiltIn = __w_pdfjs_require__(29);\nvar isCallable = __w_pdfjs_require__(8);\nvar isPrototypeOf = __w_pdfjs_require__(42);\nvar USE_SYMBOL_AS_UID = __w_pdfjs_require__(30);\nvar Object = global.Object;\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n return typeof it == \'symbol\';\n} : function (it) {\n var $Symbol = getBuiltIn(\'Symbol\');\n return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, Object(it));\n};\n\n/***/ }),\n/* 42 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar uncurryThis = __w_pdfjs_require__(12);\nmodule.exports = uncurryThis({}.isPrototypeOf);\n\n/***/ }),\n/* 43 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar aCallable = __w_pdfjs_require__(44);\nmodule.exports = function (V, P) {\n var func = V[P];\n return func == null ? undefined : aCallable(func);\n};\n\n/***/ }),\n/* 44 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar isCallable = __w_pdfjs_require__(8);\nvar tryToString = __w_pdfjs_require__(45);\nvar TypeError = global.TypeError;\nmodule.exports = function (argument) {\n if (isCallable(argument))\n  return argument;\n throw TypeError(tryToString(argument) + \' is not a function\');\n};\n\n/***/ }),\n/* 45 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar String = global.String;\nmodule.exports = function (argument) {\n try {\n  return String(argument);\n } catch (error) {\n  return \'Object\';\n }\n};\n\n/***/ }),\n/* 46 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar call = __w_pdfjs_require__(40);\nvar isCallable = __w_pdfjs_require__(8);\nvar isObject = __w_pdfjs_require__(7);\nvar TypeError = global.TypeError;\nmodule.exports = function (input, pref) {\n var fn, val;\n if (pref === \'string\' && isCallable(fn = input.toString) && !isObject(val = call(fn, input)))\n  return val;\n if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input)))\n  return val;\n if (pref !== \'string\' && isCallable(fn = input.toString) && !isObject(val = call(fn, input)))\n  return val;\n throw TypeError("Can\'t convert object to primitive value");\n};\n\n/***/ }),\n/* 47 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar internalObjectKeys = __w_pdfjs_require__(48);\nvar enumBugKeys = __w_pdfjs_require__(55);\nmodule.exports = Object.keys || function keys(O) {\n return internalObjectKeys(O, enumBugKeys);\n};\n\n/***/ }),\n/* 48 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar uncurryThis = __w_pdfjs_require__(12);\nvar hasOwn = __w_pdfjs_require__(23);\nvar toIndexedObject = __w_pdfjs_require__(10);\nvar indexOf = (__w_pdfjs_require__(49).indexOf);\nvar hiddenKeys = __w_pdfjs_require__(54);\nvar push = uncurryThis([].push);\nmodule.exports = function (object, names) {\n var O = toIndexedObject(object);\n var i = 0;\n var result = [];\n var key;\n for (key in O)\n  !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);\n while (names.length > i)\n  if (hasOwn(O, key = names[i++])) {\n   ~indexOf(result, key) || push(result, key);\n  }\n return result;\n};\n\n/***/ }),\n/* 49 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar toIndexedObject = __w_pdfjs_require__(10);\nvar toAbsoluteIndex = __w_pdfjs_require__(50);\nvar lengthOfArrayLike = __w_pdfjs_require__(52);\nvar createMethod = function (IS_INCLUDES) {\n return function ($this, el, fromIndex) {\n  var O = toIndexedObject($this);\n  var length = lengthOfArrayLike(O);\n  var index = toAbsoluteIndex(fromIndex, length);\n  var value;\n  if (IS_INCLUDES && el != el)\n   while (length > index) {\n    value = O[index++];\n    if (value != value)\n     return true;\n   }\n  else\n   for (; length > index; index++) {\n    if ((IS_INCLUDES || index in O) && O[index] === el)\n     return IS_INCLUDES || index || 0;\n   }\n  return !IS_INCLUDES && -1;\n };\n};\nmodule.exports = {\n includes: createMethod(true),\n indexOf: createMethod(false)\n};\n\n/***/ }),\n/* 50 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar toIntegerOrInfinity = __w_pdfjs_require__(51);\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n var integer = toIntegerOrInfinity(index);\n return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n\n/***/ }),\n/* 51 */\n/***/ ((module) => {\n\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (argument) {\n var number = +argument;\n return number !== number || number === 0 ? 0 : (number > 0 ? floor : ceil)(number);\n};\n\n/***/ }),\n/* 52 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar toLength = __w_pdfjs_require__(53);\nmodule.exports = function (obj) {\n return toLength(obj.length);\n};\n\n/***/ }),\n/* 53 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar toIntegerOrInfinity = __w_pdfjs_require__(51);\nvar min = Math.min;\nmodule.exports = function (argument) {\n return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0;\n};\n\n/***/ }),\n/* 54 */\n/***/ ((module) => {\n\nmodule.exports = {};\n\n/***/ }),\n/* 55 */\n/***/ ((module) => {\n\nmodule.exports = [\n \'constructor\',\n \'hasOwnProperty\',\n \'isPrototypeOf\',\n \'propertyIsEnumerable\',\n \'toLocaleString\',\n \'toString\',\n \'valueOf\'\n];\n\n/***/ }),\n/* 56 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar getBuiltIn = __w_pdfjs_require__(29);\nmodule.exports = getBuiltIn(\'document\', \'documentElement\');\n\n/***/ }),\n/* 57 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar shared = __w_pdfjs_require__(19);\nvar uid = __w_pdfjs_require__(25);\nvar keys = shared(\'keys\');\nmodule.exports = function (key) {\n return keys[key] || (keys[key] = uid(key));\n};\n\n/***/ }),\n/* 58 */\n/***/ ((module) => {\n\nmodule.exports = {};\n\n/***/ }),\n/* 59 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar NATIVE_WEAK_MAP = __w_pdfjs_require__(60);\nvar global = __w_pdfjs_require__(3);\nvar uncurryThis = __w_pdfjs_require__(12);\nvar isObject = __w_pdfjs_require__(7);\nvar createNonEnumerableProperty = __w_pdfjs_require__(62);\nvar hasOwn = __w_pdfjs_require__(23);\nvar shared = __w_pdfjs_require__(21);\nvar sharedKey = __w_pdfjs_require__(57);\nvar hiddenKeys = __w_pdfjs_require__(54);\nvar OBJECT_ALREADY_INITIALIZED = \'Object already initialized\';\nvar TypeError = global.TypeError;\nvar WeakMap = global.WeakMap;\nvar set, get, has;\nvar enforce = function (it) {\n return has(it) ? get(it) : set(it, {});\n};\nvar getterFor = function (TYPE) {\n return function (it) {\n  var state;\n  if (!isObject(it) || (state = get(it)).type !== TYPE) {\n   throw TypeError(\'Incompatible receiver, \' + TYPE + \' required\');\n  }\n  return state;\n };\n};\nif (NATIVE_WEAK_MAP || shared.state) {\n var store = shared.state || (shared.state = new WeakMap());\n var wmget = uncurryThis(store.get);\n var wmhas = uncurryThis(store.has);\n var wmset = uncurryThis(store.set);\n set = function (it, metadata) {\n  if (wmhas(store, it))\n   throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n  metadata.facade = it;\n  wmset(store, it, metadata);\n  return metadata;\n };\n get = function (it) {\n  return wmget(store, it) || {};\n };\n has = function (it) {\n  return wmhas(store, it);\n };\n} else {\n var STATE = sharedKey(\'state\');\n hiddenKeys[STATE] = true;\n set = function (it, metadata) {\n  if (hasOwn(it, STATE))\n   throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n  metadata.facade = it;\n  createNonEnumerableProperty(it, STATE, metadata);\n  return metadata;\n };\n get = function (it) {\n  return hasOwn(it, STATE) ? it[STATE] : {};\n };\n has = function (it) {\n  return hasOwn(it, STATE);\n };\n}\nmodule.exports = {\n set: set,\n get: get,\n has: has,\n enforce: enforce,\n getterFor: getterFor\n};\n\n/***/ }),\n/* 60 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar isCallable = __w_pdfjs_require__(8);\nvar inspectSource = __w_pdfjs_require__(61);\nvar WeakMap = global.WeakMap;\nmodule.exports = isCallable(WeakMap) && /native code/.test(inspectSource(WeakMap));\n\n/***/ }),\n/* 61 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar uncurryThis = __w_pdfjs_require__(12);\nvar isCallable = __w_pdfjs_require__(8);\nvar store = __w_pdfjs_require__(21);\nvar functionToString = uncurryThis(Function.toString);\nif (!isCallable(store.inspectSource)) {\n store.inspectSource = function (it) {\n  return functionToString(it);\n };\n}\nmodule.exports = store.inspectSource;\n\n/***/ }),\n/* 62 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar DESCRIPTORS = __w_pdfjs_require__(34);\nvar definePropertyModule = __w_pdfjs_require__(36);\nvar createPropertyDescriptor = __w_pdfjs_require__(63);\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n object[key] = value;\n return object;\n};\n\n/***/ }),\n/* 63 */\n/***/ ((module) => {\n\nmodule.exports = function (bitmap, value) {\n return {\n  enumerable: !(bitmap & 1),\n  configurable: !(bitmap & 2),\n  writable: !(bitmap & 4),\n  value: value\n };\n};\n\n/***/ }),\n/* 64 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n"use strict";\n\nvar $ = __w_pdfjs_require__(65);\nvar call = __w_pdfjs_require__(40);\nvar IS_PURE = __w_pdfjs_require__(20);\nvar FunctionName = __w_pdfjs_require__(69);\nvar isCallable = __w_pdfjs_require__(8);\nvar createIteratorConstructor = __w_pdfjs_require__(75);\nvar getPrototypeOf = __w_pdfjs_require__(77);\nvar setPrototypeOf = __w_pdfjs_require__(80);\nvar setToStringTag = __w_pdfjs_require__(79);\nvar createNonEnumerableProperty = __w_pdfjs_require__(62);\nvar redefine = __w_pdfjs_require__(68);\nvar wellKnownSymbol = __w_pdfjs_require__(18);\nvar Iterators = __w_pdfjs_require__(58);\nvar IteratorsCore = __w_pdfjs_require__(76);\nvar PROPER_FUNCTION_NAME = FunctionName.PROPER;\nvar CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;\nvar IteratorPrototype = IteratorsCore.IteratorPrototype;\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\nvar ITERATOR = wellKnownSymbol(\'iterator\');\nvar KEYS = \'keys\';\nvar VALUES = \'values\';\nvar ENTRIES = \'entries\';\nvar returnThis = function () {\n return this;\n};\nmodule.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n createIteratorConstructor(IteratorConstructor, NAME, next);\n var getIterationMethod = function (KIND) {\n  if (KIND === DEFAULT && defaultIterator)\n   return defaultIterator;\n  if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype)\n   return IterablePrototype[KIND];\n  switch (KIND) {\n  case KEYS:\n   return function keys() {\n    return new IteratorConstructor(this, KIND);\n   };\n  case VALUES:\n   return function values() {\n    return new IteratorConstructor(this, KIND);\n   };\n  case ENTRIES:\n   return function entries() {\n    return new IteratorConstructor(this, KIND);\n   };\n  }\n  return function () {\n   return new IteratorConstructor(this);\n  };\n };\n var TO_STRING_TAG = NAME + \' Iterator\';\n var INCORRECT_VALUES_NAME = false;\n var IterablePrototype = Iterable.prototype;\n var nativeIterator = IterablePrototype[ITERATOR] || IterablePrototype[\'@@iterator\'] || DEFAULT && IterablePrototype[DEFAULT];\n var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n var anyNativeIterator = NAME == \'Array\' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n var CurrentIteratorPrototype, methods, KEY;\n if (anyNativeIterator) {\n  CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n  if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n   if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n    if (setPrototypeOf) {\n     setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n    } else if (!isCallable(CurrentIteratorPrototype[ITERATOR])) {\n     redefine(CurrentIteratorPrototype, ITERATOR, returnThis);\n    }\n   }\n   setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n   if (IS_PURE)\n    Iterators[TO_STRING_TAG] = returnThis;\n  }\n }\n if (PROPER_FUNCTION_NAME && DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n  if (!IS_PURE && CONFIGURABLE_FUNCTION_NAME) {\n   createNonEnumerableProperty(IterablePrototype, \'name\', VALUES);\n  } else {\n   INCORRECT_VALUES_NAME = true;\n   defaultIterator = function values() {\n    return call(nativeIterator, this);\n   };\n  }\n }\n if (DEFAULT) {\n  methods = {\n   values: getIterationMethod(VALUES),\n   keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n   entries: getIterationMethod(ENTRIES)\n  };\n  if (FORCED)\n   for (KEY in methods) {\n    if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n     redefine(IterablePrototype, KEY, methods[KEY]);\n    }\n   }\n  else\n   $({\n    target: NAME,\n    proto: true,\n    forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME\n   }, methods);\n }\n if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\n  redefine(IterablePrototype, ITERATOR, defaultIterator, { name: DEFAULT });\n }\n Iterators[NAME] = defaultIterator;\n return methods;\n};\n\n/***/ }),\n/* 65 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar getOwnPropertyDescriptor = (__w_pdfjs_require__(66).f);\nvar createNonEnumerableProperty = __w_pdfjs_require__(62);\nvar redefine = __w_pdfjs_require__(68);\nvar setGlobal = __w_pdfjs_require__(22);\nvar copyConstructorProperties = __w_pdfjs_require__(70);\nvar isForced = __w_pdfjs_require__(74);\nmodule.exports = function (options, source) {\n var TARGET = options.target;\n var GLOBAL = options.global;\n var STATIC = options.stat;\n var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n if (GLOBAL) {\n  target = global;\n } else if (STATIC) {\n  target = global[TARGET] || setGlobal(TARGET, {});\n } else {\n  target = (global[TARGET] || {}).prototype;\n }\n if (target)\n  for (key in source) {\n   sourceProperty = source[key];\n   if (options.noTargetGet) {\n    descriptor = getOwnPropertyDescriptor(target, key);\n    targetProperty = descriptor && descriptor.value;\n   } else\n    targetProperty = target[key];\n   FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? \'.\' : \'#\') + key, options.forced);\n   if (!FORCED && targetProperty !== undefined) {\n    if (typeof sourceProperty == typeof targetProperty)\n     continue;\n    copyConstructorProperties(sourceProperty, targetProperty);\n   }\n   if (options.sham || targetProperty && targetProperty.sham) {\n    createNonEnumerableProperty(sourceProperty, \'sham\', true);\n   }\n   redefine(target, key, sourceProperty, options);\n  }\n};\n\n/***/ }),\n/* 66 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\nvar DESCRIPTORS = __w_pdfjs_require__(34);\nvar call = __w_pdfjs_require__(40);\nvar propertyIsEnumerableModule = __w_pdfjs_require__(67);\nvar createPropertyDescriptor = __w_pdfjs_require__(63);\nvar toIndexedObject = __w_pdfjs_require__(10);\nvar toPropertyKey = __w_pdfjs_require__(38);\nvar hasOwn = __w_pdfjs_require__(23);\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(37);\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n O = toIndexedObject(O);\n P = toPropertyKey(P);\n if (IE8_DOM_DEFINE)\n  try {\n   return $getOwnPropertyDescriptor(O, P);\n  } catch (error) {\n  }\n if (hasOwn(O, P))\n  return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);\n};\n\n/***/ }),\n/* 67 */\n/***/ ((__unused_webpack_module, exports) => {\n\n"use strict";\n\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n var descriptor = getOwnPropertyDescriptor(this, V);\n return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n\n/***/ }),\n/* 68 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar isCallable = __w_pdfjs_require__(8);\nvar hasOwn = __w_pdfjs_require__(23);\nvar createNonEnumerableProperty = __w_pdfjs_require__(62);\nvar setGlobal = __w_pdfjs_require__(22);\nvar inspectSource = __w_pdfjs_require__(61);\nvar InternalStateModule = __w_pdfjs_require__(59);\nvar CONFIGURABLE_FUNCTION_NAME = (__w_pdfjs_require__(69).CONFIGURABLE);\nvar getInternalState = InternalStateModule.get;\nvar enforceInternalState = InternalStateModule.enforce;\nvar TEMPLATE = String(String).split(\'String\');\n(module.exports = function (O, key, value, options) {\n var unsafe = options ? !!options.unsafe : false;\n var simple = options ? !!options.enumerable : false;\n var noTargetGet = options ? !!options.noTargetGet : false;\n var name = options && options.name !== undefined ? options.name : key;\n var state;\n if (isCallable(value)) {\n  if (String(name).slice(0, 7) === \'Symbol(\') {\n   name = \'[\' + String(name).replace(/^Symbol\\(([^)]*)\\)/, \'$1\') + \']\';\n  }\n  if (!hasOwn(value, \'name\') || CONFIGURABLE_FUNCTION_NAME && value.name !== name) {\n   createNonEnumerableProperty(value, \'name\', name);\n  }\n  state = enforceInternalState(value);\n  if (!state.source) {\n   state.source = TEMPLATE.join(typeof name == \'string\' ? name : \'\');\n  }\n }\n if (O === global) {\n  if (simple)\n   O[key] = value;\n  else\n   setGlobal(key, value);\n  return;\n } else if (!unsafe) {\n  delete O[key];\n } else if (!noTargetGet && O[key]) {\n  simple = true;\n }\n if (simple)\n  O[key] = value;\n else\n  createNonEnumerableProperty(O, key, value);\n})(Function.prototype, \'toString\', function toString() {\n return isCallable(this) && getInternalState(this).source || inspectSource(this);\n});\n\n/***/ }),\n/* 69 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar DESCRIPTORS = __w_pdfjs_require__(34);\nvar hasOwn = __w_pdfjs_require__(23);\nvar FunctionPrototype = Function.prototype;\nvar getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;\nvar EXISTS = hasOwn(FunctionPrototype, \'name\');\nvar PROPER = EXISTS && function something() {\n}.name === \'something\';\nvar CONFIGURABLE = EXISTS && (!DESCRIPTORS || DESCRIPTORS && getDescriptor(FunctionPrototype, \'name\').configurable);\nmodule.exports = {\n EXISTS: EXISTS,\n PROPER: PROPER,\n CONFIGURABLE: CONFIGURABLE\n};\n\n/***/ }),\n/* 70 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar hasOwn = __w_pdfjs_require__(23);\nvar ownKeys = __w_pdfjs_require__(71);\nvar getOwnPropertyDescriptorModule = __w_pdfjs_require__(66);\nvar definePropertyModule = __w_pdfjs_require__(36);\nmodule.exports = function (target, source, exceptions) {\n var keys = ownKeys(source);\n var defineProperty = definePropertyModule.f;\n var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n for (var i = 0; i < keys.length; i++) {\n  var key = keys[i];\n  if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {\n   defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n  }\n }\n};\n\n/***/ }),\n/* 71 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar getBuiltIn = __w_pdfjs_require__(29);\nvar uncurryThis = __w_pdfjs_require__(12);\nvar getOwnPropertyNamesModule = __w_pdfjs_require__(72);\nvar getOwnPropertySymbolsModule = __w_pdfjs_require__(73);\nvar anObject = __w_pdfjs_require__(32);\nvar concat = uncurryThis([].concat);\nmodule.exports = getBuiltIn(\'Reflect\', \'ownKeys\') || function ownKeys(it) {\n var keys = getOwnPropertyNamesModule.f(anObject(it));\n var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;\n};\n\n/***/ }),\n/* 72 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\nvar internalObjectKeys = __w_pdfjs_require__(48);\nvar enumBugKeys = __w_pdfjs_require__(55);\nvar hiddenKeys = enumBugKeys.concat(\'length\', \'prototype\');\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n return internalObjectKeys(O, hiddenKeys);\n};\n\n/***/ }),\n/* 73 */\n/***/ ((__unused_webpack_module, exports) => {\n\nexports.f = Object.getOwnPropertySymbols;\n\n/***/ }),\n/* 74 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar fails = __w_pdfjs_require__(14);\nvar isCallable = __w_pdfjs_require__(8);\nvar replacement = /#|\\.prototype\\./;\nvar isForced = function (feature, detection) {\n var value = data[normalize(feature)];\n return value == POLYFILL ? true : value == NATIVE ? false : isCallable(detection) ? fails(detection) : !!detection;\n};\nvar normalize = isForced.normalize = function (string) {\n return String(string).replace(replacement, \'.\').toLowerCase();\n};\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = \'N\';\nvar POLYFILL = isForced.POLYFILL = \'P\';\nmodule.exports = isForced;\n\n/***/ }),\n/* 75 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n"use strict";\n\nvar IteratorPrototype = (__w_pdfjs_require__(76).IteratorPrototype);\nvar create = __w_pdfjs_require__(31);\nvar createPropertyDescriptor = __w_pdfjs_require__(63);\nvar setToStringTag = __w_pdfjs_require__(79);\nvar Iterators = __w_pdfjs_require__(58);\nvar returnThis = function () {\n return this;\n};\nmodule.exports = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {\n var TO_STRING_TAG = NAME + \' Iterator\';\n IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(+!ENUMERABLE_NEXT, next) });\n setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n Iterators[TO_STRING_TAG] = returnThis;\n return IteratorConstructor;\n};\n\n/***/ }),\n/* 76 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n"use strict";\n\nvar fails = __w_pdfjs_require__(14);\nvar isCallable = __w_pdfjs_require__(8);\nvar create = __w_pdfjs_require__(31);\nvar getPrototypeOf = __w_pdfjs_require__(77);\nvar redefine = __w_pdfjs_require__(68);\nvar wellKnownSymbol = __w_pdfjs_require__(18);\nvar IS_PURE = __w_pdfjs_require__(20);\nvar ITERATOR = wellKnownSymbol(\'iterator\');\nvar BUGGY_SAFARI_ITERATORS = false;\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\nif ([].keys) {\n arrayIterator = [].keys();\n if (!(\'next\' in arrayIterator))\n  BUGGY_SAFARI_ITERATORS = true;\n else {\n  PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n  if (PrototypeOfArrayIteratorPrototype !== Object.prototype)\n   IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n }\n}\nvar NEW_ITERATOR_PROTOTYPE = IteratorPrototype == undefined || fails(function () {\n var test = {};\n return IteratorPrototype[ITERATOR].call(test) !== test;\n});\nif (NEW_ITERATOR_PROTOTYPE)\n IteratorPrototype = {};\nelse if (IS_PURE)\n IteratorPrototype = create(IteratorPrototype);\nif (!isCallable(IteratorPrototype[ITERATOR])) {\n redefine(IteratorPrototype, ITERATOR, function () {\n  return this;\n });\n}\nmodule.exports = {\n IteratorPrototype: IteratorPrototype,\n BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n\n/***/ }),\n/* 77 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar hasOwn = __w_pdfjs_require__(23);\nvar isCallable = __w_pdfjs_require__(8);\nvar toObject = __w_pdfjs_require__(24);\nvar sharedKey = __w_pdfjs_require__(57);\nvar CORRECT_PROTOTYPE_GETTER = __w_pdfjs_require__(78);\nvar IE_PROTO = sharedKey(\'IE_PROTO\');\nvar Object = global.Object;\nvar ObjectPrototype = Object.prototype;\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {\n var object = toObject(O);\n if (hasOwn(object, IE_PROTO))\n  return object[IE_PROTO];\n var constructor = object.constructor;\n if (isCallable(constructor) && object instanceof constructor) {\n  return constructor.prototype;\n }\n return object instanceof Object ? ObjectPrototype : null;\n};\n\n/***/ }),\n/* 78 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar fails = __w_pdfjs_require__(14);\nmodule.exports = !fails(function () {\n function F() {\n }\n F.prototype.constructor = null;\n return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n\n/***/ }),\n/* 79 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar defineProperty = (__w_pdfjs_require__(36).f);\nvar hasOwn = __w_pdfjs_require__(23);\nvar wellKnownSymbol = __w_pdfjs_require__(18);\nvar TO_STRING_TAG = wellKnownSymbol(\'toStringTag\');\nmodule.exports = function (target, TAG, STATIC) {\n if (target && !STATIC)\n  target = target.prototype;\n if (target && !hasOwn(target, TO_STRING_TAG)) {\n  defineProperty(target, TO_STRING_TAG, {\n   configurable: true,\n   value: TAG\n  });\n }\n};\n\n/***/ }),\n/* 80 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar uncurryThis = __w_pdfjs_require__(12);\nvar anObject = __w_pdfjs_require__(32);\nvar aPossiblePrototype = __w_pdfjs_require__(81);\nmodule.exports = Object.setPrototypeOf || (\'__proto__\' in {} ? (function () {\n var CORRECT_SETTER = false;\n var test = {};\n var setter;\n try {\n  setter = uncurryThis(Object.getOwnPropertyDescriptor(Object.prototype, \'__proto__\').set);\n  setter(test, []);\n  CORRECT_SETTER = test instanceof Array;\n } catch (error) {\n }\n return function setPrototypeOf(O, proto) {\n  anObject(O);\n  aPossiblePrototype(proto);\n  if (CORRECT_SETTER)\n   setter(O, proto);\n  else\n   O.__proto__ = proto;\n  return O;\n };\n}()) : undefined);\n\n/***/ }),\n/* 81 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar isCallable = __w_pdfjs_require__(8);\nvar String = global.String;\nvar TypeError = global.TypeError;\nmodule.exports = function (argument) {\n if (typeof argument == \'object\' || isCallable(argument))\n  return argument;\n throw TypeError("Can\'t set " + String(argument) + \' as a prototype\');\n};\n\n/***/ }),\n/* 82 */\n/***/ ((__unused_webpack_module, exports) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.ZoomType = exports.Trans = exports.Style = exports.ScaleWhen = exports.ScaleHow = exports.Position = exports.Highlight = exports.GlobalConstants = exports.Font = exports.Display = exports.Cursor = exports.Border = void 0;\nconst Border = Object.freeze({\n  s: "solid",\n  d: "dashed",\n  b: "beveled",\n  i: "inset",\n  u: "underline"\n});\nexports.Border = Border;\nconst Cursor = Object.freeze({\n  visible: 0,\n  hidden: 1,\n  delay: 2\n});\nexports.Cursor = Cursor;\nconst Display = Object.freeze({\n  visible: 0,\n  hidden: 1,\n  noPrint: 2,\n  noView: 3\n});\nexports.Display = Display;\nconst Font = Object.freeze({\n  Times: "Times-Roman",\n  TimesB: "Times-Bold",\n  TimesI: "Times-Italic",\n  TimesBI: "Times-BoldItalic",\n  Helv: "Helvetica",\n  HelvB: "Helvetica-Bold",\n  HelvI: "Helvetica-Oblique",\n  HelvBI: "Helvetica-BoldOblique",\n  Cour: "Courier",\n  CourB: "Courier-Bold",\n  CourI: "Courier-Oblique",\n  CourBI: "Courier-BoldOblique",\n  Symbol: "Symbol",\n  ZapfD: "ZapfDingbats",\n  KaGo: "HeiseiKakuGo-W5-UniJIS-UCS2-H",\n  KaMi: "HeiseiMin-W3-UniJIS-UCS2-H"\n});\nexports.Font = Font;\nconst Highlight = Object.freeze({\n  n: "none",\n  i: "invert",\n  p: "push",\n  o: "outline"\n});\nexports.Highlight = Highlight;\nconst Position = Object.freeze({\n  textOnly: 0,\n  iconOnly: 1,\n  iconTextV: 2,\n  textIconV: 3,\n  iconTextH: 4,\n  textIconH: 5,\n  overlay: 6\n});\nexports.Position = Position;\nconst ScaleHow = Object.freeze({\n  proportional: 0,\n  anamorphic: 1\n});\nexports.ScaleHow = ScaleHow;\nconst ScaleWhen = Object.freeze({\n  always: 0,\n  never: 1,\n  tooBig: 2,\n  tooSmall: 3\n});\nexports.ScaleWhen = ScaleWhen;\nconst Style = Object.freeze({\n  ch: "check",\n  cr: "cross",\n  di: "diamond",\n  ci: "circle",\n  st: "star",\n  sq: "square"\n});\nexports.Style = Style;\nconst Trans = Object.freeze({\n  blindsH: "BlindsHorizontal",\n  blindsV: "BlindsVertical",\n  boxI: "BoxIn",\n  boxO: "BoxOut",\n  dissolve: "Dissolve",\n  glitterD: "GlitterDown",\n  glitterR: "GlitterRight",\n  glitterRD: "GlitterRightDown",\n  random: "Random",\n  replace: "Replace",\n  splitHI: "SplitHorizontalIn",\n  splitHO: "SplitHorizontalOut",\n  splitVI: "SplitVerticalIn",\n  splitVO: "SplitVerticalOut",\n  wipeD: "WipeDown",\n  wipeL: "WipeLeft",\n  wipeR: "WipeRight",\n  wipeU: "WipeUp"\n});\nexports.Trans = Trans;\nconst ZoomType = Object.freeze({\n  none: "NoVary",\n  fitP: "FitPage",\n  fitW: "FitWidth",\n  fitH: "FitHeight",\n  fitV: "FitVisibleWidth",\n  pref: "Preferred",\n  refW: "ReflowWidth"\n});\nexports.ZoomType = ZoomType;\nconst GlobalConstants = Object.freeze({\n  IDS_GREATER_THAN: "Invalid value: must be greater than or equal to % s.",\n  IDS_GT_AND_LT: "Invalid value: must be greater than or equal to % s " + "and less than or equal to % s.",\n  IDS_LESS_THAN: "Invalid value: must be less than or equal to % s.",\n  IDS_INVALID_MONTH: "** Invalid **",\n  IDS_INVALID_DATE: "Invalid date / time: please ensure that the date / time exists.Field",\n  IDS_INVALID_DATE2: " should match format ",\n  IDS_INVALID_VALUE: "The value entered does not match the format of the field",\n  IDS_AM: "am",\n  IDS_PM: "pm",\n  IDS_MONTH_INFO: "January[1] February[2] March[3] April[4] May[5] " + "June[6] July[7] August[8] September[9] October[10] " + "November[11] December[12] Sept[9] Jan[1] Feb[2] Mar[3] " + "Apr[4] Jun[6] Jul[7] Aug[8] Sep[9] Oct[10] Nov[11] Dec[12]",\n  IDS_STARTUP_CONSOLE_MSG: "** ^ _ ^ **",\n  RE_NUMBER_ENTRY_DOT_SEP: ["[+-]?\\\\d*\\\\.?\\\\d*"],\n  RE_NUMBER_COMMIT_DOT_SEP: ["[+-]?\\\\d+(\\\\.\\\\d+)?", "[+-]?\\\\.\\\\d+", "[+-]?\\\\d+\\\\."],\n  RE_NUMBER_ENTRY_COMMA_SEP: ["[+-]?\\\\d*,?\\\\d*"],\n  RE_NUMBER_COMMIT_COMMA_SEP: ["[+-]?\\\\d+([.,]\\\\d+)?", "[+-]?[.,]\\\\d+", "[+-]?\\\\d+[.,]"],\n  RE_ZIP_ENTRY: ["\\\\d{0,5}"],\n  RE_ZIP_COMMIT: ["\\\\d{5}"],\n  RE_ZIP4_ENTRY: ["\\\\d{0,5}(\\\\.|[- ])?\\\\d{0,4}"],\n  RE_ZIP4_COMMIT: ["\\\\d{5}(\\\\.|[- ])?\\\\d{4}"],\n  RE_PHONE_ENTRY: ["\\\\d{0,3}(\\\\.|[- ])?\\\\d{0,3}(\\\\.|[- ])?\\\\d{0,4}", "\\\\(\\\\d{0,3}", "\\\\(\\\\d{0,3}\\\\)(\\\\.|[- ])?\\\\d{0,3}(\\\\.|[- ])?\\\\d{0,4}", "\\\\(\\\\d{0,3}(\\\\.|[- ])?\\\\d{0,3}(\\\\.|[- ])?\\\\d{0,4}", "\\\\d{0,3}\\\\)(\\\\.|[- ])?\\\\d{0,3}(\\\\.|[- ])?\\\\d{0,4}", "011(\\\\.|[- \\\\d])*"],\n  RE_PHONE_COMMIT: ["\\\\d{3}(\\\\.|[- ])?\\\\d{4}", "\\\\d{3}(\\\\.|[- ])?\\\\d{3}(\\\\.|[- ])?\\\\d{4}", "\\\\(\\\\d{3}\\\\)(\\\\.|[- ])?\\\\d{3}(\\\\.|[- ])?\\\\d{4}", "011(\\\\.|[- \\\\d])*"],\n  RE_SSN_ENTRY: ["\\\\d{0,3}(\\\\.|[- ])?\\\\d{0,2}(\\\\.|[- ])?\\\\d{0,4}"],\n  RE_SSN_COMMIT: ["\\\\d{3}(\\\\.|[- ])?\\\\d{2}(\\\\.|[- ])?\\\\d{4}"]\n});\nexports.GlobalConstants = GlobalConstants;\n\n/***/ }),\n/* 83 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.RadioButtonField = exports.Field = exports.CheckboxField = void 0;\n\n__w_pdfjs_require__(2);\n\nvar _common = __w_pdfjs_require__(84);\n\nvar _color = __w_pdfjs_require__(85);\n\nvar _pdf_object = __w_pdfjs_require__(87);\n\nclass Field extends _pdf_object.PDFObject {\n  constructor(data) {\n    super(data);\n    this.alignment = data.alignment || "left";\n    this.borderStyle = data.borderStyle || "";\n    this.buttonAlignX = data.buttonAlignX || 50;\n    this.buttonAlignY = data.buttonAlignY || 50;\n    this.buttonFitBounds = data.buttonFitBounds;\n    this.buttonPosition = data.buttonPosition;\n    this.buttonScaleHow = data.buttonScaleHow;\n    this.ButtonScaleWhen = data.buttonScaleWhen;\n    this.calcOrderIndex = data.calcOrderIndex;\n    this.charLimit = data.charLimit;\n    this.comb = data.comb;\n    this.commitOnSelChange = data.commitOnSelChange;\n    this.currentValueIndices = data.currentValueIndices;\n    this.defaultStyle = data.defaultStyle;\n    this.defaultValue = data.defaultValue;\n    this.doNotScroll = data.doNotScroll;\n    this.doNotSpellCheck = data.doNotSpellCheck;\n    this.delay = data.delay;\n    this.display = data.display;\n    this.doc = data.doc.wrapped;\n    this.editable = data.editable;\n    this.exportValues = data.exportValues;\n    this.fileSelect = data.fileSelect;\n    this.hidden = data.hidden;\n    this.highlight = data.highlight;\n    this.lineWidth = data.lineWidth;\n    this.multiline = data.multiline;\n    this.multipleSelection = !!data.multipleSelection;\n    this.name = data.name;\n    this.password = data.password;\n    this.print = data.print;\n    this.radiosInUnison = data.radiosInUnison;\n    this.readonly = data.readonly;\n    this.rect = data.rect;\n    this.required = data.required;\n    this.richText = data.richText;\n    this.richValue = data.richValue;\n    this.rotation = data.rotation;\n    this.style = data.style;\n    this.submitName = data.submitName;\n    this.textFont = data.textFont;\n    this.textSize = data.textSize;\n    this.type = data.type;\n    this.userName = data.userName;\n    this._actions = (0, _common.createActionsMap)(data.actions);\n    this._browseForFileToSubmit = data.browseForFileToSubmit || null;\n    this._buttonCaption = null;\n    this._buttonIcon = null;\n    this._children = null;\n    this._currentValueIndices = data.currentValueIndices || 0;\n    this._document = data.doc;\n    this._fieldPath = data.fieldPath;\n    this._fillColor = data.fillColor || ["T"];\n    this._isChoice = Array.isArray(data.items);\n    this._items = data.items || [];\n    this._page = data.page || 0;\n    this._strokeColor = data.strokeColor || ["G", 0];\n    this._textColor = data.textColor || ["G", 0];\n    this._value = data.value || "";\n    this._kidIds = data.kidIds || null;\n    this._fieldType = (0, _common.getFieldType)(this._actions);\n    this._siblings = data.siblings || null;\n    this._globalEval = data.globalEval;\n    this._appObjects = data.appObjects;\n    this.valueAsString = data.valueAsString || this._value;\n  }\n\n  get currentValueIndices() {\n    if (!this._isChoice) {\n      return 0;\n    }\n\n    return this._currentValueIndices;\n  }\n\n  set currentValueIndices(indices) {\n    if (!this._isChoice) {\n      return;\n    }\n\n    if (!Array.isArray(indices)) {\n      indices = [indices];\n    }\n\n    if (!indices.every(i => typeof i === "number" && Number.isInteger(i) && i >= 0 && i < this.numItems)) {\n      return;\n    }\n\n    indices.sort();\n\n    if (this.multipleSelection) {\n      this._currentValueIndices = indices;\n      this._value = [];\n      indices.forEach(i => {\n        this._value.push(this._items[i].displayValue);\n      });\n    } else {\n      if (indices.length > 0) {\n        indices = indices.splice(1, indices.length - 1);\n        this._currentValueIndices = indices[0];\n        this._value = this._items[this._currentValueIndices];\n      }\n    }\n\n    this._send({\n      id: this._id,\n      indices\n    });\n  }\n\n  get fillColor() {\n    return this._fillColor;\n  }\n\n  set fillColor(color) {\n    if (_color.Color._isValidColor(color)) {\n      this._fillColor = color;\n    }\n  }\n\n  get bgColor() {\n    return this.fillColor;\n  }\n\n  set bgColor(color) {\n    this.fillColor = color;\n  }\n\n  get numItems() {\n    if (!this._isChoice) {\n      throw new Error("Not a choice widget");\n    }\n\n    return this._items.length;\n  }\n\n  set numItems(_) {\n    throw new Error("field.numItems is read-only");\n  }\n\n  get strokeColor() {\n    return this._strokeColor;\n  }\n\n  set strokeColor(color) {\n    if (_color.Color._isValidColor(color)) {\n      this._strokeColor = color;\n    }\n  }\n\n  get borderColor() {\n    return this.strokeColor;\n  }\n\n  set borderColor(color) {\n    this.strokeColor = color;\n  }\n\n  get page() {\n    return this._page;\n  }\n\n  set page(_) {\n    throw new Error("field.page is read-only");\n  }\n\n  get textColor() {\n    return this._textColor;\n  }\n\n  set textColor(color) {\n    if (_color.Color._isValidColor(color)) {\n      this._textColor = color;\n    }\n  }\n\n  get fgColor() {\n    return this.textColor;\n  }\n\n  set fgColor(color) {\n    this.textColor = color;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    if (value === "") {\n      this._value = "";\n    } else if (typeof value === "string") {\n      switch (this._fieldType) {\n        case _common.FieldType.number:\n        case _common.FieldType.percent:\n          value = parseFloat(value);\n\n          if (!isNaN(value)) {\n            this._value = value;\n          }\n\n          break;\n\n        default:\n          this._value = value;\n      }\n    } else {\n      this._value = value;\n    }\n\n    if (this._isChoice) {\n      if (this.multipleSelection) {\n        const values = new Set(value);\n        this._currentValueIndices.length = 0;\n\n        this._items.forEach((_ref, i) => {\n          let {\n            displayValue\n          } = _ref;\n\n          if (values.has(displayValue)) {\n            this._currentValueIndices.push(i);\n          }\n        });\n      } else {\n        this._currentValueIndices = this._items.findIndex(_ref2 => {\n          let {\n            displayValue\n          } = _ref2;\n          return value === displayValue;\n        });\n      }\n    }\n  }\n\n  get valueAsString() {\n    if (this._valueAsString === undefined) {\n      this._valueAsString = this._value ? this._value.toString() : "";\n    }\n\n    return this._valueAsString;\n  }\n\n  set valueAsString(val) {\n    this._valueAsString = val ? val.toString() : "";\n  }\n\n  browseForFileToSubmit() {\n    if (this._browseForFileToSubmit) {\n      this._browseForFileToSubmit();\n    }\n  }\n\n  buttonGetCaption() {\n    let nFace = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    if (this._buttonCaption) {\n      return this._buttonCaption[nFace];\n    }\n\n    return "";\n  }\n\n  buttonGetIcon() {\n    let nFace = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    if (this._buttonIcon) {\n      return this._buttonIcon[nFace];\n    }\n\n    return null;\n  }\n\n  buttonImportIcon() {\n    let cPath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let nPave = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  }\n\n  buttonSetCaption(cCaption) {\n    let nFace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    if (!this._buttonCaption) {\n      this._buttonCaption = ["", "", ""];\n    }\n\n    this._buttonCaption[nFace] = cCaption;\n  }\n\n  buttonSetIcon(oIcon) {\n    let nFace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    if (!this._buttonIcon) {\n      this._buttonIcon = [null, null, null];\n    }\n\n    this._buttonIcon[nFace] = oIcon;\n  }\n\n  checkThisBox(nWidget) {\n    let bCheckIt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  }\n\n  clearItems() {\n    if (!this._isChoice) {\n      throw new Error("Not a choice widget");\n    }\n\n    this._items = [];\n\n    this._send({\n      id: this._id,\n      clear: null\n    });\n  }\n\n  deleteItemAt() {\n    let nIdx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    if (!this._isChoice) {\n      throw new Error("Not a choice widget");\n    }\n\n    if (!this.numItems) {\n      return;\n    }\n\n    if (nIdx === null) {\n      nIdx = Array.isArray(this._currentValueIndices) ? this._currentValueIndices[0] : this._currentValueIndices;\n      nIdx = nIdx || 0;\n    }\n\n    if (nIdx < 0 || nIdx >= this.numItems) {\n      nIdx = this.numItems - 1;\n    }\n\n    this._items.splice(nIdx, 1);\n\n    if (Array.isArray(this._currentValueIndices)) {\n      let index = this._currentValueIndices.findIndex(i => i >= nIdx);\n\n      if (index !== -1) {\n        if (this._currentValueIndices[index] === nIdx) {\n          this._currentValueIndices.splice(index, 1);\n        }\n\n        for (const ii = this._currentValueIndices.length; index < ii; index++) {\n          --this._currentValueIndices[index];\n        }\n      }\n    } else {\n      if (this._currentValueIndices === nIdx) {\n        this._currentValueIndices = this.numItems > 0 ? 0 : -1;\n      } else if (this._currentValueIndices > nIdx) {\n        --this._currentValueIndices;\n      }\n    }\n\n    this._send({\n      id: this._id,\n      remove: nIdx\n    });\n  }\n\n  getItemAt() {\n    let nIdx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;\n    let bExportValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!this._isChoice) {\n      throw new Error("Not a choice widget");\n    }\n\n    if (nIdx < 0 || nIdx >= this.numItems) {\n      nIdx = this.numItems - 1;\n    }\n\n    const item = this._items[nIdx];\n    return bExportValue ? item.exportValue : item.displayValue;\n  }\n\n  getArray() {\n    if (this._kidIds) {\n      return this._kidIds.map(id => this._appObjects[id].wrapped);\n    }\n\n    if (this._children === null) {\n      this._children = this._document.obj._getChildren(this._fieldPath);\n    }\n\n    return this._children;\n  }\n\n  getLock() {\n    return undefined;\n  }\n\n  isBoxChecked(nWidget) {\n    return false;\n  }\n\n  isDefaultChecked(nWidget) {\n    return false;\n  }\n\n  insertItemAt(cName) {\n    let cExport = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n    let nIdx = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n    if (!this._isChoice) {\n      throw new Error("Not a choice widget");\n    }\n\n    if (!cName) {\n      return;\n    }\n\n    if (nIdx < 0 || nIdx > this.numItems) {\n      nIdx = this.numItems;\n    }\n\n    if (this._items.some(_ref3 => {\n      let {\n        displayValue\n      } = _ref3;\n      return displayValue === cName;\n    })) {\n      return;\n    }\n\n    if (cExport === undefined) {\n      cExport = cName;\n    }\n\n    const data = {\n      displayValue: cName,\n      exportValue: cExport\n    };\n\n    this._items.splice(nIdx, 0, data);\n\n    if (Array.isArray(this._currentValueIndices)) {\n      let index = this._currentValueIndices.findIndex(i => i >= nIdx);\n\n      if (index !== -1) {\n        for (const ii = this._currentValueIndices.length; index < ii; index++) {\n          ++this._currentValueIndices[index];\n        }\n      }\n    } else if (this._currentValueIndices >= nIdx) {\n      ++this._currentValueIndices;\n    }\n\n    this._send({\n      id: this._id,\n      insert: {\n        index: nIdx,\n        ...data\n      }\n    });\n  }\n\n  setAction(cTrigger, cScript) {\n    if (typeof cTrigger !== "string" || typeof cScript !== "string") {\n      return;\n    }\n\n    if (!(cTrigger in this._actions)) {\n      this._actions[cTrigger] = [];\n    }\n\n    this._actions[cTrigger].push(cScript);\n  }\n\n  setFocus() {\n    this._send({\n      id: this._id,\n      focus: true\n    });\n  }\n\n  setItems(oArray) {\n    if (!this._isChoice) {\n      throw new Error("Not a choice widget");\n    }\n\n    this._items.length = 0;\n\n    for (const element of oArray) {\n      let displayValue, exportValue;\n\n      if (Array.isArray(element)) {\n        var _element$, _element$2;\n\n        displayValue = ((_element$ = element[0]) === null || _element$ === void 0 ? void 0 : _element$.toString()) || "";\n        exportValue = ((_element$2 = element[1]) === null || _element$2 === void 0 ? void 0 : _element$2.toString()) || "";\n      } else {\n        displayValue = exportValue = (element === null || element === void 0 ? void 0 : element.toString()) || "";\n      }\n\n      this._items.push({\n        displayValue,\n        exportValue\n      });\n    }\n\n    this._currentValueIndices = 0;\n\n    this._send({\n      id: this._id,\n      items: this._items\n    });\n  }\n\n  setLock() {}\n\n  signatureGetModifications() {}\n\n  signatureGetSeedValue() {}\n\n  signatureInfo() {}\n\n  signatureSetSeedValue() {}\n\n  signatureSign() {}\n\n  signatureValidate() {}\n\n  _isButton() {\n    return false;\n  }\n\n  _reset() {\n    this.value = this.valueAsString = this.defaultValue;\n  }\n\n  _runActions(event) {\n    const eventName = event.name;\n\n    if (!this._actions.has(eventName)) {\n      return false;\n    }\n\n    const actions = this._actions.get(eventName);\n\n    try {\n      for (const action of actions) {\n        this._globalEval(action);\n      }\n    } catch (error) {\n      event.rc = false;\n      throw error;\n    }\n\n    return true;\n  }\n\n}\n\nexports.Field = Field;\n\nclass RadioButtonField extends Field {\n  constructor(otherButtons, data) {\n    super(data);\n    this.exportValues = [this.exportValues];\n    this._radioIds = [this._id];\n    this._radioActions = [this._actions];\n\n    for (const radioData of otherButtons) {\n      this.exportValues.push(radioData.exportValues);\n\n      this._radioIds.push(radioData.id);\n\n      this._radioActions.push((0, _common.createActionsMap)(radioData.actions));\n\n      if (this._value === radioData.exportValues) {\n        this._id = radioData.id;\n      }\n    }\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    if (value === null || value === undefined) {\n      this._value = "";\n    }\n\n    const i = this.exportValues.indexOf(value);\n\n    if (0 <= i && i < this._radioIds.length) {\n      this._id = this._radioIds[i];\n      this._value = value;\n    } else if (value === "Off" && this._radioIds.length === 2) {\n      const nextI = (1 + this._radioIds.indexOf(this._id)) % 2;\n      this._id = this._radioIds[nextI];\n      this._value = this.exportValues[nextI];\n    }\n  }\n\n  checkThisBox(nWidget) {\n    let bCheckIt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (nWidget < 0 || nWidget >= this._radioIds.length || !bCheckIt) {\n      return;\n    }\n\n    this._id = this._radioIds[nWidget];\n    this._value = this.exportValues[nWidget];\n\n    this._send({\n      id: this._id,\n      value: this._value\n    });\n  }\n\n  isBoxChecked(nWidget) {\n    return nWidget >= 0 && nWidget < this._radioIds.length && this._id === this._radioIds[nWidget];\n  }\n\n  isDefaultChecked(nWidget) {\n    return nWidget >= 0 && nWidget < this.exportValues.length && this.defaultValue === this.exportValues[nWidget];\n  }\n\n  _getExportValue(state) {\n    const i = this._radioIds.indexOf(this._id);\n\n    return this.exportValues[i];\n  }\n\n  _runActions(event) {\n    const i = this._radioIds.indexOf(this._id);\n\n    this._actions = this._radioActions[i];\n    return super._runActions(event);\n  }\n\n  _isButton() {\n    return true;\n  }\n\n}\n\nexports.RadioButtonField = RadioButtonField;\n\nclass CheckboxField extends RadioButtonField {\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    if (!value || value === "Off") {\n      this._value = "Off";\n    } else {\n      super.value = value;\n    }\n  }\n\n  _getExportValue(state) {\n    return state ? super._getExportValue(state) : "Off";\n  }\n\n  isBoxChecked(nWidget) {\n    if (this._value === "Off") {\n      return false;\n    }\n\n    return super.isBoxChecked(nWidget);\n  }\n\n  isDefaultChecked(nWidget) {\n    if (this.defaultValue === "Off") {\n      return this._value === "Off";\n    }\n\n    return super.isDefaultChecked(nWidget);\n  }\n\n  checkThisBox(nWidget) {\n    let bCheckIt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (nWidget < 0 || nWidget >= this._radioIds.length) {\n      return;\n    }\n\n    this._id = this._radioIds[nWidget];\n    this._value = bCheckIt ? this.exportValues[nWidget] : "Off";\n\n    this._send({\n      id: this._id,\n      value: this._value\n    });\n  }\n\n}\n\nexports.CheckboxField = CheckboxField;\n\n/***/ }),\n/* 84 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.FieldType = void 0;\nexports.createActionsMap = createActionsMap;\nexports.getFieldType = getFieldType;\n\n__w_pdfjs_require__(2);\n\nconst FieldType = {\n  none: 0,\n  number: 1,\n  percent: 2,\n  date: 3,\n  time: 4\n};\nexports.FieldType = FieldType;\n\nfunction createActionsMap(actions) {\n  const actionsMap = new Map();\n\n  if (actions) {\n    for (const [eventType, actionsForEvent] of Object.entries(actions)) {\n      actionsMap.set(eventType, actionsForEvent);\n    }\n  }\n\n  return actionsMap;\n}\n\nfunction getFieldType(actions) {\n  let format = actions.get("Format");\n\n  if (!format) {\n    return FieldType.none;\n  }\n\n  format = format[0];\n  format = format.trim();\n\n  if (format.startsWith("AFNumber_")) {\n    return FieldType.number;\n  }\n\n  if (format.startsWith("AFPercent_")) {\n    return FieldType.percent;\n  }\n\n  if (format.startsWith("AFDate_")) {\n    return FieldType.date;\n  }\n\n  if (format.startsWith("AFTime__")) {\n    return FieldType.time;\n  }\n\n  return FieldType.none;\n}\n\n/***/ }),\n/* 85 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.Color = void 0;\n\nvar _scripting_utils = __w_pdfjs_require__(86);\n\nvar _pdf_object = __w_pdfjs_require__(87);\n\nclass Color extends _pdf_object.PDFObject {\n  constructor() {\n    super({});\n    this.transparent = ["T"];\n    this.black = ["G", 0];\n    this.white = ["G", 1];\n    this.red = ["RGB", 1, 0, 0];\n    this.green = ["RGB", 0, 1, 0];\n    this.blue = ["RGB", 0, 0, 1];\n    this.cyan = ["CMYK", 1, 0, 0, 0];\n    this.magenta = ["CMYK", 0, 1, 0, 0];\n    this.yellow = ["CMYK", 0, 0, 1, 0];\n    this.dkGray = ["G", 0.25];\n    this.gray = ["G", 0.5];\n    this.ltGray = ["G", 0.75];\n  }\n\n  static _isValidSpace(cColorSpace) {\n    return typeof cColorSpace === "string" && (cColorSpace === "T" || cColorSpace === "G" || cColorSpace === "RGB" || cColorSpace === "CMYK");\n  }\n\n  static _isValidColor(colorArray) {\n    if (!Array.isArray(colorArray) || colorArray.length === 0) {\n      return false;\n    }\n\n    const space = colorArray[0];\n\n    if (!Color._isValidSpace(space)) {\n      return false;\n    }\n\n    switch (space) {\n      case "T":\n        if (colorArray.length !== 1) {\n          return false;\n        }\n\n        break;\n\n      case "G":\n        if (colorArray.length !== 2) {\n          return false;\n        }\n\n        break;\n\n      case "RGB":\n        if (colorArray.length !== 4) {\n          return false;\n        }\n\n        break;\n\n      case "CMYK":\n        if (colorArray.length !== 5) {\n          return false;\n        }\n\n        break;\n\n      default:\n        return false;\n    }\n\n    return colorArray.slice(1).every(c => typeof c === "number" && c >= 0 && c <= 1);\n  }\n\n  static _getCorrectColor(colorArray) {\n    return Color._isValidColor(colorArray) ? colorArray : ["G", 0];\n  }\n\n  convert(colorArray, cColorSpace) {\n    if (!Color._isValidSpace(cColorSpace)) {\n      return this.black;\n    }\n\n    if (cColorSpace === "T") {\n      return ["T"];\n    }\n\n    colorArray = Color._getCorrectColor(colorArray);\n\n    if (colorArray[0] === cColorSpace) {\n      return colorArray;\n    }\n\n    if (colorArray[0] === "T") {\n      return this.convert(this.black, cColorSpace);\n    }\n\n    return _scripting_utils.ColorConverters["".concat(colorArray[0], "_").concat(cColorSpace)](colorArray.slice(1));\n  }\n\n  equal(colorArray1, colorArray2) {\n    colorArray1 = Color._getCorrectColor(colorArray1);\n    colorArray2 = Color._getCorrectColor(colorArray2);\n\n    if (colorArray1[0] === "T" || colorArray2[0] === "T") {\n      return colorArray1[0] === "T" && colorArray2[0] === "T";\n    }\n\n    if (colorArray1[0] !== colorArray2[0]) {\n      colorArray2 = this.convert(colorArray2, colorArray1[0]);\n    }\n\n    return colorArray1.slice(1).every((c, i) => c === colorArray2[i + 1]);\n  }\n\n}\n\nexports.Color = Color;\n\n/***/ }),\n/* 86 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.ColorConverters = void 0;\n\n__w_pdfjs_require__(2);\n\nfunction makeColorComp(n) {\n  return Math.floor(Math.max(0, Math.min(1, n)) * 255).toString(16).padStart(2, "0");\n}\n\nclass ColorConverters {\n  static CMYK_G(_ref) {\n    let [c, y, m, k] = _ref;\n    return ["G", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n  }\n\n  static G_CMYK(_ref2) {\n    let [g] = _ref2;\n    return ["CMYK", 0, 0, 0, 1 - g];\n  }\n\n  static G_RGB(_ref3) {\n    let [g] = _ref3;\n    return ["RGB", g, g, g];\n  }\n\n  static G_HTML(_ref4) {\n    let [g] = _ref4;\n    const G = makeColorComp(g);\n    return "#".concat(G).concat(G).concat(G);\n  }\n\n  static RGB_G(_ref5) {\n    let [r, g, b] = _ref5;\n    return ["G", 0.3 * r + 0.59 * g + 0.11 * b];\n  }\n\n  static RGB_HTML(_ref6) {\n    let [r, g, b] = _ref6;\n    const R = makeColorComp(r);\n    const G = makeColorComp(g);\n    const B = makeColorComp(b);\n    return "#".concat(R).concat(G).concat(B);\n  }\n\n  static T_HTML() {\n    return "#00000000";\n  }\n\n  static CMYK_RGB(_ref7) {\n    let [c, y, m, k] = _ref7;\n    return ["RGB", 1 - Math.min(1, c + k), 1 - Math.min(1, m + k), 1 - Math.min(1, y + k)];\n  }\n\n  static CMYK_HTML(components) {\n    return this.RGB_HTML(this.CMYK_RGB(components));\n  }\n\n  static RGB_CMYK(_ref8) {\n    let [r, g, b] = _ref8;\n    const c = 1 - r;\n    const m = 1 - g;\n    const y = 1 - b;\n    const k = Math.min(c, m, y);\n    return ["CMYK", c, m, y, k];\n  }\n\n}\n\nexports.ColorConverters = ColorConverters;\n\n/***/ }),\n/* 87 */\n/***/ ((__unused_webpack_module, exports) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.PDFObject = void 0;\n\nclass PDFObject {\n  constructor(data) {\n    this._expandos = Object.create(null);\n    this._send = data.send || null;\n    this._id = data.id || null;\n  }\n\n}\n\nexports.PDFObject = PDFObject;\n\n/***/ }),\n/* 88 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.AForm = void 0;\n\n__w_pdfjs_require__(89);\n\n__w_pdfjs_require__(100);\n\n__w_pdfjs_require__(102);\n\n__w_pdfjs_require__(109);\n\n__w_pdfjs_require__(2);\n\nvar _constants = __w_pdfjs_require__(82);\n\nclass AForm {\n  constructor(document, app, util, color) {\n    this._document = document;\n    this._app = app;\n    this._util = util;\n    this._color = color;\n    this._dateFormats = ["m/d", "m/d/yy", "mm/dd/yy", "mm/yy", "d-mmm", "d-mmm-yy", "dd-mmm-yy", "yy-mm-dd", "mmm-yy", "mmmm-yy", "mmm d, yyyy", "mmmm d, yyyy", "m/d/yy h:MM tt", "m/d/yy HH:MM"];\n    this._timeFormats = ["HH:MM", "h:MM tt", "HH:MM:ss", "h:MM:ss tt"];\n    this._emailRegex = new RegExp("^[a-zA-Z0-9.!#$%&\'*+\\\\/=?^_`{|}~-]+" + "@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?" + "(?:\\\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$");\n  }\n\n  _mkTargetName(event) {\n    return event.target ? "[ ".concat(event.target.name, " ]") : "";\n  }\n\n  _parseDate(cFormat, cDate) {\n    const ddate = Date.parse(cDate);\n\n    if (isNaN(ddate)) {\n      try {\n        return this._util.scand(cFormat, cDate);\n      } catch (error) {\n        return null;\n      }\n    } else {\n      return new Date(ddate);\n    }\n  }\n\n  AFMergeChange() {\n    let event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : globalThis.event;\n\n    if (event.willCommit) {\n      return event.value.toString();\n    }\n\n    return this._app._eventDispatcher.mergeChange(event);\n  }\n\n  AFParseDateEx(cString, cOrder) {\n    return this._parseDate(cOrder, cString);\n  }\n\n  AFExtractNums(str) {\n    if (typeof str === "number") {\n      return [str];\n    }\n\n    if (!str || typeof str !== "string") {\n      return null;\n    }\n\n    const first = str.charAt(0);\n\n    if (first === "." || first === ",") {\n      str = "0".concat(str);\n    }\n\n    const numbers = str.match(/(\\d+)/g);\n\n    if (numbers.length === 0) {\n      return null;\n    }\n\n    return numbers;\n  }\n\n  AFMakeNumber(str) {\n    if (typeof str === "number") {\n      return str;\n    }\n\n    if (typeof str !== "string") {\n      return null;\n    }\n\n    str = str.trim().replace(",", ".");\n    const number = parseFloat(str);\n\n    if (isNaN(number) || !isFinite(number)) {\n      return null;\n    }\n\n    return number;\n  }\n\n  AFMakeArrayFromList(string) {\n    if (typeof string === "string") {\n      return string.split(/, ?/g);\n    }\n\n    return string;\n  }\n\n  AFNumber_Format(nDec, sepStyle, negStyle, currStyle, strCurrency, bCurrencyPrepend) {\n    const event = globalThis.event;\n\n    if (!event.value) {\n      return;\n    }\n\n    let value = this.AFMakeNumber(event.value);\n\n    if (value === null) {\n      event.value = "";\n      return;\n    }\n\n    const sign = Math.sign(value);\n    const buf = [];\n    let hasParen = false;\n\n    if (sign === -1 && bCurrencyPrepend && negStyle === 0) {\n      buf.push("-");\n    }\n\n    if ((negStyle === 2 || negStyle === 3) && sign === -1) {\n      buf.push("(");\n      hasParen = true;\n    }\n\n    if (bCurrencyPrepend) {\n      buf.push(strCurrency);\n    }\n\n    sepStyle = Math.min(Math.max(0, Math.floor(sepStyle)), 4);\n    buf.push("%,", sepStyle, ".", nDec.toString(), "f");\n\n    if (!bCurrencyPrepend) {\n      buf.push(strCurrency);\n    }\n\n    if (hasParen) {\n      buf.push(")");\n    }\n\n    if (negStyle === 1 || negStyle === 3) {\n      event.target.textColor = sign === 1 ? this._color.black : this._color.red;\n    }\n\n    if ((negStyle !== 0 || bCurrencyPrepend) && sign === -1) {\n      value = -value;\n    }\n\n    const formatStr = buf.join("");\n    event.value = this._util.printf(formatStr, value);\n  }\n\n  AFNumber_Keystroke(nDec, sepStyle, negStyle, currStyle, strCurrency, bCurrencyPrepend) {\n    const event = globalThis.event;\n    let value = this.AFMergeChange(event);\n\n    if (!value) {\n      return;\n    }\n\n    value = value.trim();\n    let pattern;\n\n    if (sepStyle > 1) {\n      pattern = event.willCommit ? /^[+-]?(\\d+(,\\d*)?|,\\d+)$/ : /^[+-]?\\d*,?\\d*$/;\n    } else {\n      pattern = event.willCommit ? /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)$/ : /^[+-]?\\d*\\.?\\d*$/;\n    }\n\n    if (!pattern.test(value)) {\n      if (event.willCommit) {\n        const err = "".concat(_constants.GlobalConstants.IDS_INVALID_VALUE, " ").concat(this._mkTargetName(event));\n\n        this._app.alert(err);\n      }\n\n      event.rc = false;\n    }\n\n    if (event.willCommit && sepStyle > 1) {\n      event.value = parseFloat(value.replace(",", "."));\n    }\n  }\n\n  AFPercent_Format(nDec, sepStyle) {\n    let percentPrepend = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (typeof nDec !== "number") {\n      return;\n    }\n\n    if (typeof sepStyle !== "number") {\n      return;\n    }\n\n    if (nDec < 0) {\n      throw new Error("Invalid nDec value in AFPercent_Format");\n    }\n\n    const event = globalThis.event;\n\n    if (nDec > 512) {\n      event.value = "%";\n      return;\n    }\n\n    nDec = Math.floor(nDec);\n    sepStyle = Math.min(Math.max(0, Math.floor(sepStyle)), 4);\n    let value = this.AFMakeNumber(event.value);\n\n    if (value === null) {\n      event.value = "%";\n      return;\n    }\n\n    const formatStr = "%,".concat(sepStyle, ".").concat(nDec, "f");\n    value = this._util.printf(formatStr, value * 100);\n\n    if (percentPrepend) {\n      event.value = "%".concat(value);\n    } else {\n      event.value = "".concat(value, "%");\n    }\n  }\n\n  AFPercent_Keystroke(nDec, sepStyle) {\n    this.AFNumber_Keystroke(nDec, sepStyle, 0, 0, "", true);\n  }\n\n  AFDate_FormatEx(cFormat) {\n    const event = globalThis.event;\n    const value = event.value;\n\n    if (!value) {\n      return;\n    }\n\n    const date = this._parseDate(cFormat, value);\n\n    if (date !== null) {\n      event.value = this._util.printd(cFormat, date);\n    }\n  }\n\n  AFDate_Format(pdf) {\n    if (pdf >= 0 && pdf < this._dateFormats.length) {\n      this.AFDate_FormatEx(this._dateFormats[pdf]);\n    }\n  }\n\n  AFDate_KeystrokeEx(cFormat) {\n    const event = globalThis.event;\n\n    if (!event.willCommit) {\n      return;\n    }\n\n    const value = this.AFMergeChange(event);\n\n    if (!value) {\n      return;\n    }\n\n    if (this._parseDate(cFormat, value) === null) {\n      const invalid = _constants.GlobalConstants.IDS_INVALID_DATE;\n      const invalid2 = _constants.GlobalConstants.IDS_INVALID_DATE2;\n      const err = "".concat(invalid, " ").concat(this._mkTargetName(event)).concat(invalid2).concat(cFormat);\n\n      this._app.alert(err);\n\n      event.rc = false;\n    }\n  }\n\n  AFDate_Keystroke(pdf) {\n    if (pdf >= 0 && pdf < this._dateFormats.length) {\n      this.AFDate_KeystrokeEx(this._dateFormats[pdf]);\n    }\n  }\n\n  AFRange_Validate(bGreaterThan, nGreaterThan, bLessThan, nLessThan) {\n    const event = globalThis.event;\n\n    if (!event.value) {\n      return;\n    }\n\n    const value = this.AFMakeNumber(event.value);\n\n    if (value === null) {\n      return;\n    }\n\n    bGreaterThan = !!bGreaterThan;\n    bLessThan = !!bLessThan;\n\n    if (bGreaterThan) {\n      nGreaterThan = this.AFMakeNumber(nGreaterThan);\n\n      if (nGreaterThan === null) {\n        return;\n      }\n    }\n\n    if (bLessThan) {\n      nLessThan = this.AFMakeNumber(nLessThan);\n\n      if (nLessThan === null) {\n        return;\n      }\n    }\n\n    let err = "";\n\n    if (bGreaterThan && bLessThan) {\n      if (value < nGreaterThan || value > nLessThan) {\n        err = this._util.printf(_constants.GlobalConstants.IDS_GT_AND_LT, nGreaterThan, nLessThan);\n      }\n    } else if (bGreaterThan) {\n      if (value < nGreaterThan) {\n        err = this._util.printf(_constants.GlobalConstants.IDS_GREATER_THAN, nGreaterThan);\n      }\n    } else if (value > nLessThan) {\n      err = this._util.printf(_constants.GlobalConstants.IDS_LESS_THAN, nLessThan);\n    }\n\n    if (err) {\n      this._app.alert(err);\n\n      event.rc = false;\n    }\n  }\n\n  AFSimple(cFunction, nValue1, nValue2) {\n    const value1 = this.AFMakeNumber(nValue1);\n\n    if (value1 === null) {\n      throw new Error("Invalid nValue1 in AFSimple");\n    }\n\n    const value2 = this.AFMakeNumber(nValue2);\n\n    if (value2 === null) {\n      throw new Error("Invalid nValue2 in AFSimple");\n    }\n\n    switch (cFunction) {\n      case "AVG":\n        return (value1 + value2) / 2;\n\n      case "SUM":\n        return value1 + value2;\n\n      case "PRD":\n        return value1 * value2;\n\n      case "MIN":\n        return Math.min(value1, value2);\n\n      case "MAX":\n        return Math.max(value1, value2);\n    }\n\n    throw new Error("Invalid cFunction in AFSimple");\n  }\n\n  AFSimple_Calculate(cFunction, cFields) {\n    const actions = {\n      AVG: args => args.reduce((acc, value) => acc + value, 0) / args.length,\n      SUM: args => args.reduce((acc, value) => acc + value, 0),\n      PRD: args => args.reduce((acc, value) => acc * value, 1),\n      MIN: args => args.reduce((acc, value) => Math.min(acc, value), Number.MAX_VALUE),\n      MAX: args => args.reduce((acc, value) => Math.max(acc, value), Number.MIN_VALUE)\n    };\n\n    if (!(cFunction in actions)) {\n      throw new TypeError("Invalid function in AFSimple_Calculate");\n    }\n\n    const event = globalThis.event;\n    const values = [];\n\n    for (const cField of cFields) {\n      const field = this._document.getField(cField);\n\n      const number = this.AFMakeNumber(field.value);\n\n      if (number !== null) {\n        values.push(number);\n      }\n    }\n\n    if (values.length === 0) {\n      event.value = cFunction === "PRD" ? 1 : 0;\n      return;\n    }\n\n    const res = actions[cFunction](values);\n    event.value = Math.round(1e6 * res) / 1e6;\n  }\n\n  AFSpecial_Format(psf) {\n    const event = globalThis.event;\n\n    if (!event.value) {\n      return;\n    }\n\n    psf = this.AFMakeNumber(psf);\n\n    if (psf === null) {\n      throw new Error("Invalid psf in AFSpecial_Format");\n    }\n\n    let formatStr = "";\n\n    switch (psf) {\n      case 0:\n        formatStr = "99999";\n        break;\n\n      case 1:\n        formatStr = "99999-9999";\n        break;\n\n      case 2:\n        if (this._util.printx("9999999999", event.value).length >= 10) {\n          formatStr = "(999) 999-9999";\n        } else {\n          formatStr = "999-9999";\n        }\n\n        break;\n\n      case 3:\n        formatStr = "999-99-9999";\n        break;\n\n      default:\n        throw new Error("Invalid psf in AFSpecial_Format");\n    }\n\n    event.value = this._util.printx(formatStr, event.value);\n  }\n\n  AFSpecial_KeystrokeEx(cMask) {\n    if (!cMask) {\n      return;\n    }\n\n    const event = globalThis.event;\n    const value = this.AFMergeChange(event);\n    const checkers = new Map([["9", char => char >= "0" && char <= "9"], ["A", char => "a" <= char && char <= "z" || "A" <= char && char <= "Z"], ["O", char => "a" <= char && char <= "z" || "A" <= char && char <= "Z" || "0" <= char && char <= "9"], ["X", char => true]]);\n\n    function _checkValidity(_value, _cMask) {\n      for (let i = 0, ii = value.length; i < ii; i++) {\n        const mask = _cMask.charAt(i);\n\n        const char = _value.charAt(i);\n\n        const checker = checkers.get(mask);\n\n        if (checker) {\n          if (!checker(char)) {\n            return false;\n          }\n        } else if (mask !== char) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (!value) {\n      return;\n    }\n\n    const err = "".concat(_constants.GlobalConstants.IDS_INVALID_VALUE, " = \\"").concat(cMask, "\\"");\n\n    if (value.length > cMask.length) {\n      this._app.alert(err);\n\n      event.rc = false;\n      return;\n    }\n\n    if (event.willCommit) {\n      if (value.length < cMask.length) {\n        this._app.alert(err);\n\n        event.rc = false;\n        return;\n      }\n\n      if (!_checkValidity(value, cMask)) {\n        this._app.alert(err);\n\n        event.rc = false;\n        return;\n      }\n\n      event.value += cMask.substring(value.length);\n      return;\n    }\n\n    if (value.length < cMask.length) {\n      cMask = cMask.substring(0, value.length);\n    }\n\n    if (!_checkValidity(value, cMask)) {\n      this._app.alert(err);\n\n      event.rc = false;\n    }\n  }\n\n  AFSpecial_Keystroke(psf) {\n    const event = globalThis.event;\n\n    if (!event.value) {\n      return;\n    }\n\n    psf = this.AFMakeNumber(psf);\n\n    if (psf === null) {\n      throw new Error("Invalid psf in AFSpecial_Keystroke");\n    }\n\n    let formatStr;\n\n    switch (psf) {\n      case 0:\n        formatStr = "99999";\n        break;\n\n      case 1:\n        formatStr = "99999-9999";\n        break;\n\n      case 2:\n        const finalLen = event.value.length + event.change.length + event.selStart - event.selEnd;\n\n        if (finalLen >= 8) {\n          formatStr = "(999) 999-9999";\n        } else {\n          formatStr = "999-9999";\n        }\n\n        break;\n\n      case 3:\n        formatStr = "999-99-9999";\n        break;\n\n      default:\n        throw new Error("Invalid psf in AFSpecial_Keystroke");\n    }\n\n    this.AFSpecial_KeystrokeEx(formatStr);\n  }\n\n  AFTime_FormatEx(cFormat) {\n    this.AFDate_FormatEx(cFormat);\n  }\n\n  AFTime_Format(pdf) {\n    if (pdf >= 0 && pdf < this._timeFormats.length) {\n      this.AFDate_FormatEx(this._timeFormats[pdf]);\n    }\n  }\n\n  AFTime_KeystrokeEx(cFormat) {\n    this.AFDate_KeystrokeEx(cFormat);\n  }\n\n  AFTime_Keystroke(pdf) {\n    if (pdf >= 0 && pdf < this._timeFormats.length) {\n      this.AFDate_KeystrokeEx(this._timeFormats[pdf]);\n    }\n  }\n\n  eMailValidate(str) {\n    return this._emailRegex.test(str);\n  }\n\n}\n\nexports.AForm = AForm;\n\n/***/ }),\n/* 89 */\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar DESCRIPTORS = __w_pdfjs_require__(34);\nvar global = __w_pdfjs_require__(3);\nvar uncurryThis = __w_pdfjs_require__(12);\nvar isForced = __w_pdfjs_require__(74);\nvar inheritIfRequired = __w_pdfjs_require__(90);\nvar createNonEnumerableProperty = __w_pdfjs_require__(62);\nvar defineProperty = (__w_pdfjs_require__(36).f);\nvar getOwnPropertyNames = (__w_pdfjs_require__(72).f);\nvar isPrototypeOf = __w_pdfjs_require__(42);\nvar isRegExp = __w_pdfjs_require__(91);\nvar toString = __w_pdfjs_require__(92);\nvar regExpFlags = __w_pdfjs_require__(95);\nvar stickyHelpers = __w_pdfjs_require__(96);\nvar redefine = __w_pdfjs_require__(68);\nvar fails = __w_pdfjs_require__(14);\nvar hasOwn = __w_pdfjs_require__(23);\nvar enforceInternalState = (__w_pdfjs_require__(59).enforce);\nvar setSpecies = __w_pdfjs_require__(97);\nvar wellKnownSymbol = __w_pdfjs_require__(18);\nvar UNSUPPORTED_DOT_ALL = __w_pdfjs_require__(98);\nvar UNSUPPORTED_NCG = __w_pdfjs_require__(99);\nvar MATCH = wellKnownSymbol(\'match\');\nvar NativeRegExp = global.RegExp;\nvar RegExpPrototype = NativeRegExp.prototype;\nvar SyntaxError = global.SyntaxError;\nvar getFlags = uncurryThis(regExpFlags);\nvar exec = uncurryThis(RegExpPrototype.exec);\nvar charAt = uncurryThis(\'\'.charAt);\nvar replace = uncurryThis(\'\'.replace);\nvar stringIndexOf = uncurryThis(\'\'.indexOf);\nvar stringSlice = uncurryThis(\'\'.slice);\nvar IS_NCG = /^\\?<[^\\s\\d!#%&*+<=>@^][^\\s!#%&*+<=>@^]*>/;\nvar re1 = /a/g;\nvar re2 = /a/g;\nvar CORRECT_NEW = new NativeRegExp(re1) !== re1;\nvar MISSED_STICKY = stickyHelpers.MISSED_STICKY;\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;\nvar BASE_FORCED = DESCRIPTORS && (!CORRECT_NEW || MISSED_STICKY || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG || fails(function () {\n re2[MATCH] = false;\n return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, \'i\') != \'/a/i\';\n}));\nvar handleDotAll = function (string) {\n var length = string.length;\n var index = 0;\n var result = \'\';\n var brackets = false;\n var chr;\n for (; index <= length; index++) {\n  chr = charAt(string, index);\n  if (chr === \'\\\\\') {\n   result += chr + charAt(string, ++index);\n   continue;\n  }\n  if (!brackets && chr === \'.\') {\n   result += \'[\\\\s\\\\S]\';\n  } else {\n   if (chr === \'[\') {\n    brackets = true;\n   } else if (chr === \']\') {\n    brackets = false;\n   }\n   result += chr;\n  }\n }\n return result;\n};\nvar handleNCG = function (string) {\n var length = string.length;\n var index = 0;\n var result = \'\';\n var named = [];\n var names = {};\n var brackets = false;\n var ncg = false;\n var groupid = 0;\n var groupname = \'\';\n var chr;\n for (; index <= length; index++) {\n  chr = charAt(string, index);\n  if (chr === \'\\\\\') {\n   chr = chr + charAt(string, ++index);\n  } else if (chr === \']\') {\n   brackets = false;\n  } else if (!brackets)\n   switch (true) {\n   case chr === \'[\':\n    brackets = true;\n    break;\n   case chr === \'(\':\n    if (exec(IS_NCG, stringSlice(string, index + 1))) {\n     index += 2;\n     ncg = true;\n    }\n    result += chr;\n    groupid++;\n    continue;\n   case chr === \'>\' && ncg:\n    if (groupname === \'\' || hasOwn(names, groupname)) {\n     throw new SyntaxError(\'Invalid capture group name\');\n    }\n    names[groupname] = true;\n    named[named.length] = [\n     groupname,\n     groupid\n    ];\n    ncg = false;\n    groupname = \'\';\n    continue;\n   }\n  if (ncg)\n   groupname += chr;\n  else\n   result += chr;\n }\n return [\n  result,\n  named\n ];\n};\nif (isForced(\'RegExp\', BASE_FORCED)) {\n var RegExpWrapper = function RegExp(pattern, flags) {\n  var thisIsRegExp = isPrototypeOf(RegExpPrototype, this);\n  var patternIsRegExp = isRegExp(pattern);\n  var flagsAreUndefined = flags === undefined;\n  var groups = [];\n  var rawPattern = pattern;\n  var rawFlags, dotAll, sticky, handled, result, state;\n  if (!thisIsRegExp && patternIsRegExp && flagsAreUndefined && pattern.constructor === RegExpWrapper) {\n   return pattern;\n  }\n  if (patternIsRegExp || isPrototypeOf(RegExpPrototype, pattern)) {\n   pattern = pattern.source;\n   if (flagsAreUndefined)\n    flags = \'flags\' in rawPattern ? rawPattern.flags : getFlags(rawPattern);\n  }\n  pattern = pattern === undefined ? \'\' : toString(pattern);\n  flags = flags === undefined ? \'\' : toString(flags);\n  rawPattern = pattern;\n  if (UNSUPPORTED_DOT_ALL && \'dotAll\' in re1) {\n   dotAll = !!flags && stringIndexOf(flags, \'s\') > -1;\n   if (dotAll)\n    flags = replace(flags, /s/g, \'\');\n  }\n  rawFlags = flags;\n  if (MISSED_STICKY && \'sticky\' in re1) {\n   sticky = !!flags && stringIndexOf(flags, \'y\') > -1;\n   if (sticky && UNSUPPORTED_Y)\n    flags = replace(flags, /y/g, \'\');\n  }\n  if (UNSUPPORTED_NCG) {\n   handled = handleNCG(pattern);\n   pattern = handled[0];\n   groups = handled[1];\n  }\n  result = inheritIfRequired(NativeRegExp(pattern, flags), thisIsRegExp ? this : RegExpPrototype, RegExpWrapper);\n  if (dotAll || sticky || groups.length) {\n   state = enforceInternalState(result);\n   if (dotAll) {\n    state.dotAll = true;\n    state.raw = RegExpWrapper(handleDotAll(pattern), rawFlags);\n   }\n   if (sticky)\n    state.sticky = true;\n   if (groups.length)\n    state.groups = groups;\n  }\n  if (pattern !== rawPattern)\n   try {\n    createNonEnumerableProperty(result, \'source\', rawPattern === \'\' ? \'(?:)\' : rawPattern);\n   } catch (error) {\n   }\n  return result;\n };\n var proxy = function (key) {\n  key in RegExpWrapper || defineProperty(RegExpWrapper, key, {\n   configurable: true,\n   get: function () {\n    return NativeRegExp[key];\n   },\n   set: function (it) {\n    NativeRegExp[key] = it;\n   }\n  });\n };\n for (var keys = getOwnPropertyNames(NativeRegExp), index = 0; keys.length > index;) {\n  proxy(keys[index++]);\n }\n RegExpPrototype.constructor = RegExpWrapper;\n RegExpWrapper.prototype = RegExpPrototype;\n redefine(global, \'RegExp\', RegExpWrapper);\n}\nsetSpecies(\'RegExp\');\n\n/***/ }),\n/* 90 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar isCallable = __w_pdfjs_require__(8);\nvar isObject = __w_pdfjs_require__(7);\nvar setPrototypeOf = __w_pdfjs_require__(80);\nmodule.exports = function ($this, dummy, Wrapper) {\n var NewTarget, NewTargetPrototype;\n if (setPrototypeOf && isCallable(NewTarget = dummy.constructor) && NewTarget !== Wrapper && isObject(NewTargetPrototype = NewTarget.prototype) && NewTargetPrototype !== Wrapper.prototype)\n  setPrototypeOf($this, NewTargetPrototype);\n return $this;\n};\n\n/***/ }),\n/* 91 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar isObject = __w_pdfjs_require__(7);\nvar classof = __w_pdfjs_require__(15);\nvar wellKnownSymbol = __w_pdfjs_require__(18);\nvar MATCH = wellKnownSymbol(\'match\');\nmodule.exports = function (it) {\n var isRegExp;\n return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == \'RegExp\');\n};\n\n/***/ }),\n/* 92 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar classof = __w_pdfjs_require__(93);\nvar String = global.String;\nmodule.exports = function (argument) {\n if (classof(argument) === \'Symbol\')\n  throw TypeError(\'Cannot convert a Symbol value to a string\');\n return String(argument);\n};\n\n/***/ }),\n/* 93 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar TO_STRING_TAG_SUPPORT = __w_pdfjs_require__(94);\nvar isCallable = __w_pdfjs_require__(8);\nvar classofRaw = __w_pdfjs_require__(15);\nvar wellKnownSymbol = __w_pdfjs_require__(18);\nvar TO_STRING_TAG = wellKnownSymbol(\'toStringTag\');\nvar Object = global.Object;\nvar CORRECT_ARGUMENTS = classofRaw((function () {\n return arguments;\n}())) == \'Arguments\';\nvar tryGet = function (it, key) {\n try {\n  return it[key];\n } catch (error) {\n }\n};\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n var O, tag, result;\n return it === undefined ? \'Undefined\' : it === null ? \'Null\' : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == \'string\' ? tag : CORRECT_ARGUMENTS ? classofRaw(O) : (result = classofRaw(O)) == \'Object\' && isCallable(O.callee) ? \'Arguments\' : result;\n};\n\n/***/ }),\n/* 94 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar wellKnownSymbol = __w_pdfjs_require__(18);\nvar TO_STRING_TAG = wellKnownSymbol(\'toStringTag\');\nvar test = {};\ntest[TO_STRING_TAG] = \'z\';\nmodule.exports = String(test) === \'[object z]\';\n\n/***/ }),\n/* 95 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n"use strict";\n\nvar anObject = __w_pdfjs_require__(32);\nmodule.exports = function () {\n var that = anObject(this);\n var result = \'\';\n if (that.global)\n  result += \'g\';\n if (that.ignoreCase)\n  result += \'i\';\n if (that.multiline)\n  result += \'m\';\n if (that.dotAll)\n  result += \'s\';\n if (that.unicode)\n  result += \'u\';\n if (that.sticky)\n  result += \'y\';\n return result;\n};\n\n/***/ }),\n/* 96 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar fails = __w_pdfjs_require__(14);\nvar global = __w_pdfjs_require__(3);\nvar $RegExp = global.RegExp;\nvar UNSUPPORTED_Y = fails(function () {\n var re = $RegExp(\'a\', \'y\');\n re.lastIndex = 2;\n return re.exec(\'abcd\') != null;\n});\nvar MISSED_STICKY = UNSUPPORTED_Y || fails(function () {\n return !$RegExp(\'a\', \'y\').sticky;\n});\nvar BROKEN_CARET = UNSUPPORTED_Y || fails(function () {\n var re = $RegExp(\'^r\', \'gy\');\n re.lastIndex = 2;\n return re.exec(\'str\') != null;\n});\nmodule.exports = {\n BROKEN_CARET: BROKEN_CARET,\n MISSED_STICKY: MISSED_STICKY,\n UNSUPPORTED_Y: UNSUPPORTED_Y\n};\n\n/***/ }),\n/* 97 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n"use strict";\n\nvar getBuiltIn = __w_pdfjs_require__(29);\nvar definePropertyModule = __w_pdfjs_require__(36);\nvar wellKnownSymbol = __w_pdfjs_require__(18);\nvar DESCRIPTORS = __w_pdfjs_require__(34);\nvar SPECIES = wellKnownSymbol(\'species\');\nmodule.exports = function (CONSTRUCTOR_NAME) {\n var Constructor = getBuiltIn(CONSTRUCTOR_NAME);\n var defineProperty = definePropertyModule.f;\n if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {\n  defineProperty(Constructor, SPECIES, {\n   configurable: true,\n   get: function () {\n    return this;\n   }\n  });\n }\n};\n\n/***/ }),\n/* 98 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar fails = __w_pdfjs_require__(14);\nvar global = __w_pdfjs_require__(3);\nvar $RegExp = global.RegExp;\nmodule.exports = fails(function () {\n var re = $RegExp(\'.\', \'s\');\n return !(re.dotAll && re.exec(\'\\n\') && re.flags === \'s\');\n});\n\n/***/ }),\n/* 99 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar fails = __w_pdfjs_require__(14);\nvar global = __w_pdfjs_require__(3);\nvar $RegExp = global.RegExp;\nmodule.exports = fails(function () {\n var re = $RegExp(\'(?<a>b)\', \'g\');\n return re.exec(\'b\').groups.a !== \'b\' || \'b\'.replace(re, \'$<a>c\') !== \'bc\';\n});\n\n/***/ }),\n/* 100 */\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n"use strict";\n\nvar $ = __w_pdfjs_require__(65);\nvar exec = __w_pdfjs_require__(101);\n$({\n target: \'RegExp\',\n proto: true,\n forced: /./.exec !== exec\n}, { exec: exec });\n\n/***/ }),\n/* 101 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n"use strict";\n\nvar call = __w_pdfjs_require__(40);\nvar uncurryThis = __w_pdfjs_require__(12);\nvar toString = __w_pdfjs_require__(92);\nvar regexpFlags = __w_pdfjs_require__(95);\nvar stickyHelpers = __w_pdfjs_require__(96);\nvar shared = __w_pdfjs_require__(19);\nvar create = __w_pdfjs_require__(31);\nvar getInternalState = (__w_pdfjs_require__(59).get);\nvar UNSUPPORTED_DOT_ALL = __w_pdfjs_require__(98);\nvar UNSUPPORTED_NCG = __w_pdfjs_require__(99);\nvar nativeReplace = shared(\'native-string-replace\', String.prototype.replace);\nvar nativeExec = RegExp.prototype.exec;\nvar patchedExec = nativeExec;\nvar charAt = uncurryThis(\'\'.charAt);\nvar indexOf = uncurryThis(\'\'.indexOf);\nvar replace = uncurryThis(\'\'.replace);\nvar stringSlice = uncurryThis(\'\'.slice);\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n var re1 = /a/;\n var re2 = /b*/g;\n call(nativeExec, re1, \'a\');\n call(nativeExec, re2, \'a\');\n return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n}());\nvar UNSUPPORTED_Y = stickyHelpers.BROKEN_CARET;\nvar NPCG_INCLUDED = /()??/.exec(\'\')[1] !== undefined;\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG;\nif (PATCH) {\n patchedExec = function exec(string) {\n  var re = this;\n  var state = getInternalState(re);\n  var str = toString(string);\n  var raw = state.raw;\n  var result, reCopy, lastIndex, match, i, object, group;\n  if (raw) {\n   raw.lastIndex = re.lastIndex;\n   result = call(patchedExec, raw, str);\n   re.lastIndex = raw.lastIndex;\n   return result;\n  }\n  var groups = state.groups;\n  var sticky = UNSUPPORTED_Y && re.sticky;\n  var flags = call(regexpFlags, re);\n  var source = re.source;\n  var charsAdded = 0;\n  var strCopy = str;\n  if (sticky) {\n   flags = replace(flags, \'y\', \'\');\n   if (indexOf(flags, \'g\') === -1) {\n    flags += \'g\';\n   }\n   strCopy = stringSlice(str, re.lastIndex);\n   if (re.lastIndex > 0 && (!re.multiline || re.multiline && charAt(str, re.lastIndex - 1) !== \'\\n\')) {\n    source = \'(?: \' + source + \')\';\n    strCopy = \' \' + strCopy;\n    charsAdded++;\n   }\n   reCopy = new RegExp(\'^(?:\' + source + \')\', flags);\n  }\n  if (NPCG_INCLUDED) {\n   reCopy = new RegExp(\'^\' + source + \'$(?!\\\\s)\', flags);\n  }\n  if (UPDATES_LAST_INDEX_WRONG)\n   lastIndex = re.lastIndex;\n  match = call(nativeExec, sticky ? reCopy : re, strCopy);\n  if (sticky) {\n   if (match) {\n    match.input = stringSlice(match.input, charsAdded);\n    match[0] = stringSlice(match[0], charsAdded);\n    match.index = re.lastIndex;\n    re.lastIndex += match[0].length;\n   } else\n    re.lastIndex = 0;\n  } else if (UPDATES_LAST_INDEX_WRONG && match) {\n   re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n  }\n  if (NPCG_INCLUDED && match && match.length > 1) {\n   call(nativeReplace, match[0], reCopy, function () {\n    for (i = 1; i < arguments.length - 2; i++) {\n     if (arguments[i] === undefined)\n      match[i] = undefined;\n    }\n   });\n  }\n  if (match && groups) {\n   match.groups = object = create(null);\n   for (i = 0; i < groups.length; i++) {\n    group = groups[i];\n    object[group[0]] = match[group[1]];\n   }\n  }\n  return match;\n };\n}\nmodule.exports = patchedExec;\n\n/***/ }),\n/* 102 */\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n"use strict";\n\nvar apply = __w_pdfjs_require__(103);\nvar call = __w_pdfjs_require__(40);\nvar uncurryThis = __w_pdfjs_require__(12);\nvar fixRegExpWellKnownSymbolLogic = __w_pdfjs_require__(104);\nvar fails = __w_pdfjs_require__(14);\nvar anObject = __w_pdfjs_require__(32);\nvar isCallable = __w_pdfjs_require__(8);\nvar toIntegerOrInfinity = __w_pdfjs_require__(51);\nvar toLength = __w_pdfjs_require__(53);\nvar toString = __w_pdfjs_require__(92);\nvar requireObjectCoercible = __w_pdfjs_require__(16);\nvar advanceStringIndex = __w_pdfjs_require__(105);\nvar getMethod = __w_pdfjs_require__(43);\nvar getSubstitution = __w_pdfjs_require__(107);\nvar regExpExec = __w_pdfjs_require__(108);\nvar wellKnownSymbol = __w_pdfjs_require__(18);\nvar REPLACE = wellKnownSymbol(\'replace\');\nvar max = Math.max;\nvar min = Math.min;\nvar concat = uncurryThis([].concat);\nvar push = uncurryThis([].push);\nvar stringIndexOf = uncurryThis(\'\'.indexOf);\nvar stringSlice = uncurryThis(\'\'.slice);\nvar maybeToString = function (it) {\n return it === undefined ? it : String(it);\n};\nvar REPLACE_KEEPS_$0 = (function () {\n return \'a\'.replace(/./, \'$0\') === \'$0\';\n}());\nvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {\n if (/./[REPLACE]) {\n  return /./[REPLACE](\'a\', \'$0\') === \'\';\n }\n return false;\n}());\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n var re = /./;\n re.exec = function () {\n  var result = [];\n  result.groups = { a: \'7\' };\n  return result;\n };\n return \'\'.replace(re, \'$<a>\') !== \'7\';\n});\nfixRegExpWellKnownSymbolLogic(\'replace\', function (_, nativeReplace, maybeCallNative) {\n var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? \'$\' : \'$0\';\n return [\n  function replace(searchValue, replaceValue) {\n   var O = requireObjectCoercible(this);\n   var replacer = searchValue == undefined ? undefined : getMethod(searchValue, REPLACE);\n   return replacer ? call(replacer, searchValue, O, replaceValue) : call(nativeReplace, toString(O), searchValue, replaceValue);\n  },\n  function (string, replaceValue) {\n   var rx = anObject(this);\n   var S = toString(string);\n   if (typeof replaceValue == \'string\' && stringIndexOf(replaceValue, UNSAFE_SUBSTITUTE) === -1 && stringIndexOf(replaceValue, \'$<\') === -1) {\n    var res = maybeCallNative(nativeReplace, rx, S, replaceValue);\n    if (res.done)\n     return res.value;\n   }\n   var functionalReplace = isCallable(replaceValue);\n   if (!functionalReplace)\n    replaceValue = toString(replaceValue);\n   var global = rx.global;\n   if (global) {\n    var fullUnicode = rx.unicode;\n    rx.lastIndex = 0;\n   }\n   var results = [];\n   while (true) {\n    var result = regExpExec(rx, S);\n    if (result === null)\n     break;\n    push(results, result);\n    if (!global)\n     break;\n    var matchStr = toString(result[0]);\n    if (matchStr === \'\')\n     rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n   }\n   var accumulatedResult = \'\';\n   var nextSourcePosition = 0;\n   for (var i = 0; i < results.length; i++) {\n    result = results[i];\n    var matched = toString(result[0]);\n    var position = max(min(toIntegerOrInfinity(result.index), S.length), 0);\n    var captures = [];\n    for (var j = 1; j < result.length; j++)\n     push(captures, maybeToString(result[j]));\n    var namedCaptures = result.groups;\n    if (functionalReplace) {\n     var replacerArgs = concat([matched], captures, position, S);\n     if (namedCaptures !== undefined)\n      push(replacerArgs, namedCaptures);\n     var replacement = toString(apply(replaceValue, undefined, replacerArgs));\n    } else {\n     replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n    }\n    if (position >= nextSourcePosition) {\n     accumulatedResult += stringSlice(S, nextSourcePosition, position) + replacement;\n     nextSourcePosition = position + matched.length;\n    }\n   }\n   return accumulatedResult + stringSlice(S, nextSourcePosition);\n  }\n ];\n}, !REPLACE_SUPPORTS_NAMED_GROUPS || !REPLACE_KEEPS_$0 || REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE);\n\n/***/ }),\n/* 103 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar NATIVE_BIND = __w_pdfjs_require__(13);\nvar FunctionPrototype = Function.prototype;\nvar apply = FunctionPrototype.apply;\nvar call = FunctionPrototype.call;\nmodule.exports = typeof Reflect == \'object\' && Reflect.apply || (NATIVE_BIND ? call.bind(apply) : function () {\n return call.apply(apply, arguments);\n});\n\n/***/ }),\n/* 104 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n"use strict";\n\n__w_pdfjs_require__(100);\nvar uncurryThis = __w_pdfjs_require__(12);\nvar redefine = __w_pdfjs_require__(68);\nvar regexpExec = __w_pdfjs_require__(101);\nvar fails = __w_pdfjs_require__(14);\nvar wellKnownSymbol = __w_pdfjs_require__(18);\nvar createNonEnumerableProperty = __w_pdfjs_require__(62);\nvar SPECIES = wellKnownSymbol(\'species\');\nvar RegExpPrototype = RegExp.prototype;\nmodule.exports = function (KEY, exec, FORCED, SHAM) {\n var SYMBOL = wellKnownSymbol(KEY);\n var DELEGATES_TO_SYMBOL = !fails(function () {\n  var O = {};\n  O[SYMBOL] = function () {\n   return 7;\n  };\n  return \'\'[KEY](O) != 7;\n });\n var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n  var execCalled = false;\n  var re = /a/;\n  if (KEY === \'split\') {\n   re = {};\n   re.constructor = {};\n   re.constructor[SPECIES] = function () {\n    return re;\n   };\n   re.flags = \'\';\n   re[SYMBOL] = /./[SYMBOL];\n  }\n  re.exec = function () {\n   execCalled = true;\n   return null;\n  };\n  re[SYMBOL](\'\');\n  return !execCalled;\n });\n if (!DELEGATES_TO_SYMBOL || !DELEGATES_TO_EXEC || FORCED) {\n  var uncurriedNativeRegExpMethod = uncurryThis(/./[SYMBOL]);\n  var methods = exec(SYMBOL, \'\'[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n   var uncurriedNativeMethod = uncurryThis(nativeMethod);\n   var $exec = regexp.exec;\n   if ($exec === regexpExec || $exec === RegExpPrototype.exec) {\n    if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n     return {\n      done: true,\n      value: uncurriedNativeRegExpMethod(regexp, str, arg2)\n     };\n    }\n    return {\n     done: true,\n     value: uncurriedNativeMethod(str, regexp, arg2)\n    };\n   }\n   return { done: false };\n  });\n  redefine(String.prototype, KEY, methods[0]);\n  redefine(RegExpPrototype, SYMBOL, methods[1]);\n }\n if (SHAM)\n  createNonEnumerableProperty(RegExpPrototype[SYMBOL], \'sham\', true);\n};\n\n/***/ }),\n/* 105 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n"use strict";\n\nvar charAt = (__w_pdfjs_require__(106).charAt);\nmodule.exports = function (S, index, unicode) {\n return index + (unicode ? charAt(S, index).length : 1);\n};\n\n/***/ }),\n/* 106 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar uncurryThis = __w_pdfjs_require__(12);\nvar toIntegerOrInfinity = __w_pdfjs_require__(51);\nvar toString = __w_pdfjs_require__(92);\nvar requireObjectCoercible = __w_pdfjs_require__(16);\nvar charAt = uncurryThis(\'\'.charAt);\nvar charCodeAt = uncurryThis(\'\'.charCodeAt);\nvar stringSlice = uncurryThis(\'\'.slice);\nvar createMethod = function (CONVERT_TO_STRING) {\n return function ($this, pos) {\n  var S = toString(requireObjectCoercible($this));\n  var position = toIntegerOrInfinity(pos);\n  var size = S.length;\n  var first, second;\n  if (position < 0 || position >= size)\n   return CONVERT_TO_STRING ? \'\' : undefined;\n  first = charCodeAt(S, position);\n  return first < 0xD800 || first > 0xDBFF || position + 1 === size || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF ? CONVERT_TO_STRING ? charAt(S, position) : first : CONVERT_TO_STRING ? stringSlice(S, position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n };\n};\nmodule.exports = {\n codeAt: createMethod(false),\n charAt: createMethod(true)\n};\n\n/***/ }),\n/* 107 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar uncurryThis = __w_pdfjs_require__(12);\nvar toObject = __w_pdfjs_require__(24);\nvar floor = Math.floor;\nvar charAt = uncurryThis(\'\'.charAt);\nvar replace = uncurryThis(\'\'.replace);\nvar stringSlice = uncurryThis(\'\'.slice);\nvar SUBSTITUTION_SYMBOLS = /\\$([$&\'`]|\\d{1,2}|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&\'`]|\\d{1,2})/g;\nmodule.exports = function (matched, str, position, captures, namedCaptures, replacement) {\n var tailPos = position + matched.length;\n var m = captures.length;\n var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n if (namedCaptures !== undefined) {\n  namedCaptures = toObject(namedCaptures);\n  symbols = SUBSTITUTION_SYMBOLS;\n }\n return replace(replacement, symbols, function (match, ch) {\n  var capture;\n  switch (charAt(ch, 0)) {\n  case \'$\':\n   return \'$\';\n  case \'&\':\n   return matched;\n  case \'`\':\n   return stringSlice(str, 0, position);\n  case "\'":\n   return stringSlice(str, tailPos);\n  case \'<\':\n   capture = namedCaptures[stringSlice(ch, 1, -1)];\n   break;\n  default:\n   var n = +ch;\n   if (n === 0)\n    return match;\n   if (n > m) {\n    var f = floor(n / 10);\n    if (f === 0)\n     return match;\n    if (f <= m)\n     return captures[f - 1] === undefined ? charAt(ch, 1) : captures[f - 1] + charAt(ch, 1);\n    return match;\n   }\n   capture = captures[n - 1];\n  }\n  return capture === undefined ? \'\' : capture;\n });\n};\n\n/***/ }),\n/* 108 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar call = __w_pdfjs_require__(40);\nvar anObject = __w_pdfjs_require__(32);\nvar isCallable = __w_pdfjs_require__(8);\nvar classof = __w_pdfjs_require__(15);\nvar regexpExec = __w_pdfjs_require__(101);\nvar TypeError = global.TypeError;\nmodule.exports = function (R, S) {\n var exec = R.exec;\n if (isCallable(exec)) {\n  var result = call(exec, R, S);\n  if (result !== null)\n   anObject(result);\n  return result;\n }\n if (classof(R) === \'RegExp\')\n  return call(regexpExec, R, S);\n throw TypeError(\'RegExp#exec called on incompatible receiver\');\n};\n\n/***/ }),\n/* 109 */\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n"use strict";\n\nvar $ = __w_pdfjs_require__(65);\nvar $reduce = (__w_pdfjs_require__(110).left);\nvar arrayMethodIsStrict = __w_pdfjs_require__(111);\nvar CHROME_VERSION = __w_pdfjs_require__(27);\nvar IS_NODE = __w_pdfjs_require__(112);\nvar STRICT_METHOD = arrayMethodIsStrict(\'reduce\');\nvar CHROME_BUG = !IS_NODE && CHROME_VERSION > 79 && CHROME_VERSION < 83;\n$({\n target: \'Array\',\n proto: true,\n forced: !STRICT_METHOD || CHROME_BUG\n}, {\n reduce: function reduce(callbackfn) {\n  var length = arguments.length;\n  return $reduce(this, callbackfn, length, length > 1 ? arguments[1] : undefined);\n }\n});\n\n/***/ }),\n/* 110 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar aCallable = __w_pdfjs_require__(44);\nvar toObject = __w_pdfjs_require__(24);\nvar IndexedObject = __w_pdfjs_require__(11);\nvar lengthOfArrayLike = __w_pdfjs_require__(52);\nvar TypeError = global.TypeError;\nvar createMethod = function (IS_RIGHT) {\n return function (that, callbackfn, argumentsLength, memo) {\n  aCallable(callbackfn);\n  var O = toObject(that);\n  var self = IndexedObject(O);\n  var length = lengthOfArrayLike(O);\n  var index = IS_RIGHT ? length - 1 : 0;\n  var i = IS_RIGHT ? -1 : 1;\n  if (argumentsLength < 2)\n   while (true) {\n    if (index in self) {\n     memo = self[index];\n     index += i;\n     break;\n    }\n    index += i;\n    if (IS_RIGHT ? index < 0 : length <= index) {\n     throw TypeError(\'Reduce of empty array with no initial value\');\n    }\n   }\n  for (; IS_RIGHT ? index >= 0 : length > index; index += i)\n   if (index in self) {\n    memo = callbackfn(memo, self[index], index, O);\n   }\n  return memo;\n };\n};\nmodule.exports = {\n left: createMethod(false),\n right: createMethod(true)\n};\n\n/***/ }),\n/* 111 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n"use strict";\n\nvar fails = __w_pdfjs_require__(14);\nmodule.exports = function (METHOD_NAME, argument) {\n var method = [][METHOD_NAME];\n return !!method && fails(function () {\n  method.call(null, argument || function () {\n   throw 1;\n  }, 1);\n });\n};\n\n/***/ }),\n/* 112 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar classof = __w_pdfjs_require__(15);\nvar global = __w_pdfjs_require__(3);\nmodule.exports = classof(global.process) == \'process\';\n\n/***/ }),\n/* 113 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.App = void 0;\n\n__w_pdfjs_require__(2);\n\n__w_pdfjs_require__(100);\n\nvar _color = __w_pdfjs_require__(85);\n\nvar _event = __w_pdfjs_require__(114);\n\nvar _fullscreen = __w_pdfjs_require__(115);\n\nvar _pdf_object = __w_pdfjs_require__(87);\n\nvar _thermometer = __w_pdfjs_require__(116);\n\nconst VIEWER_TYPE = "PDF.js";\nconst VIEWER_VARIATION = "Full";\nconst VIEWER_VERSION = 21.00720099;\nconst FORMS_VERSION = 21.00720099;\n\nclass App extends _pdf_object.PDFObject {\n  constructor(data) {\n    super(data);\n    this._constants = null;\n    this._focusRect = true;\n    this._fs = null;\n    this._language = App._getLanguage(data.language);\n    this._openInPlace = false;\n    this._platform = App._getPlatform(data.platform);\n    this._runtimeHighlight = false;\n    this._runtimeHighlightColor = ["T"];\n    this._thermometer = null;\n    this._toolbar = false;\n    this._document = data._document;\n    this._proxyHandler = data.proxyHandler;\n    this._objects = Object.create(null);\n    this._eventDispatcher = new _event.EventDispatcher(this._document, data.calculationOrder, this._objects);\n    this._timeoutIds = new WeakMap();\n\n    if (typeof FinalizationRegistry !== "undefined") {\n      this._timeoutIdsRegistry = new FinalizationRegistry(this._cleanTimeout.bind(this));\n    } else {\n      this._timeoutIdsRegistry = null;\n    }\n\n    this._timeoutCallbackIds = new Map();\n    this._timeoutCallbackId = 0;\n    this._globalEval = data.globalEval;\n    this._externalCall = data.externalCall;\n    this._document = data._document;\n  }\n\n  _dispatchEvent(pdfEvent) {\n    this._eventDispatcher.dispatch(pdfEvent);\n  }\n\n  _registerTimeoutCallback(cExpr) {\n    const id = this._timeoutCallbackId++;\n\n    this._timeoutCallbackIds.set(id, cExpr);\n\n    return id;\n  }\n\n  _unregisterTimeoutCallback(id) {\n    this._timeoutCallbackIds.delete(id);\n  }\n\n  _evalCallback(_ref) {\n    let {\n      callbackId,\n      interval\n    } = _ref;\n\n    const expr = this._timeoutCallbackIds.get(callbackId);\n\n    if (!interval) {\n      this._unregisterTimeoutCallback(callbackId);\n    }\n\n    if (expr) {\n      this._globalEval(expr);\n    }\n  }\n\n  _registerTimeout(callbackId, interval) {\n    const timeout = Object.create(null);\n    const id = {\n      callbackId,\n      interval\n    };\n\n    this._timeoutIds.set(timeout, id);\n\n    if (this._timeoutIdsRegistry) {\n      this._timeoutIdsRegistry.register(timeout, id);\n    }\n\n    return timeout;\n  }\n\n  _unregisterTimeout(timeout) {\n    if (this._timeoutIdsRegistry) {\n      this._timeoutIdsRegistry.unregister(timeout);\n    }\n\n    const data = this._timeoutIds.get(timeout);\n\n    if (!data) {\n      return;\n    }\n\n    this._timeoutIds.delete(timeout);\n\n    this._cleanTimeout(data);\n  }\n\n  _cleanTimeout(_ref2) {\n    let {\n      callbackId,\n      interval\n    } = _ref2;\n\n    this._unregisterTimeoutCallback(callbackId);\n\n    if (interval) {\n      this._externalCall("clearInterval", [callbackId]);\n    } else {\n      this._externalCall("clearTimeout", [callbackId]);\n    }\n  }\n\n  static _getPlatform(platform) {\n    if (typeof platform === "string") {\n      platform = platform.toLowerCase();\n\n      if (platform.includes("win")) {\n        return "WIN";\n      } else if (platform.includes("mac")) {\n        return "MAC";\n      }\n    }\n\n    return "UNIX";\n  }\n\n  static _getLanguage(language) {\n    const [main, sub] = language.toLowerCase().split(/[-_]/);\n\n    switch (main) {\n      case "zh":\n        if (sub === "cn" || sub === "sg") {\n          return "CHS";\n        }\n\n        return "CHT";\n\n      case "da":\n        return "DAN";\n\n      case "de":\n        return "DEU";\n\n      case "es":\n        return "ESP";\n\n      case "fr":\n        return "FRA";\n\n      case "it":\n        return "ITA";\n\n      case "ko":\n        return "KOR";\n\n      case "ja":\n        return "JPN";\n\n      case "nl":\n        return "NLD";\n\n      case "no":\n        return "NOR";\n\n      case "pt":\n        if (sub === "br") {\n          return "PTB";\n        }\n\n        return "ENU";\n\n      case "fi":\n        return "SUO";\n\n      case "SV":\n        return "SVE";\n\n      default:\n        return "ENU";\n    }\n  }\n\n  get activeDocs() {\n    return [this._document.wrapped];\n  }\n\n  set activeDocs(_) {\n    throw new Error("app.activeDocs is read-only");\n  }\n\n  get calculate() {\n    return this._document.obj.calculate;\n  }\n\n  set calculate(calculate) {\n    this._document.obj.calculate = calculate;\n  }\n\n  get constants() {\n    if (!this._constants) {\n      this._constants = Object.freeze({\n        align: Object.freeze({\n          left: 0,\n          center: 1,\n          right: 2,\n          top: 3,\n          bottom: 4\n        })\n      });\n    }\n\n    return this._constants;\n  }\n\n  set constants(_) {\n    throw new Error("app.constants is read-only");\n  }\n\n  get focusRect() {\n    return this._focusRect;\n  }\n\n  set focusRect(val) {\n    this._focusRect = val;\n  }\n\n  get formsVersion() {\n    return FORMS_VERSION;\n  }\n\n  set formsVersion(_) {\n    throw new Error("app.formsVersion is read-only");\n  }\n\n  get fromPDFConverters() {\n    return [];\n  }\n\n  set fromPDFConverters(_) {\n    throw new Error("app.fromPDFConverters is read-only");\n  }\n\n  get fs() {\n    if (this._fs === null) {\n      this._fs = new Proxy(new _fullscreen.FullScreen({\n        send: this._send\n      }), this._proxyHandler);\n    }\n\n    return this._fs;\n  }\n\n  set fs(_) {\n    throw new Error("app.fs is read-only");\n  }\n\n  get language() {\n    return this._language;\n  }\n\n  set language(_) {\n    throw new Error("app.language is read-only");\n  }\n\n  get media() {\n    return undefined;\n  }\n\n  set media(_) {\n    throw new Error("app.media is read-only");\n  }\n\n  get monitors() {\n    return [];\n  }\n\n  set monitors(_) {\n    throw new Error("app.monitors is read-only");\n  }\n\n  get numPlugins() {\n    return 0;\n  }\n\n  set numPlugins(_) {\n    throw new Error("app.numPlugins is read-only");\n  }\n\n  get openInPlace() {\n    return this._openInPlace;\n  }\n\n  set openInPlace(val) {\n    this._openInPlace = val;\n  }\n\n  get platform() {\n    return this._platform;\n  }\n\n  set platform(_) {\n    throw new Error("app.platform is read-only");\n  }\n\n  get plugins() {\n    return [];\n  }\n\n  set plugins(_) {\n    throw new Error("app.plugins is read-only");\n  }\n\n  get printColorProfiles() {\n    return [];\n  }\n\n  set printColorProfiles(_) {\n    throw new Error("app.printColorProfiles is read-only");\n  }\n\n  get printerNames() {\n    return [];\n  }\n\n  set printerNames(_) {\n    throw new Error("app.printerNames is read-only");\n  }\n\n  get runtimeHighlight() {\n    return this._runtimeHighlight;\n  }\n\n  set runtimeHighlight(val) {\n    this._runtimeHighlight = val;\n  }\n\n  get runtimeHighlightColor() {\n    return this._runtimeHighlightColor;\n  }\n\n  set runtimeHighlightColor(val) {\n    if (_color.Color._isValidColor(val)) {\n      this._runtimeHighlightColor = val;\n    }\n  }\n\n  get thermometer() {\n    if (this._thermometer === null) {\n      this._thermometer = new Proxy(new _thermometer.Thermometer({\n        send: this._send\n      }), this._proxyHandler);\n    }\n\n    return this._thermometer;\n  }\n\n  set thermometer(_) {\n    throw new Error("app.thermometer is read-only");\n  }\n\n  get toolbar() {\n    return this._toolbar;\n  }\n\n  set toolbar(val) {\n    this._toolbar = val;\n  }\n\n  get toolbarHorizontal() {\n    return this.toolbar;\n  }\n\n  set toolbarHorizontal(value) {\n    this.toolbar = value;\n  }\n\n  get toolbarVertical() {\n    return this.toolbar;\n  }\n\n  set toolbarVertical(value) {\n    this.toolbar = value;\n  }\n\n  get viewerType() {\n    return VIEWER_TYPE;\n  }\n\n  set viewerType(_) {\n    throw new Error("app.viewerType is read-only");\n  }\n\n  get viewerVariation() {\n    return VIEWER_VARIATION;\n  }\n\n  set viewerVariation(_) {\n    throw new Error("app.viewerVariation is read-only");\n  }\n\n  get viewerVersion() {\n    return VIEWER_VERSION;\n  }\n\n  set viewerVersion(_) {\n    throw new Error("app.viewerVersion is read-only");\n  }\n\n  addMenuItem() {}\n\n  addSubMenu() {}\n\n  addToolButton() {}\n\n  alert(cMsg) {\n    let nIcon = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let nType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let cTitle = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "PDF.js";\n    let oDoc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    let oCheckbox = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n\n    if (typeof cMsg === "object") {\n      nType = cMsg.nType;\n      cMsg = cMsg.cMsg;\n    }\n\n    cMsg = (cMsg || "").toString();\n    nType = typeof nType !== "number" || isNaN(nType) || nType < 0 || nType > 3 ? 0 : nType;\n\n    if (nType >= 2) {\n      return this._externalCall("confirm", [cMsg]) ? 4 : 3;\n    }\n\n    this._externalCall("alert", [cMsg]);\n\n    return 1;\n  }\n\n  beep() {}\n\n  beginPriv() {}\n\n  browseForDoc() {}\n\n  clearInterval(oInterval) {\n    this._unregisterTimeout(oInterval);\n  }\n\n  clearTimeOut(oTime) {\n    this._unregisterTimeout(oTime);\n  }\n\n  endPriv() {}\n\n  execDialog() {}\n\n  execMenuItem(item) {\n    switch (item) {\n      case "SaveAs":\n      case "FirstPage":\n      case "LastPage":\n      case "NextPage":\n      case "PrevPage":\n      case "ZoomViewIn":\n      case "ZoomViewOut":\n        this._send({\n          command: item\n        });\n\n        break;\n\n      case "FitPage":\n        this._send({\n          command: "zoom",\n          value: "page-fit"\n        });\n\n        break;\n\n      case "Print":\n        this._send({\n          command: "print"\n        });\n\n        break;\n    }\n  }\n\n  getNthPlugInName() {}\n\n  getPath() {}\n\n  goBack() {}\n\n  goForward() {}\n\n  hideMenuItem() {}\n\n  hideToolbarButton() {}\n\n  launchURL() {}\n\n  listMenuItems() {}\n\n  listToolbarButtons() {}\n\n  loadPolicyFile() {}\n\n  mailGetAddrs() {}\n\n  mailMsg() {}\n\n  newDoc() {}\n\n  newCollection() {}\n\n  newFDF() {}\n\n  openDoc() {}\n\n  openFDF() {}\n\n  popUpMenu() {}\n\n  popUpMenuEx() {}\n\n  removeToolButton() {}\n\n  response(cQuestion) {\n    let cTitle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";\n    let cDefault = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "";\n    let bPassword = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "";\n    let cLabel = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : "";\n\n    if (typeof cQuestion === "object") {\n      cDefault = cQuestion.cDefault;\n      cQuestion = cQuestion.cQuestion;\n    }\n\n    cQuestion = (cQuestion || "").toString();\n    cDefault = (cDefault || "").toString();\n    return this._externalCall("prompt", [cQuestion, cDefault || ""]);\n  }\n\n  setInterval(cExpr) {\n    let nMilliseconds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    if (typeof cExpr === "object") {\n      nMilliseconds = cExpr.nMilliseconds || 0;\n      cExpr = cExpr.cExpr;\n    }\n\n    if (typeof cExpr !== "string") {\n      throw new TypeError("First argument of app.setInterval must be a string");\n    }\n\n    if (typeof nMilliseconds !== "number") {\n      throw new TypeError("Second argument of app.setInterval must be a number");\n    }\n\n    const callbackId = this._registerTimeoutCallback(cExpr);\n\n    this._externalCall("setInterval", [callbackId, nMilliseconds]);\n\n    return this._registerTimeout(callbackId, true);\n  }\n\n  setTimeOut(cExpr) {\n    let nMilliseconds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    if (typeof cExpr === "object") {\n      nMilliseconds = cExpr.nMilliseconds || 0;\n      cExpr = cExpr.cExpr;\n    }\n\n    if (typeof cExpr !== "string") {\n      throw new TypeError("First argument of app.setTimeOut must be a string");\n    }\n\n    if (typeof nMilliseconds !== "number") {\n      throw new TypeError("Second argument of app.setTimeOut must be a number");\n    }\n\n    const callbackId = this._registerTimeoutCallback(cExpr);\n\n    this._externalCall("setTimeout", [callbackId, nMilliseconds]);\n\n    return this._registerTimeout(callbackId, false);\n  }\n\n  trustedFunction() {}\n\n  trustPropagatorFunction() {}\n\n}\n\nexports.App = App;\n\n/***/ }),\n/* 114 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.EventDispatcher = exports.Event = void 0;\n\n__w_pdfjs_require__(2);\n\nclass Event {\n  constructor(data) {\n    this.change = data.change || "";\n    this.changeEx = data.changeEx || null;\n    this.commitKey = data.commitKey || 0;\n    this.fieldFull = data.fieldFull || false;\n    this.keyDown = data.keyDown || false;\n    this.modifier = data.modifier || false;\n    this.name = data.name;\n    this.rc = true;\n    this.richChange = data.richChange || [];\n    this.richChangeEx = data.richChangeEx || [];\n    this.richValue = data.richValue || [];\n    this.selEnd = data.selEnd || -1;\n    this.selStart = data.selStart || -1;\n    this.shift = data.shift || false;\n    this.source = data.source || null;\n    this.target = data.target || null;\n    this.targetName = "";\n    this.type = "Field";\n    this.value = data.value || "";\n    this.willCommit = data.willCommit || false;\n  }\n\n}\n\nexports.Event = Event;\n\nclass EventDispatcher {\n  constructor(document, calculationOrder, objects) {\n    this._document = document;\n    this._calculationOrder = calculationOrder;\n    this._objects = objects;\n    this._document.obj._eventDispatcher = this;\n  }\n\n  mergeChange(event) {\n    let value = event.value;\n\n    if (typeof value !== "string") {\n      value = value.toString();\n    }\n\n    const prefix = event.selStart >= 0 ? value.substring(0, event.selStart) : "";\n    const postfix = event.selEnd >= 0 && event.selEnd <= value.length ? value.substring(event.selEnd) : "";\n    return "".concat(prefix).concat(event.change).concat(postfix);\n  }\n\n  dispatch(baseEvent) {\n    const id = baseEvent.id;\n\n    if (!(id in this._objects)) {\n      let event;\n\n      if (id === "doc" || id === "page") {\n        event = globalThis.event = new Event(baseEvent);\n        event.source = event.target = this._document.wrapped;\n        event.name = baseEvent.name;\n      }\n\n      if (id === "doc") {\n        this._document.obj._dispatchDocEvent(event.name);\n      } else if (id === "page") {\n        this._document.obj._dispatchPageEvent(event.name, baseEvent.actions, baseEvent.pageNumber);\n      } else if (id === "app" && baseEvent.name === "ResetForm") {\n        for (const fieldId of baseEvent.ids) {\n          const obj = this._objects[fieldId];\n\n          if (obj) {\n            obj.obj._reset();\n          }\n        }\n      }\n\n      return;\n    }\n\n    const name = baseEvent.name;\n    const source = this._objects[id];\n    const event = globalThis.event = new Event(baseEvent);\n    let savedChange;\n\n    if (source.obj._isButton()) {\n      source.obj._id = id;\n      event.value = source.obj._getExportValue(event.value);\n\n      if (name === "Action") {\n        source.obj._value = event.value;\n      }\n    }\n\n    switch (name) {\n      case "Keystroke":\n        savedChange = {\n          value: event.value,\n          change: event.change,\n          selStart: event.selStart,\n          selEnd: event.selEnd\n        };\n        break;\n\n      case "Blur":\n      case "Focus":\n        Object.defineProperty(event, "value", {\n          configurable: false,\n          writable: false,\n          enumerable: true,\n          value: event.value\n        });\n        break;\n\n      case "Validate":\n        this.runValidation(source, event);\n        return;\n\n      case "Action":\n        this.runActions(source, source, event, name);\n\n        if (this._document.obj.calculate) {\n          this.runCalculate(source, event);\n        }\n\n        return;\n    }\n\n    this.runActions(source, source, event, name);\n\n    if (name === "Keystroke") {\n      if (event.rc) {\n        if (event.willCommit) {\n          this.runValidation(source, event);\n        } else if (event.change !== savedChange.change || event.selStart !== savedChange.selStart || event.selEnd !== savedChange.selEnd) {\n          source.wrapped.value = this.mergeChange(event);\n        }\n      } else if (!event.willCommit) {\n        source.obj._send({\n          id: source.obj._id,\n          value: savedChange.value,\n          selRange: [savedChange.selStart, savedChange.selEnd]\n        });\n      }\n    }\n  }\n\n  runValidation(source, event) {\n    const hasRan = this.runActions(source, source, event, "Validate");\n\n    if (event.rc) {\n      if (hasRan) {\n        source.wrapped.value = event.value;\n        source.wrapped.valueAsString = event.value;\n      } else {\n        source.obj.value = event.value;\n        source.obj.valueAsString = event.value;\n      }\n\n      if (this._document.obj.calculate) {\n        this.runCalculate(source, event);\n      }\n\n      event.value = source.obj.value;\n      this.runActions(source, source, event, "Format");\n      source.wrapped.valueAsString = event.value;\n    }\n  }\n\n  runActions(source, target, event, eventName) {\n    event.source = source.wrapped;\n    event.target = target.wrapped;\n    event.name = eventName;\n    event.targetName = target.obj.name;\n    event.rc = true;\n    return target.obj._runActions(event);\n  }\n\n  calculateNow() {\n    if (!this._calculationOrder) {\n      return;\n    }\n\n    const first = this._calculationOrder[0];\n    const source = this._objects[first];\n    globalThis.event = new Event({});\n    this.runCalculate(source, globalThis.event);\n  }\n\n  runCalculate(source, event) {\n    if (!this._calculationOrder) {\n      return;\n    }\n\n    for (const targetId of this._calculationOrder) {\n      if (!(targetId in this._objects)) {\n        continue;\n      }\n\n      if (!this._document.obj.calculate) {\n        continue;\n      }\n\n      event.value = null;\n      const target = this._objects[targetId];\n      this.runActions(source, target, event, "Calculate");\n\n      if (!event.rc) {\n        continue;\n      }\n\n      if (event.value !== null) {\n        target.wrapped.value = event.value;\n      }\n\n      event.value = target.obj.value;\n      this.runActions(target, target, event, "Validate");\n\n      if (!event.rc) {\n        continue;\n      }\n\n      event.value = target.obj.value;\n      this.runActions(target, target, event, "Format");\n\n      if (event.value !== null) {\n        target.wrapped.valueAsString = event.value;\n      }\n    }\n  }\n\n}\n\nexports.EventDispatcher = EventDispatcher;\n\n/***/ }),\n/* 115 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.FullScreen = void 0;\n\nvar _constants = __w_pdfjs_require__(82);\n\nvar _pdf_object = __w_pdfjs_require__(87);\n\nclass FullScreen extends _pdf_object.PDFObject {\n  constructor(data) {\n    super(data);\n    this._backgroundColor = [];\n    this._clickAdvances = true;\n    this._cursor = _constants.Cursor.hidden;\n    this._defaultTransition = "";\n    this._escapeExits = true;\n    this._isFullScreen = true;\n    this._loop = false;\n    this._timeDelay = 3600;\n    this._usePageTiming = false;\n    this._useTimer = false;\n  }\n\n  get backgroundColor() {\n    return this._backgroundColor;\n  }\n\n  set backgroundColor(_) {}\n\n  get clickAdvances() {\n    return this._clickAdvances;\n  }\n\n  set clickAdvances(_) {}\n\n  get cursor() {\n    return this._cursor;\n  }\n\n  set cursor(_) {}\n\n  get defaultTransition() {\n    return this._defaultTransition;\n  }\n\n  set defaultTransition(_) {}\n\n  get escapeExits() {\n    return this._escapeExits;\n  }\n\n  set escapeExits(_) {}\n\n  get isFullScreen() {\n    return this._isFullScreen;\n  }\n\n  set isFullScreen(_) {}\n\n  get loop() {\n    return this._loop;\n  }\n\n  set loop(_) {}\n\n  get timeDelay() {\n    return this._timeDelay;\n  }\n\n  set timeDelay(_) {}\n\n  get transitions() {\n    return ["Replace", "WipeRight", "WipeLeft", "WipeDown", "WipeUp", "SplitHorizontalIn", "SplitHorizontalOut", "SplitVerticalIn", "SplitVerticalOut", "BlindsHorizontal", "BlindsVertical", "BoxIn", "BoxOut", "GlitterRight", "GlitterDown", "GlitterRightDown", "Dissolve", "Random"];\n  }\n\n  set transitions(_) {\n    throw new Error("fullscreen.transitions is read-only");\n  }\n\n  get usePageTiming() {\n    return this._usePageTiming;\n  }\n\n  set usePageTiming(_) {}\n\n  get useTimer() {\n    return this._useTimer;\n  }\n\n  set useTimer(_) {}\n\n}\n\nexports.FullScreen = FullScreen;\n\n/***/ }),\n/* 116 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.Thermometer = void 0;\n\nvar _pdf_object = __w_pdfjs_require__(87);\n\nclass Thermometer extends _pdf_object.PDFObject {\n  constructor(data) {\n    super(data);\n    this._cancelled = false;\n    this._duration = 100;\n    this._text = "";\n    this._value = 0;\n  }\n\n  get cancelled() {\n    return this._cancelled;\n  }\n\n  set cancelled(_) {\n    throw new Error("thermometer.cancelled is read-only");\n  }\n\n  get duration() {\n    return this._duration;\n  }\n\n  set duration(val) {\n    this._duration = val;\n  }\n\n  get text() {\n    return this._text;\n  }\n\n  set text(val) {\n    this._text = val;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(val) {\n    this._value = val;\n  }\n\n  begin() {}\n\n  end() {}\n\n}\n\nexports.Thermometer = Thermometer;\n\n/***/ }),\n/* 117 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.Console = void 0;\n\nvar _pdf_object = __w_pdfjs_require__(87);\n\nclass Console extends _pdf_object.PDFObject {\n  clear() {\n    this._send({\n      id: "clear"\n    });\n  }\n\n  hide() {}\n\n  println(msg) {\n    if (typeof msg === "string") {\n      this._send({\n        command: "println",\n        value: "PDF.js Console:: " + msg\n      });\n    }\n  }\n\n  show() {}\n\n}\n\nexports.Console = Console;\n\n/***/ }),\n/* 118 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.Doc = void 0;\n\n__w_pdfjs_require__(2);\n\n__w_pdfjs_require__(100);\n\n__w_pdfjs_require__(102);\n\n__w_pdfjs_require__(119);\n\nvar _common = __w_pdfjs_require__(84);\n\nvar _pdf_object = __w_pdfjs_require__(87);\n\nvar _print_params = __w_pdfjs_require__(121);\n\nvar _constants = __w_pdfjs_require__(82);\n\nclass InfoProxyHandler {\n  static get(obj, prop) {\n    return obj[prop.toLowerCase()];\n  }\n\n  static set(obj, prop, value) {\n    throw new Error("doc.info.".concat(prop, " is read-only"));\n  }\n\n}\n\nclass Doc extends _pdf_object.PDFObject {\n  constructor(data) {\n    super(data);\n    this._expandos = globalThis;\n    this._baseURL = data.baseURL || "";\n    this._calculate = true;\n    this._delay = false;\n    this._dirty = false;\n    this._disclosed = false;\n    this._media = undefined;\n    this._metadata = data.metadata || "";\n    this._noautocomplete = undefined;\n    this._nocache = undefined;\n    this._spellDictionaryOrder = [];\n    this._spellLanguageOrder = [];\n    this._printParams = null;\n    this._fields = new Map();\n    this._fieldNames = [];\n    this._event = null;\n    this._author = data.Author || "";\n    this._creator = data.Creator || "";\n    this._creationDate = this._getDate(data.CreationDate) || null;\n    this._docID = data.docID || ["", ""];\n    this._documentFileName = data.filename || "";\n    this._filesize = data.filesize || 0;\n    this._keywords = data.Keywords || "";\n    this._layout = data.layout || "";\n    this._modDate = this._getDate(data.ModDate) || null;\n    this._numFields = 0;\n    this._numPages = data.numPages || 1;\n    this._pageNum = data.pageNum || 0;\n    this._producer = data.Producer || "";\n    this._securityHandler = data.EncryptFilterName || null;\n    this._subject = data.Subject || "";\n    this._title = data.Title || "";\n    this._URL = data.URL || "";\n    this._info = new Proxy({\n      title: this._title,\n      author: this._author,\n      authors: data.authors || [this._author],\n      subject: this._subject,\n      keywords: this._keywords,\n      creator: this._creator,\n      producer: this._producer,\n      creationdate: this._creationDate,\n      moddate: this._modDate,\n      trapped: data.Trapped || "Unknown"\n    }, InfoProxyHandler);\n    this._zoomType = _constants.ZoomType.none;\n    this._zoom = data.zoom || 100;\n    this._actions = (0, _common.createActionsMap)(data.actions);\n    this._globalEval = data.globalEval;\n    this._pageActions = new Map();\n  }\n\n  _dispatchDocEvent(name) {\n    if (name === "Open") {\n      const dontRun = new Set(["WillClose", "WillSave", "DidSave", "WillPrint", "DidPrint", "OpenAction"]);\n\n      for (const actionName of this._actions.keys()) {\n        if (!dontRun.has(actionName)) {\n          this._runActions(actionName);\n        }\n      }\n\n      this._runActions("OpenAction");\n    } else {\n      this._runActions(name);\n    }\n  }\n\n  _dispatchPageEvent(name, actions, pageNumber) {\n    var _this$_pageActions$ge;\n\n    if (name === "PageOpen") {\n      if (!this._pageActions.has(pageNumber)) {\n        this._pageActions.set(pageNumber, (0, _common.createActionsMap)(actions));\n      }\n\n      this._pageNum = pageNumber - 1;\n    }\n\n    actions = (_this$_pageActions$ge = this._pageActions.get(pageNumber)) === null || _this$_pageActions$ge === void 0 ? void 0 : _this$_pageActions$ge.get(name);\n\n    if (actions) {\n      for (const action of actions) {\n        this._globalEval(action);\n      }\n    }\n  }\n\n  _runActions(name) {\n    const actions = this._actions.get(name);\n\n    if (actions) {\n      for (const action of actions) {\n        this._globalEval(action);\n      }\n    }\n  }\n\n  _addField(name, field) {\n    this._fields.set(name, field);\n\n    this._fieldNames.push(name);\n\n    this._numFields++;\n  }\n\n  _getDate(date) {\n    if (!date || date.length < 15 || !date.startsWith("D:")) {\n      return date;\n    }\n\n    date = date.substring(2);\n    const year = date.substring(0, 4);\n    const month = date.substring(4, 6);\n    const day = date.substring(6, 8);\n    const hour = date.substring(8, 10);\n    const minute = date.substring(10, 12);\n    const o = date.charAt(12);\n    let second, offsetPos;\n\n    if (o === "Z" || o === "+" || o === "-") {\n      second = "00";\n      offsetPos = 12;\n    } else {\n      second = date.substring(12, 14);\n      offsetPos = 14;\n    }\n\n    const offset = date.substring(offsetPos).replaceAll("\'", "");\n    return new Date("".concat(year, "-").concat(month, "-").concat(day, "T").concat(hour, ":").concat(minute, ":").concat(second).concat(offset));\n  }\n\n  get author() {\n    return this._author;\n  }\n\n  set author(_) {\n    throw new Error("doc.author is read-only");\n  }\n\n  get baseURL() {\n    return this._baseURL;\n  }\n\n  set baseURL(baseURL) {\n    this._baseURL = baseURL;\n  }\n\n  get bookmarkRoot() {\n    return undefined;\n  }\n\n  set bookmarkRoot(_) {\n    throw new Error("doc.bookmarkRoot is read-only");\n  }\n\n  get calculate() {\n    return this._calculate;\n  }\n\n  set calculate(calculate) {\n    this._calculate = calculate;\n  }\n\n  get creator() {\n    return this._creator;\n  }\n\n  set creator(_) {\n    throw new Error("doc.creator is read-only");\n  }\n\n  get dataObjects() {\n    return [];\n  }\n\n  set dataObjects(_) {\n    throw new Error("doc.dataObjects is read-only");\n  }\n\n  get delay() {\n    return this._delay;\n  }\n\n  set delay(delay) {\n    this._delay = delay;\n  }\n\n  get dirty() {\n    return this._dirty;\n  }\n\n  set dirty(dirty) {\n    this._dirty = dirty;\n  }\n\n  get disclosed() {\n    return this._disclosed;\n  }\n\n  set disclosed(disclosed) {\n    this._disclosed = disclosed;\n  }\n\n  get docID() {\n    return this._docID;\n  }\n\n  set docID(_) {\n    throw new Error("doc.docID is read-only");\n  }\n\n  get documentFileName() {\n    return this._documentFileName;\n  }\n\n  set documentFileName(_) {\n    throw new Error("doc.documentFileName is read-only");\n  }\n\n  get dynamicXFAForm() {\n    return false;\n  }\n\n  set dynamicXFAForm(_) {\n    throw new Error("doc.dynamicXFAForm is read-only");\n  }\n\n  get external() {\n    return true;\n  }\n\n  set external(_) {\n    throw new Error("doc.external is read-only");\n  }\n\n  get filesize() {\n    return this._filesize;\n  }\n\n  set filesize(_) {\n    throw new Error("doc.filesize is read-only");\n  }\n\n  get hidden() {\n    return false;\n  }\n\n  set hidden(_) {\n    throw new Error("doc.hidden is read-only");\n  }\n\n  get hostContainer() {\n    return undefined;\n  }\n\n  set hostContainer(_) {\n    throw new Error("doc.hostContainer is read-only");\n  }\n\n  get icons() {\n    return undefined;\n  }\n\n  set icons(_) {\n    throw new Error("doc.icons is read-only");\n  }\n\n  get info() {\n    return this._info;\n  }\n\n  set info(_) {\n    throw new Error("doc.info is read-only");\n  }\n\n  get innerAppWindowRect() {\n    return [0, 0, 0, 0];\n  }\n\n  set innerAppWindowRect(_) {\n    throw new Error("doc.innerAppWindowRect is read-only");\n  }\n\n  get innerDocWindowRect() {\n    return [0, 0, 0, 0];\n  }\n\n  set innerDocWindowRect(_) {\n    throw new Error("doc.innerDocWindowRect is read-only");\n  }\n\n  get isModal() {\n    return false;\n  }\n\n  set isModal(_) {\n    throw new Error("doc.isModal is read-only");\n  }\n\n  get keywords() {\n    return this._keywords;\n  }\n\n  set keywords(_) {\n    throw new Error("doc.keywords is read-only");\n  }\n\n  get layout() {\n    return this._layout;\n  }\n\n  set layout(value) {\n    if (typeof value !== "string") {\n      return;\n    }\n\n    if (value !== "SinglePage" && value !== "OneColumn" && value !== "TwoColumnLeft" && value !== "TwoPageLeft" && value !== "TwoColumnRight" && value !== "TwoPageRight") {\n      value = "SinglePage";\n    }\n\n    this._send({\n      command: "layout",\n      value\n    });\n\n    this._layout = value;\n  }\n\n  get media() {\n    return this._media;\n  }\n\n  set media(media) {\n    this._media = media;\n  }\n\n  get metadata() {\n    return this._metadata;\n  }\n\n  set metadata(metadata) {\n    this._metadata = metadata;\n  }\n\n  get modDate() {\n    return this._modDate;\n  }\n\n  set modDate(_) {\n    throw new Error("doc.modDate is read-only");\n  }\n\n  get mouseX() {\n    return 0;\n  }\n\n  set mouseX(_) {\n    throw new Error("doc.mouseX is read-only");\n  }\n\n  get mouseY() {\n    return 0;\n  }\n\n  set mouseY(_) {\n    throw new Error("doc.mouseY is read-only");\n  }\n\n  get noautocomplete() {\n    return this._noautocomplete;\n  }\n\n  set noautocomplete(noautocomplete) {\n    this._noautocomplete = noautocomplete;\n  }\n\n  get nocache() {\n    return this._nocache;\n  }\n\n  set nocache(nocache) {\n    this._nocache = nocache;\n  }\n\n  get numFields() {\n    return this._numFields;\n  }\n\n  set numFields(_) {\n    throw new Error("doc.numFields is read-only");\n  }\n\n  get numPages() {\n    return this._numPages;\n  }\n\n  set numPages(_) {\n    throw new Error("doc.numPages is read-only");\n  }\n\n  get numTemplates() {\n    return 0;\n  }\n\n  set numTemplates(_) {\n    throw new Error("doc.numTemplates is read-only");\n  }\n\n  get outerAppWindowRect() {\n    return [0, 0, 0, 0];\n  }\n\n  set outerAppWindowRect(_) {\n    throw new Error("doc.outerAppWindowRect is read-only");\n  }\n\n  get outerDocWindowRect() {\n    return [0, 0, 0, 0];\n  }\n\n  set outerDocWindowRect(_) {\n    throw new Error("doc.outerDocWindowRect is read-only");\n  }\n\n  get pageNum() {\n    return this._pageNum;\n  }\n\n  set pageNum(value) {\n    if (typeof value !== "number" || value < 0 || value >= this._numPages) {\n      return;\n    }\n\n    this._send({\n      command: "page-num",\n      value\n    });\n\n    this._pageNum = value;\n  }\n\n  get pageWindowRect() {\n    return [0, 0, 0, 0];\n  }\n\n  set pageWindowRect(_) {\n    throw new Error("doc.pageWindowRect is read-only");\n  }\n\n  get path() {\n    return "";\n  }\n\n  set path(_) {\n    throw new Error("doc.path is read-only");\n  }\n\n  get permStatusReady() {\n    return true;\n  }\n\n  set permStatusReady(_) {\n    throw new Error("doc.permStatusReady is read-only");\n  }\n\n  get producer() {\n    return this._producer;\n  }\n\n  set producer(_) {\n    throw new Error("doc.producer is read-only");\n  }\n\n  get requiresFullSave() {\n    return false;\n  }\n\n  set requiresFullSave(_) {\n    throw new Error("doc.requiresFullSave is read-only");\n  }\n\n  get securityHandler() {\n    return this._securityHandler;\n  }\n\n  set securityHandler(_) {\n    throw new Error("doc.securityHandler is read-only");\n  }\n\n  get selectedAnnots() {\n    return [];\n  }\n\n  set selectedAnnots(_) {\n    throw new Error("doc.selectedAnnots is read-only");\n  }\n\n  get sounds() {\n    return [];\n  }\n\n  set sounds(_) {\n    throw new Error("doc.sounds is read-only");\n  }\n\n  get spellDictionaryOrder() {\n    return this._spellDictionaryOrder;\n  }\n\n  set spellDictionaryOrder(spellDictionaryOrder) {\n    this._spellDictionaryOrder = spellDictionaryOrder;\n  }\n\n  get spellLanguageOrder() {\n    return this._spellLanguageOrder;\n  }\n\n  set spellLanguageOrder(spellLanguageOrder) {\n    this._spellLanguageOrder = spellLanguageOrder;\n  }\n\n  get subject() {\n    return this._subject;\n  }\n\n  set subject(_) {\n    throw new Error("doc.subject is read-only");\n  }\n\n  get templates() {\n    return [];\n  }\n\n  set templates(_) {\n    throw new Error("doc.templates is read-only");\n  }\n\n  get title() {\n    return this._title;\n  }\n\n  set title(_) {\n    throw new Error("doc.title is read-only");\n  }\n\n  get URL() {\n    return this._URL;\n  }\n\n  set URL(_) {\n    throw new Error("doc.URL is read-only");\n  }\n\n  get viewState() {\n    return undefined;\n  }\n\n  set viewState(_) {\n    throw new Error("doc.viewState is read-only");\n  }\n\n  get xfa() {\n    return this._xfa;\n  }\n\n  set xfa(_) {\n    throw new Error("doc.xfa is read-only");\n  }\n\n  get XFAForeground() {\n    return false;\n  }\n\n  set XFAForeground(_) {\n    throw new Error("doc.XFAForeground is read-only");\n  }\n\n  get zoomType() {\n    return this._zoomType;\n  }\n\n  set zoomType(type) {\n    if (typeof type !== "string") {\n      return;\n    }\n\n    switch (type) {\n      case _constants.ZoomType.none:\n        this._send({\n          command: "zoom",\n          value: 1\n        });\n\n        break;\n\n      case _constants.ZoomType.fitP:\n        this._send({\n          command: "zoom",\n          value: "page-fit"\n        });\n\n        break;\n\n      case _constants.ZoomType.fitW:\n        this._send({\n          command: "zoom",\n          value: "page-width"\n        });\n\n        break;\n\n      case _constants.ZoomType.fitH:\n        this._send({\n          command: "zoom",\n          value: "page-height"\n        });\n\n        break;\n\n      case _constants.ZoomType.fitV:\n        this._send({\n          command: "zoom",\n          value: "auto"\n        });\n\n        break;\n\n      case _constants.ZoomType.pref:\n      case _constants.ZoomType.refW:\n        break;\n\n      default:\n        return;\n    }\n\n    this._zoomType = type;\n  }\n\n  get zoom() {\n    return this._zoom;\n  }\n\n  set zoom(value) {\n    if (typeof value !== "number" || value < 8.33 || value > 6400) {\n      return;\n    }\n\n    this._send({\n      command: "zoom",\n      value: value / 100\n    });\n  }\n\n  addAnnot() {}\n\n  addField() {}\n\n  addIcon() {}\n\n  addLink() {}\n\n  addRecipientListCryptFilter() {}\n\n  addRequirement() {}\n\n  addScript() {}\n\n  addThumbnails() {}\n\n  addWatermarkFromFile() {}\n\n  addWatermarkFromText() {}\n\n  addWeblinks() {}\n\n  bringToFront() {}\n\n  calculateNow() {\n    this._eventDispatcher.calculateNow();\n  }\n\n  closeDoc() {}\n\n  colorConvertPage() {}\n\n  createDataObject() {}\n\n  createTemplate() {}\n\n  deletePages() {}\n\n  deleteSound() {}\n\n  embedDocAsDataObject() {}\n\n  embedOutputIntent() {}\n\n  encryptForRecipients() {}\n\n  encryptUsingPolicy() {}\n\n  exportAsFDF() {}\n\n  exportAsFDFStr() {}\n\n  exportAsText() {}\n\n  exportAsXFDF() {}\n\n  exportAsXFDFStr() {}\n\n  exportDataObject() {}\n\n  exportXFAData() {}\n\n  extractPages() {}\n\n  flattenPages() {}\n\n  getAnnot() {}\n\n  getAnnots() {}\n\n  getAnnot3D() {}\n\n  getAnnots3D() {}\n\n  getColorConvertAction() {}\n\n  getDataObject() {}\n\n  getDataObjectContents() {}\n\n  getField(cName) {\n    if (typeof cName === "object") {\n      cName = cName.cName;\n    }\n\n    if (typeof cName !== "string") {\n      throw new TypeError("Invalid field name: must be a string");\n    }\n\n    const searchedField = this._fields.get(cName);\n\n    if (searchedField) {\n      return searchedField;\n    }\n\n    const parts = cName.split("#");\n    let childIndex = NaN;\n\n    if (parts.length === 2) {\n      childIndex = Math.floor(parseFloat(parts[1]));\n      cName = parts[0];\n    }\n\n    for (const [name, field] of this._fields.entries()) {\n      if (name.endsWith(cName)) {\n        if (!isNaN(childIndex)) {\n          const children = this._getChildren(name);\n\n          if (childIndex < 0 || childIndex >= children.length) {\n            childIndex = 0;\n          }\n\n          if (childIndex < children.length) {\n            this._fields.set(cName, children[childIndex]);\n\n            return children[childIndex];\n          }\n        }\n\n        this._fields.set(cName, field);\n\n        return field;\n      }\n    }\n\n    return null;\n  }\n\n  _getChildren(fieldName) {\n    const len = fieldName.length;\n    const children = [];\n    const pattern = /^\\.[^.]+$/;\n\n    for (const [name, field] of this._fields.entries()) {\n      if (name.startsWith(fieldName)) {\n        const finalPart = name.slice(len);\n\n        if (finalPart.match(pattern)) {\n          children.push(field);\n        }\n      }\n    }\n\n    return children;\n  }\n\n  getIcon() {}\n\n  getLegalWarnings() {}\n\n  getLinks() {}\n\n  getNthFieldName(nIndex) {\n    if (typeof nIndex === "object") {\n      nIndex = nIndex.nIndex;\n    }\n\n    if (typeof nIndex !== "number") {\n      throw new TypeError("Invalid field index: must be a number");\n    }\n\n    if (0 <= nIndex && nIndex < this.numFields) {\n      return this._fieldNames[Math.trunc(nIndex)];\n    }\n\n    return null;\n  }\n\n  getNthTemplate() {\n    return null;\n  }\n\n  getOCGs() {}\n\n  getOCGOrder() {}\n\n  getPageBox() {}\n\n  getPageLabel() {}\n\n  getPageNthWord() {}\n\n  getPageNthWordQuads() {}\n\n  getPageNumWords() {}\n\n  getPageRotation() {}\n\n  getPageTransition() {}\n\n  getPrintParams() {\n    if (!this._printParams) {\n      this._printParams = new _print_params.PrintParams({\n        lastPage: this._numPages - 1\n      });\n    }\n\n    return this._printParams;\n  }\n\n  getSound() {}\n\n  getTemplate() {}\n\n  getURL() {}\n\n  gotoNamedDest() {}\n\n  importAnFDF() {}\n\n  importAnXFDF() {}\n\n  importDataObject() {}\n\n  importIcon() {}\n\n  importSound() {}\n\n  importTextData() {}\n\n  importXFAData() {}\n\n  insertPages() {}\n\n  mailDoc() {}\n\n  mailForm() {}\n\n  movePage() {}\n\n  newPage() {}\n\n  openDataObject() {}\n\n  print() {\n    let bUI = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    let nStart = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let nEnd = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n    let bSilent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    let bShrinkToFit = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n    let bPrintAsImage = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n    let bReverse = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n    let bAnnotations = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : true;\n    let printParams = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : null;\n\n    if (typeof bUI === "object") {\n      nStart = bUI.nStart;\n      nEnd = bUI.nEnd;\n      bSilent = bUI.bSilent;\n      bShrinkToFit = bUI.bShrinkToFit;\n      bPrintAsImage = bUI.bPrintAsImage;\n      bReverse = bUI.bReverse;\n      bAnnotations = bUI.bAnnotations;\n      printParams = bUI.printParams;\n      bUI = bUI.bUI;\n    }\n\n    if (printParams) {\n      nStart = printParams.firstPage;\n      nEnd = printParams.lastPage;\n    }\n\n    if (typeof nStart === "number") {\n      nStart = Math.max(0, Math.trunc(nStart));\n    } else {\n      nStart = 0;\n    }\n\n    if (typeof nEnd === "number") {\n      nEnd = Math.max(0, Math.trunc(nEnd));\n    } else {\n      nEnd = -1;\n    }\n\n    this._send({\n      command: "print",\n      start: nStart,\n      end: nEnd\n    });\n  }\n\n  removeDataObject() {}\n\n  removeField() {}\n\n  removeIcon() {}\n\n  removeLinks() {}\n\n  removeRequirement() {}\n\n  removeScript() {}\n\n  removeTemplate() {}\n\n  removeThumbnails() {}\n\n  removeWeblinks() {}\n\n  replacePages() {}\n\n  resetForm() {\n    let aFields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    if (aFields && !Array.isArray(aFields) && typeof aFields === "object") {\n      aFields = aFields.aFields;\n    }\n\n    let mustCalculate = false;\n\n    if (aFields) {\n      for (const fieldName of aFields) {\n        if (!fieldName) {\n          continue;\n        }\n\n        const field = this.getField(fieldName);\n\n        if (!field) {\n          continue;\n        }\n\n        field.value = field.defaultValue;\n        field.valueAsString = field.value;\n        mustCalculate = true;\n      }\n    } else {\n      mustCalculate = this._fields.size !== 0;\n\n      for (const field of this._fields.values()) {\n        field.value = field.defaultValue;\n        field.valueAsString = field.value;\n      }\n    }\n\n    if (mustCalculate) {\n      this.calculateNow();\n    }\n  }\n\n  saveAs() {}\n\n  scroll() {}\n\n  selectPageNthWord() {}\n\n  setAction() {}\n\n  setDataObjectContents() {}\n\n  setOCGOrder() {}\n\n  setPageAction() {}\n\n  setPageBoxes() {}\n\n  setPageLabels() {}\n\n  setPageRotations() {}\n\n  setPageTabOrder() {}\n\n  setPageTransitions() {}\n\n  spawnPageFromTemplate() {}\n\n  submitForm() {}\n\n  syncAnnotScan() {}\n\n}\n\nexports.Doc = Doc;\n\n/***/ }),\n/* 119 */\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n__w_pdfjs_require__(120);\n\n/***/ }),\n/* 120 */\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n"use strict";\n\nvar $ = __w_pdfjs_require__(65);\nvar global = __w_pdfjs_require__(3);\nvar call = __w_pdfjs_require__(40);\nvar uncurryThis = __w_pdfjs_require__(12);\nvar requireObjectCoercible = __w_pdfjs_require__(16);\nvar isCallable = __w_pdfjs_require__(8);\nvar isRegExp = __w_pdfjs_require__(91);\nvar toString = __w_pdfjs_require__(92);\nvar getMethod = __w_pdfjs_require__(43);\nvar regExpFlags = __w_pdfjs_require__(95);\nvar getSubstitution = __w_pdfjs_require__(107);\nvar wellKnownSymbol = __w_pdfjs_require__(18);\nvar IS_PURE = __w_pdfjs_require__(20);\nvar REPLACE = wellKnownSymbol(\'replace\');\nvar RegExpPrototype = RegExp.prototype;\nvar TypeError = global.TypeError;\nvar getFlags = uncurryThis(regExpFlags);\nvar indexOf = uncurryThis(\'\'.indexOf);\nvar replace = uncurryThis(\'\'.replace);\nvar stringSlice = uncurryThis(\'\'.slice);\nvar max = Math.max;\nvar stringIndexOf = function (string, searchValue, fromIndex) {\n if (fromIndex > string.length)\n  return -1;\n if (searchValue === \'\')\n  return fromIndex;\n return indexOf(string, searchValue, fromIndex);\n};\n$({\n target: \'String\',\n proto: true\n}, {\n replaceAll: function replaceAll(searchValue, replaceValue) {\n  var O = requireObjectCoercible(this);\n  var IS_REG_EXP, flags, replacer, string, searchString, functionalReplace, searchLength, advanceBy, replacement;\n  var position = 0;\n  var endOfLastMatch = 0;\n  var result = \'\';\n  if (searchValue != null) {\n   IS_REG_EXP = isRegExp(searchValue);\n   if (IS_REG_EXP) {\n    flags = toString(requireObjectCoercible(\'flags\' in RegExpPrototype ? searchValue.flags : getFlags(searchValue)));\n    if (!~indexOf(flags, \'g\'))\n     throw TypeError(\'`.replaceAll` does not allow non-global regexes\');\n   }\n   replacer = getMethod(searchValue, REPLACE);\n   if (replacer) {\n    return call(replacer, searchValue, O, replaceValue);\n   } else if (IS_PURE && IS_REG_EXP) {\n    return replace(toString(O), searchValue, replaceValue);\n   }\n  }\n  string = toString(O);\n  searchString = toString(searchValue);\n  functionalReplace = isCallable(replaceValue);\n  if (!functionalReplace)\n   replaceValue = toString(replaceValue);\n  searchLength = searchString.length;\n  advanceBy = max(1, searchLength);\n  position = stringIndexOf(string, searchString, 0);\n  while (position !== -1) {\n   replacement = functionalReplace ? toString(replaceValue(searchString, position, string)) : getSubstitution(searchString, string, position, [], undefined, replaceValue);\n   result += stringSlice(string, endOfLastMatch, position) + replacement;\n   endOfLastMatch = position + searchLength;\n   position = stringIndexOf(string, searchString, position + advanceBy);\n  }\n  if (endOfLastMatch < string.length) {\n   result += stringSlice(string, endOfLastMatch);\n  }\n  return result;\n }\n});\n\n/***/ }),\n/* 121 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.PrintParams = void 0;\n\n__w_pdfjs_require__(122);\n\nclass PrintParams {\n  constructor(data) {\n    this.binaryOk = true;\n    this.bitmapDPI = 150;\n    this.booklet = {\n      binding: 0,\n      duplexMode: 0,\n      subsetFrom: 0,\n      subsetTo: -1\n    };\n    this.colorOverride = 0;\n    this.colorProfile = "";\n    this.constants = Object.freeze({\n      bookletBindings: Object.freeze({\n        Left: 0,\n        Right: 1,\n        LeftTall: 2,\n        RightTall: 3\n      }),\n      bookletDuplexMode: Object.freeze({\n        BothSides: 0,\n        FrontSideOnly: 1,\n        BasicSideOnly: 2\n      }),\n      colorOverrides: Object.freeze({\n        auto: 0,\n        gray: 1,\n        mono: 2\n      }),\n      fontPolicies: Object.freeze({\n        everyPage: 0,\n        jobStart: 1,\n        pageRange: 2\n      }),\n      handling: Object.freeze({\n        none: 0,\n        fit: 1,\n        shrink: 2,\n        tileAll: 3,\n        tileLarge: 4,\n        nUp: 5,\n        booklet: 6\n      }),\n      interactionLevel: Object.freeze({\n        automatic: 0,\n        full: 1,\n        silent: 2\n      }),\n      nUpPageOrders: Object.freeze({\n        Horizontal: 0,\n        HorizontalReversed: 1,\n        Vertical: 2\n      }),\n      printContents: Object.freeze({\n        doc: 0,\n        docAndComments: 1,\n        formFieldsOnly: 2\n      }),\n      flagValues: Object.freeze({\n        applyOverPrint: 1,\n        applySoftProofSettings: 1 << 1,\n        applyWorkingColorSpaces: 1 << 2,\n        emitHalftones: 1 << 3,\n        emitPostScriptXObjects: 1 << 4,\n        emitFormsAsPSForms: 1 << 5,\n        maxJP2KRes: 1 << 6,\n        setPageSize: 1 << 7,\n        suppressBG: 1 << 8,\n        suppressCenter: 1 << 9,\n        suppressCJKFontSubst: 1 << 10,\n        suppressCropClip: 1 << 1,\n        suppressRotate: 1 << 12,\n        suppressTransfer: 1 << 13,\n        suppressUCR: 1 << 14,\n        useTrapAnnots: 1 << 15,\n        usePrintersMarks: 1 << 16\n      }),\n      rasterFlagValues: Object.freeze({\n        textToOutline: 1,\n        strokesToOutline: 1 << 1,\n        allowComplexClip: 1 << 2,\n        preserveOverprint: 1 << 3\n      }),\n      subsets: Object.freeze({\n        all: 0,\n        even: 1,\n        odd: 2\n      }),\n      tileMarks: Object.freeze({\n        none: 0,\n        west: 1,\n        east: 2\n      }),\n      usages: Object.freeze({\n        auto: 0,\n        use: 1,\n        noUse: 2\n      })\n    });\n    this.downloadFarEastFonts = false;\n    this.fileName = "";\n    this.firstPage = 0;\n    this.flags = 0;\n    this.fontPolicy = 0;\n    this.gradientDPI = 150;\n    this.interactive = 1;\n    this.lastPage = data.lastPage;\n    this.npUpAutoRotate = false;\n    this.npUpNumPagesH = 2;\n    this.npUpNumPagesV = 2;\n    this.npUpPageBorder = false;\n    this.npUpPageOrder = 0;\n    this.pageHandling = 0;\n    this.pageSubset = 0;\n    this.printAsImage = false;\n    this.printContent = 0;\n    this.printerName = "";\n    this.psLevel = 0;\n    this.rasterFlags = 0;\n    this.reversePages = false;\n    this.tileLabel = false;\n    this.tileMark = 0;\n    this.tileOverlap = 0;\n    this.tileScale = 1.0;\n    this.transparencyLevel = 75;\n    this.usePrinterCRD = 0;\n    this.useT1Conversion = 0;\n  }\n\n}\n\nexports.PrintParams = PrintParams;\n\n/***/ }),\n/* 122 */\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar DESCRIPTORS = __w_pdfjs_require__(34);\nvar objectDefinePropertyModule = __w_pdfjs_require__(36);\nvar regExpFlags = __w_pdfjs_require__(95);\nvar fails = __w_pdfjs_require__(14);\nvar RegExpPrototype = RegExp.prototype;\nvar FORCED = DESCRIPTORS && fails(function () {\n return Object.getOwnPropertyDescriptor(RegExpPrototype, \'flags\').get.call({\n  dotAll: true,\n  sticky: true\n }) !== \'sy\';\n});\nif (FORCED)\n objectDefinePropertyModule.f(RegExpPrototype, \'flags\', {\n  configurable: true,\n  get: regExpFlags\n });\n\n/***/ }),\n/* 123 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.ProxyHandler = void 0;\n\n__w_pdfjs_require__(2);\n\nclass ProxyHandler {\n  constructor() {\n    this.nosend = new Set(["delay"]);\n  }\n\n  get(obj, prop) {\n    if (prop in obj._expandos) {\n      const val = obj._expandos[prop];\n\n      if (typeof val === "function") {\n        return val.bind(obj);\n      }\n\n      return val;\n    }\n\n    if (typeof prop === "string" && !prop.startsWith("_") && prop in obj) {\n      const val = obj[prop];\n\n      if (typeof val === "function") {\n        return val.bind(obj);\n      }\n\n      return val;\n    }\n\n    return undefined;\n  }\n\n  set(obj, prop, value) {\n    if (obj._kidIds) {\n      obj._kidIds.forEach(id => {\n        obj._appObjects[id].wrapped[prop] = value;\n      });\n    }\n\n    if (typeof prop === "string" && !prop.startsWith("_") && prop in obj) {\n      const old = obj[prop];\n      obj[prop] = value;\n\n      if (!this.nosend.has(prop) && obj._send && obj._id !== null && typeof old !== "function") {\n        const data = {\n          id: obj._id\n        };\n        data[prop] = obj[prop];\n\n        if (!obj._siblings) {\n          obj._send(data);\n        } else {\n          data.siblings = obj._siblings;\n\n          obj._send(data);\n        }\n      }\n    } else {\n      obj._expandos[prop] = value;\n    }\n\n    return true;\n  }\n\n  has(obj, prop) {\n    return prop in obj._expandos || typeof prop === "string" && !prop.startsWith("_") && prop in obj;\n  }\n\n  getPrototypeOf(obj) {\n    return null;\n  }\n\n  setPrototypeOf(obj, proto) {\n    return false;\n  }\n\n  isExtensible(obj) {\n    return true;\n  }\n\n  preventExtensions(obj) {\n    return false;\n  }\n\n  getOwnPropertyDescriptor(obj, prop) {\n    if (prop in obj._expandos) {\n      return {\n        configurable: true,\n        enumerable: true,\n        value: obj._expandos[prop]\n      };\n    }\n\n    if (typeof prop === "string" && !prop.startsWith("_") && prop in obj) {\n      return {\n        configurable: true,\n        enumerable: true,\n        value: obj[prop]\n      };\n    }\n\n    return undefined;\n  }\n\n  defineProperty(obj, key, descriptor) {\n    Object.defineProperty(obj._expandos, key, descriptor);\n    return true;\n  }\n\n  deleteProperty(obj, prop) {\n    if (prop in obj._expandos) {\n      delete obj._expandos[prop];\n    }\n  }\n\n  ownKeys(obj) {\n    const fromExpandos = Reflect.ownKeys(obj._expandos);\n    const fromObj = Reflect.ownKeys(obj).filter(k => !k.startsWith("_"));\n    return fromExpandos.concat(fromObj);\n  }\n\n}\n\nexports.ProxyHandler = ProxyHandler;\n\n/***/ }),\n/* 124 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.Util = void 0;\n\n__w_pdfjs_require__(2);\n\n__w_pdfjs_require__(100);\n\n__w_pdfjs_require__(102);\n\n__w_pdfjs_require__(89);\n\nvar _pdf_object = __w_pdfjs_require__(87);\n\nclass Util extends _pdf_object.PDFObject {\n  constructor(data) {\n    super(data);\n    this._scandCache = new Map();\n    this._months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];\n    this._days = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];\n    this.MILLISECONDS_IN_DAY = 86400000;\n    this.MILLISECONDS_IN_WEEK = 604800000;\n    this._externalCall = data.externalCall;\n  }\n\n  printf() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (args.length === 0) {\n      throw new Error("Invalid number of params in printf");\n    }\n\n    if (typeof args[0] !== "string") {\n      throw new TypeError("First argument of printf must be a string");\n    }\n\n    const pattern = /%(,[0-4])?([+ 0#]+)?(\\d+)?(\\.\\d+)?(.)/g;\n    const PLUS = 1;\n    const SPACE = 2;\n    const ZERO = 4;\n    const HASH = 8;\n    let i = 0;\n    return args[0].replace(pattern, function (match, nDecSep, cFlags, nWidth, nPrecision, cConvChar) {\n      if (cConvChar !== "d" && cConvChar !== "f" && cConvChar !== "s" && cConvChar !== "x") {\n        const buf = ["%"];\n\n        for (const str of [nDecSep, cFlags, nWidth, nPrecision, cConvChar]) {\n          if (str) {\n            buf.push(str);\n          }\n        }\n\n        return buf.join("");\n      }\n\n      i++;\n\n      if (i === args.length) {\n        throw new Error("Not enough arguments in printf");\n      }\n\n      const arg = args[i];\n\n      if (cConvChar === "s") {\n        return arg.toString();\n      }\n\n      let flags = 0;\n\n      if (cFlags) {\n        for (const flag of cFlags) {\n          switch (flag) {\n            case "+":\n              flags |= PLUS;\n              break;\n\n            case " ":\n              flags |= SPACE;\n              break;\n\n            case "0":\n              flags |= ZERO;\n              break;\n\n            case "#":\n              flags |= HASH;\n              break;\n          }\n        }\n      }\n\n      cFlags = flags;\n\n      if (nWidth) {\n        nWidth = parseInt(nWidth);\n      }\n\n      let intPart = Math.trunc(arg);\n\n      if (cConvChar === "x") {\n        let hex = Math.abs(intPart).toString(16).toUpperCase();\n\n        if (nWidth !== undefined) {\n          hex = hex.padStart(nWidth, cFlags & ZERO ? "0" : " ");\n        }\n\n        if (cFlags & HASH) {\n          hex = "0x".concat(hex);\n        }\n\n        return hex;\n      }\n\n      if (nPrecision) {\n        nPrecision = parseInt(nPrecision.substring(1));\n      }\n\n      nDecSep = nDecSep ? nDecSep.substring(1) : "0";\n      const separators = {\n        0: [",", "."],\n        1: ["", "."],\n        2: [".", ","],\n        3: ["", ","],\n        4: ["\'", "."]\n      };\n      const [thousandSep, decimalSep] = separators[nDecSep];\n      let decPart = "";\n\n      if (cConvChar === "f") {\n        if (nPrecision !== undefined) {\n          decPart = Math.abs(arg - intPart).toFixed(nPrecision);\n        } else {\n          decPart = Math.abs(arg - intPart).toString();\n        }\n\n        if (decPart.length > 2) {\n          decPart = "".concat(decimalSep).concat(decPart.substring(2));\n        } else if (cFlags & HASH) {\n          decPart = ".";\n        } else {\n          decPart = "";\n        }\n      }\n\n      let sign = "";\n\n      if (intPart < 0) {\n        sign = "-";\n        intPart = -intPart;\n      } else if (cFlags & PLUS) {\n        sign = "+";\n      } else if (cFlags & SPACE) {\n        sign = " ";\n      }\n\n      if (thousandSep && intPart >= 1000) {\n        const buf = [];\n\n        while (true) {\n          buf.push((intPart % 1000).toString().padStart(3, "0"));\n          intPart = Math.trunc(intPart / 1000);\n\n          if (intPart < 1000) {\n            buf.push(intPart.toString());\n            break;\n          }\n        }\n\n        intPart = buf.reverse().join(thousandSep);\n      } else {\n        intPart = intPart.toString();\n      }\n\n      let n = "".concat(intPart).concat(decPart);\n\n      if (nWidth !== undefined) {\n        n = n.padStart(nWidth - sign.length, cFlags & ZERO ? "0" : " ");\n      }\n\n      return "".concat(sign).concat(n);\n    });\n  }\n\n  iconStreamFromIcon() {}\n\n  printd(cFormat, oDate) {\n    switch (cFormat) {\n      case 0:\n        return this.printd("D:yyyymmddHHMMss", oDate);\n\n      case 1:\n        return this.printd("yyyy.mm.dd HH:MM:ss", oDate);\n\n      case 2:\n        return this.printd("m/d/yy h:MM:ss tt", oDate);\n    }\n\n    const handlers = {\n      mmmm: data => {\n        return this._months[data.month];\n      },\n      mmm: data => {\n        return this._months[data.month].substring(0, 3);\n      },\n      mm: data => {\n        return (data.month + 1).toString().padStart(2, "0");\n      },\n      m: data => {\n        return (data.month + 1).toString();\n      },\n      dddd: data => {\n        return this._days[data.dayOfWeek];\n      },\n      ddd: data => {\n        return this._days[data.dayOfWeek].substring(0, 3);\n      },\n      dd: data => {\n        return data.day.toString().padStart(2, "0");\n      },\n      d: data => {\n        return data.day.toString();\n      },\n      yyyy: data => {\n        return data.year.toString();\n      },\n      yy: data => {\n        return (data.year % 100).toString().padStart(2, "0");\n      },\n      HH: data => {\n        return data.hours.toString().padStart(2, "0");\n      },\n      H: data => {\n        return data.hours.toString();\n      },\n      hh: data => {\n        return (1 + (data.hours + 11) % 12).toString().padStart(2, "0");\n      },\n      h: data => {\n        return (1 + (data.hours + 11) % 12).toString();\n      },\n      MM: data => {\n        return data.minutes.toString().padStart(2, "0");\n      },\n      M: data => {\n        return data.minutes.toString();\n      },\n      ss: data => {\n        return data.seconds.toString().padStart(2, "0");\n      },\n      s: data => {\n        return data.seconds.toString();\n      },\n      tt: data => {\n        return data.hours < 12 ? "am" : "pm";\n      },\n      t: data => {\n        return data.hours < 12 ? "a" : "p";\n      }\n    };\n    const data = {\n      year: oDate.getFullYear(),\n      month: oDate.getMonth(),\n      day: oDate.getDate(),\n      dayOfWeek: oDate.getDay(),\n      hours: oDate.getHours(),\n      minutes: oDate.getMinutes(),\n      seconds: oDate.getSeconds()\n    };\n    const patterns = /(mmmm|mmm|mm|m|dddd|ddd|dd|d|yyyy|yy|HH|H|hh|h|MM|M|ss|s|tt|t|\\\\.)/g;\n    return cFormat.replace(patterns, function (match, pattern) {\n      if (pattern in handlers) {\n        return handlers[pattern](data);\n      }\n\n      return pattern.charCodeAt(1);\n    });\n  }\n\n  printx(cFormat, cSource) {\n    const handlers = [x => x, x => x.toUpperCase(), x => x.toLowerCase()];\n    const buf = [];\n    let i = 0;\n    const ii = cSource.length;\n    let currCase = handlers[0];\n    let escaped = false;\n\n    for (const command of cFormat) {\n      if (escaped) {\n        buf.push(command);\n        escaped = false;\n        continue;\n      }\n\n      if (i >= ii) {\n        break;\n      }\n\n      switch (command) {\n        case "?":\n          buf.push(currCase(cSource.charAt(i++)));\n          break;\n\n        case "X":\n          while (i < ii) {\n            const char = cSource.charAt(i++);\n\n            if ("a" <= char && char <= "z" || "A" <= char && char <= "Z" || "0" <= char && char <= "9") {\n              buf.push(currCase(char));\n              break;\n            }\n          }\n\n          break;\n\n        case "A":\n          while (i < ii) {\n            const char = cSource.charAt(i++);\n\n            if ("a" <= char && char <= "z" || "A" <= char && char <= "Z") {\n              buf.push(currCase(char));\n              break;\n            }\n          }\n\n          break;\n\n        case "9":\n          while (i < ii) {\n            const char = cSource.charAt(i++);\n\n            if ("0" <= char && char <= "9") {\n              buf.push(char);\n              break;\n            }\n          }\n\n          break;\n\n        case "*":\n          while (i < ii) {\n            buf.push(currCase(cSource.charAt(i++)));\n          }\n\n          break;\n\n        case "\\\\":\n          escaped = true;\n          break;\n\n        case ">":\n          currCase = handlers[1];\n          break;\n\n        case "<":\n          currCase = handlers[2];\n          break;\n\n        case "=":\n          currCase = handlers[0];\n          break;\n\n        default:\n          buf.push(command);\n      }\n    }\n\n    return buf.join("");\n  }\n\n  scand(cFormat, cDate) {\n    if (cDate === "") {\n      return new Date();\n    }\n\n    switch (cFormat) {\n      case 0:\n        return this.scand("D:yyyymmddHHMMss", cDate);\n\n      case 1:\n        return this.scand("yyyy.mm.dd HH:MM:ss", cDate);\n\n      case 2:\n        return this.scand("m/d/yy h:MM:ss tt", cDate);\n    }\n\n    if (!this._scandCache.has(cFormat)) {\n      const months = this._months;\n      const days = this._days;\n      const handlers = {\n        mmmm: {\n          pattern: "(".concat(months.join("|"), ")"),\n          action: (value, data) => {\n            data.month = months.indexOf(value);\n          }\n        },\n        mmm: {\n          pattern: "(".concat(months.map(month => month.substring(0, 3)).join("|"), ")"),\n          action: (value, data) => {\n            data.month = months.findIndex(month => month.substring(0, 3) === value);\n          }\n        },\n        mm: {\n          pattern: "(\\\\d{2})",\n          action: (value, data) => {\n            data.month = parseInt(value) - 1;\n          }\n        },\n        m: {\n          pattern: "(\\\\d{1,2})",\n          action: (value, data) => {\n            data.month = parseInt(value) - 1;\n          }\n        },\n        dddd: {\n          pattern: "(".concat(days.join("|"), ")"),\n          action: (value, data) => {\n            data.day = days.indexOf(value);\n          }\n        },\n        ddd: {\n          pattern: "(".concat(days.map(day => day.substring(0, 3)).join("|"), ")"),\n          action: (value, data) => {\n            data.day = days.findIndex(day => day.substring(0, 3) === value);\n          }\n        },\n        dd: {\n          pattern: "(\\\\d{2})",\n          action: (value, data) => {\n            data.day = parseInt(value);\n          }\n        },\n        d: {\n          pattern: "(\\\\d{1,2})",\n          action: (value, data) => {\n            data.day = parseInt(value);\n          }\n        },\n        yyyy: {\n          pattern: "(\\\\d{4})",\n          action: (value, data) => {\n            data.year = parseInt(value);\n          }\n        },\n        yy: {\n          pattern: "(\\\\d{2})",\n          action: (value, data) => {\n            data.year = 2000 + parseInt(value);\n          }\n        },\n        HH: {\n          pattern: "(\\\\d{2})",\n          action: (value, data) => {\n            data.hours = parseInt(value);\n          }\n        },\n        H: {\n          pattern: "(\\\\d{1,2})",\n          action: (value, data) => {\n            data.hours = parseInt(value);\n          }\n        },\n        hh: {\n          pattern: "(\\\\d{2})",\n          action: (value, data) => {\n            data.hours = parseInt(value);\n          }\n        },\n        h: {\n          pattern: "(\\\\d{1,2})",\n          action: (value, data) => {\n            data.hours = parseInt(value);\n          }\n        },\n        MM: {\n          pattern: "(\\\\d{2})",\n          action: (value, data) => {\n            data.minutes = parseInt(value);\n          }\n        },\n        M: {\n          pattern: "(\\\\d{1,2})",\n          action: (value, data) => {\n            data.minutes = parseInt(value);\n          }\n        },\n        ss: {\n          pattern: "(\\\\d{2})",\n          action: (value, data) => {\n            data.seconds = parseInt(value);\n          }\n        },\n        s: {\n          pattern: "(\\\\d{1,2})",\n          action: (value, data) => {\n            data.seconds = parseInt(value);\n          }\n        },\n        tt: {\n          pattern: "([aApP][mM])",\n          action: (value, data) => {\n            const char = value.charAt(0);\n            data.am = char === "a" || char === "A";\n          }\n        },\n        t: {\n          pattern: "([aApP])",\n          action: (value, data) => {\n            data.am = value === "a" || value === "A";\n          }\n        }\n      };\n      const escapedFormat = cFormat.replace(/[.*+\\-?^${}()|[\\]\\\\]/g, "\\\\$&");\n      const patterns = /(mmmm|mmm|mm|m|dddd|ddd|dd|d|yyyy|yy|HH|H|hh|h|MM|M|ss|s|tt|t)/g;\n      const actions = [];\n      const re = escapedFormat.replace(patterns, function (match, patternElement) {\n        const {\n          pattern,\n          action\n        } = handlers[patternElement];\n        actions.push(action);\n        return pattern;\n      });\n\n      this._scandCache.set(cFormat, [re, actions]);\n    }\n\n    const [re, actions] = this._scandCache.get(cFormat);\n\n    const matches = new RegExp(re, "g").exec(cDate);\n\n    if (!matches || matches.length !== actions.length + 1) {\n      return null;\n    }\n\n    const data = {\n      year: 0,\n      month: 0,\n      day: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n      am: null\n    };\n    actions.forEach((action, i) => action(matches[i + 1], data));\n\n    if (data.am !== null) {\n      data.hours = data.hours % 12 + (data.am ? 0 : 12);\n    }\n\n    return new Date(data.year, data.month, data.day, data.hours, data.minutes, data.seconds);\n  }\n\n  spansToXML() {}\n\n  stringFromStream() {}\n\n  xmlToSpans() {}\n\n}\n\nexports.Util = Util;\n\n/***/ })\n/******/ \t]);\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __w_pdfjs_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n// This entry need to be wrapped in an IIFE because it need to be in strict mode.\n(() => {\n"use strict";\nvar exports = __webpack_exports__;\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nObject.defineProperty(exports, "initSandbox", ({\n  enumerable: true,\n  get: function () {\n    return _initialization.initSandbox;\n  }\n}));\n\nvar _initialization = __w_pdfjs_require__(1);\n\nconst pdfjsVersion = \'2.12.557\';\nconst pdfjsBuild = \'ab5a01e2b\';\n})();\n\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});'];g.push("delete dump;");let Q=!1,C=0;try{const E=JSON.stringify(I);g.push("pdfjsScripting.initSandbox({ data: ".concat(E," })"));C=this._module.stringToNewUTF8(g.join("\n"));Q=!!this._module.ccall("init","number",["number","number"],[C,this._alertOnError])}catch(I){Window.ngxConsole.error(I)}finally{C&&this._module.ccall("free","number",["number"],[C])}if(!Q){this.nukeSandbox();throw new Error("Cannot start sandbox")}this.support.commFun=this._module.cwrap("commFun",null,["string","string"])}dispatchEvent(I){this.support.callSandboxFunction("dispatchEvent",I)}dumpMemoryUse(){this._module&&this._module.ccall("dumpMemoryUse",null,[])}nukeSandbox(){if(null!==this._module){this.support.destroy();this.support=null;this._module.ccall("nukeSandbox",null,[]);this._module=null}}evalForTesting(I,g){throw new Error("Not implemented: evalForTesting")}}})();return Q})()}));