{"version":3,"file":"default-src_app_user-view_user_service_ts-node_modules_angular_material_fesm2015_expansion_mj-306148.js","mappings":"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","sources":["./src/app/user-view/user.service.ts","./node_modules/@angular/cdk/fesm2015/accordion.mjs","./node_modules/@angular/material/fesm2015/expansion.mjs","./node_modules/@angular/material/fesm2015/icon.mjs","./node_modules/@angular/material/fesm2015/list.mjs","./node_modules/@angular/material/fesm2015/menu.mjs","./node_modules/@angular/material/fesm2015/select.mjs","./node_modules/@angular/material/fesm2015/sidenav.mjs","./node_modules/@angular/material/fesm2015/tabs.mjs","./node_modules/@angular/material/fesm2015/toolbar.mjs","./node_modules/ngx-material-file-input/fesm2015/ngx-material-file-input.mjs"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClientService } from '../core/http-client.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  constructor(private httpClient: HttpClientService) {}\n\n  getById(id: bigint) {\n    return this.httpClient.get(`${environment.api}/users/${id}`);\n  }\n\n  getWithMember(id: bigint) {\n    return this.httpClient.get(`${environment.api}/users/with-member/${id}`);\n  }\n\n  getDetailMember(uuid: string = '') {\n    return this.httpClient.get(`${environment.api}/members/${uuid}`);\n  }\n}\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Input, EventEmitter, Optional, Inject, SkipSelf, Output, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription } from 'rxjs';\nimport * as i1 from '@angular/cdk/collections';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each accordion. */\nlet nextId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `CdkAccordion`. It serves\n * as alternative token to the actual `CdkAccordion` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_ACCORDION = new InjectionToken('CdkAccordion');\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n    constructor() {\n        /** Emits when the state of the accordion changes */\n        this._stateChanges = new Subject();\n        /** Stream that emits true/false when openAll/closeAll is triggered. */\n        this._openCloseAllActions = new Subject();\n        /** A readonly id value to use for unique selection coordination. */\n        this.id = `cdk-accordion-${nextId$1++}`;\n        this._multi = false;\n    }\n    /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n    get multi() {\n        return this._multi;\n    }\n    set multi(multi) {\n        this._multi = coerceBooleanProperty(multi);\n    }\n    /** Opens all enabled accordion items in an accordion where multi is enabled. */\n    openAll() {\n        if (this._multi) {\n            this._openCloseAllActions.next(true);\n        }\n    }\n    /** Closes all enabled accordion items in an accordion where multi is enabled. */\n    closeAll() {\n        this._openCloseAllActions.next(false);\n    }\n    ngOnChanges(changes) {\n        this._stateChanges.next(changes);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n        this._openCloseAllActions.complete();\n    }\n}\nCdkAccordion.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkAccordion, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nCdkAccordion.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkAccordion, selector: \"cdk-accordion, [cdkAccordion]\", inputs: { multi: \"multi\" }, providers: [{ provide: CDK_ACCORDION, useExisting: CdkAccordion }], exportAs: [\"cdkAccordion\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkAccordion, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-accordion, [cdkAccordion]',\n                    exportAs: 'cdkAccordion',\n                    providers: [{ provide: CDK_ACCORDION, useExisting: CdkAccordion }],\n                }]\n        }], propDecorators: { multi: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each accordion item. */\nlet nextId = 0;\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n    constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n        this.accordion = accordion;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._expansionDispatcher = _expansionDispatcher;\n        /** Subscription to openAll/closeAll events. */\n        this._openCloseAllSubscription = Subscription.EMPTY;\n        /** Event emitted every time the AccordionItem is closed. */\n        this.closed = new EventEmitter();\n        /** Event emitted every time the AccordionItem is opened. */\n        this.opened = new EventEmitter();\n        /** Event emitted when the AccordionItem is destroyed. */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emits whenever the expanded state of the accordion changes.\n         * Primarily used to facilitate two-way binding.\n         * @docs-private\n         */\n        this.expandedChange = new EventEmitter();\n        /** The unique AccordionItem id. */\n        this.id = `cdk-accordion-child-${nextId++}`;\n        this._expanded = false;\n        this._disabled = false;\n        /** Unregister function for _expansionDispatcher. */\n        this._removeUniqueSelectionListener = () => { };\n        this._removeUniqueSelectionListener = _expansionDispatcher.listen((id, accordionId) => {\n            if (this.accordion &&\n                !this.accordion.multi &&\n                this.accordion.id === accordionId &&\n                this.id !== id) {\n                this.expanded = false;\n            }\n        });\n        // When an accordion item is hosted in an accordion, subscribe to open/close events.\n        if (this.accordion) {\n            this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n        }\n    }\n    /** Whether the AccordionItem is expanded. */\n    get expanded() {\n        return this._expanded;\n    }\n    set expanded(expanded) {\n        expanded = coerceBooleanProperty(expanded);\n        // Only emit events and update the internal value if the value changes.\n        if (this._expanded !== expanded) {\n            this._expanded = expanded;\n            this.expandedChange.emit(expanded);\n            if (expanded) {\n                this.opened.emit();\n                /**\n                 * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n                 * the name value is the id of the accordion.\n                 */\n                const accordionId = this.accordion ? this.accordion.id : this.id;\n                this._expansionDispatcher.notify(this.id, accordionId);\n            }\n            else {\n                this.closed.emit();\n            }\n            // Ensures that the animation will run when the value is set outside of an `@Input`.\n            // This includes cases like the open, close and toggle methods.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the AccordionItem is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(disabled) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n    /** Emits an event for the accordion item being destroyed. */\n    ngOnDestroy() {\n        this.opened.complete();\n        this.closed.complete();\n        this.destroyed.emit();\n        this.destroyed.complete();\n        this._removeUniqueSelectionListener();\n        this._openCloseAllSubscription.unsubscribe();\n    }\n    /** Toggles the expanded state of the accordion item. */\n    toggle() {\n        if (!this.disabled) {\n            this.expanded = !this.expanded;\n        }\n    }\n    /** Sets the expanded state of the accordion item to false. */\n    close() {\n        if (!this.disabled) {\n            this.expanded = false;\n        }\n    }\n    /** Sets the expanded state of the accordion item to true. */\n    open() {\n        if (!this.disabled) {\n            this.expanded = true;\n        }\n    }\n    _subscribeToOpenCloseAllActions() {\n        return this.accordion._openCloseAllActions.subscribe(expanded => {\n            // Only change expanded state if item is enabled\n            if (!this.disabled) {\n                this.expanded = expanded;\n            }\n        });\n    }\n}\nCdkAccordionItem.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkAccordionItem, deps: [{ token: CDK_ACCORDION, optional: true, skipSelf: true }, { token: i0.ChangeDetectorRef }, { token: i1.UniqueSelectionDispatcher }], target: i0.ɵɵFactoryTarget.Directive });\nCdkAccordionItem.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkAccordionItem, selector: \"cdk-accordion-item, [cdkAccordionItem]\", inputs: { expanded: \"expanded\", disabled: \"disabled\" }, outputs: { closed: \"closed\", opened: \"opened\", destroyed: \"destroyed\", expandedChange: \"expandedChange\" }, providers: [\n        // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n        // registering to the same accordion.\n        { provide: CDK_ACCORDION, useValue: undefined },\n    ], exportAs: [\"cdkAccordionItem\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkAccordionItem, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-accordion-item, [cdkAccordionItem]',\n                    exportAs: 'cdkAccordionItem',\n                    providers: [\n                        // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n                        // registering to the same accordion.\n                        { provide: CDK_ACCORDION, useValue: undefined },\n                    ],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: CdkAccordion, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [CDK_ACCORDION]\n                    }, {\n                        type: SkipSelf\n                    }] }, { type: i0.ChangeDetectorRef }, { type: i1.UniqueSelectionDispatcher }];\n    }, propDecorators: { closed: [{\n                type: Output\n            }], opened: [{\n                type: Output\n            }], destroyed: [{\n                type: Output\n            }], expandedChange: [{\n                type: Output\n            }], expanded: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkAccordionModule {\n}\nCdkAccordionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkAccordionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdkAccordionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkAccordionModule, declarations: [CdkAccordion, CdkAccordionItem], exports: [CdkAccordion, CdkAccordionItem] });\nCdkAccordionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkAccordionModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkAccordionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CdkAccordion, CdkAccordionItem],\n                    declarations: [CdkAccordion, CdkAccordionItem],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkAccordion, CdkAccordionItem, CdkAccordionModule };\n","import { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport * as i2 from '@angular/cdk/portal';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, SkipSelf, Inject, Input, Output, ContentChild, ViewChild, Host, Attribute, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { mixinTabIndex, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i2$1 from '@angular/cdk/a11y';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { distinctUntilChanged, startWith, filter, take } from 'rxjs/operators';\nimport { ENTER, hasModifierKey, SPACE } from '@angular/cdk/keycodes';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, EMPTY, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i1 from '@angular/cdk/collections';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n */\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time and timing curve for expansion panel animations. */\n// Note: Keep this in sync with the Sass variable for the panel header animation.\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * @docs-private\n */\nconst matExpansionAnimations = {\n    /** Animation that rotates the indicator arrow. */\n    indicatorRotate: trigger('indicatorRotate', [\n        state('collapsed, void', style({ transform: 'rotate(0deg)' })),\n        state('expanded', style({ transform: 'rotate(180deg)' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n    /** Animation that expands and collapses the panel content. */\n    bodyExpansion: trigger('bodyExpansion', [\n        state('collapsed, void', style({ height: '0px', visibility: 'hidden' })),\n        state('expanded', style({ height: '*', visibility: 'visible' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nMatExpansionPanelContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatExpansionPanelContent, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatExpansionPanelContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatExpansionPanelContent, selector: \"ng-template[matExpansionPanelContent]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatExpansionPanelContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matExpansionPanelContent]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/** Counter for generating unique element ids. */\nlet uniqueId = 0;\n/**\n * Injection token that can be used to configure the default\n * options for the expansion panel component.\n */\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\n/**\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n    constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, _document, _animationMode, defaultOptions) {\n        super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n        this._viewContainerRef = _viewContainerRef;\n        this._animationMode = _animationMode;\n        this._hideToggle = false;\n        /** An event emitted after the body's expansion animation happens. */\n        this.afterExpand = new EventEmitter();\n        /** An event emitted after the body's collapse animation happens. */\n        this.afterCollapse = new EventEmitter();\n        /** Stream that emits for changes in `@Input` properties. */\n        this._inputChanges = new Subject();\n        /** ID for the associated header element. Used for a11y labelling. */\n        this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n        /** Stream of body animation done events. */\n        this._bodyAnimationDone = new Subject();\n        this.accordion = accordion;\n        this._document = _document;\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._bodyAnimationDone\n            .pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))\n            .subscribe(event => {\n            if (event.fromState !== 'void') {\n                if (event.toState === 'expanded') {\n                    this.afterExpand.emit();\n                }\n                else if (event.toState === 'collapsed') {\n                    this.afterCollapse.emit();\n                }\n            }\n        });\n        if (defaultOptions) {\n            this.hideToggle = defaultOptions.hideToggle;\n        }\n    }\n    /** Whether the toggle indicator should be hidden. */\n    get hideToggle() {\n        return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n    }\n    set hideToggle(value) {\n        this._hideToggle = coerceBooleanProperty(value);\n    }\n    /** The position of the expansion indicator. */\n    get togglePosition() {\n        return this._togglePosition || (this.accordion && this.accordion.togglePosition);\n    }\n    set togglePosition(value) {\n        this._togglePosition = value;\n    }\n    /** Determines whether the expansion panel should have spacing between it and its siblings. */\n    _hasSpacing() {\n        if (this.accordion) {\n            return this.expanded && this.accordion.displayMode === 'default';\n        }\n        return false;\n    }\n    /** Gets the expanded state string. */\n    _getExpandedState() {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /** Toggles the expanded state of the expansion panel. */\n    toggle() {\n        this.expanded = !this.expanded;\n    }\n    /** Sets the expanded state of the expansion panel to false. */\n    close() {\n        this.expanded = false;\n    }\n    /** Sets the expanded state of the expansion panel to true. */\n    open() {\n        this.expanded = true;\n    }\n    ngAfterContentInit() {\n        if (this._lazyContent) {\n            // Render the content as soon as the panel becomes open.\n            this.opened\n                .pipe(startWith(null), filter(() => this.expanded && !this._portal), take(1))\n                .subscribe(() => {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            });\n        }\n    }\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._bodyAnimationDone.complete();\n        this._inputChanges.complete();\n    }\n    /** Checks whether the expansion panel's content contains the currently-focused element. */\n    _containsFocus() {\n        if (this._body) {\n            const focusedElement = this._document.activeElement;\n            const bodyElement = this._body.nativeElement;\n            return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n        }\n        return false;\n    }\n}\nMatExpansionPanel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatExpansionPanel, deps: [{ token: MAT_ACCORDION, optional: true, skipSelf: true }, { token: i0.ChangeDetectorRef }, { token: i1.UniqueSelectionDispatcher }, { token: i0.ViewContainerRef }, { token: DOCUMENT }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatExpansionPanel.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatExpansionPanel, selector: \"mat-expansion-panel\", inputs: { disabled: \"disabled\", expanded: \"expanded\", hideToggle: \"hideToggle\", togglePosition: \"togglePosition\" }, outputs: { opened: \"opened\", closed: \"closed\", expandedChange: \"expandedChange\", afterExpand: \"afterExpand\", afterCollapse: \"afterCollapse\" }, host: { properties: { \"class.mat-expanded\": \"expanded\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\", \"class.mat-expansion-panel-spacing\": \"_hasSpacing()\" }, classAttribute: \"mat-expansion-panel\" }, providers: [\n        // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n        // to the same accordion.\n        { provide: MAT_ACCORDION, useValue: undefined },\n    ], queries: [{ propertyName: \"_lazyContent\", first: true, predicate: MatExpansionPanelContent, descendants: true }], viewQueries: [{ propertyName: \"_body\", first: true, predicate: [\"body\"], descendants: true }], exportAs: [\"matExpansionPanel\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\", styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], directives: [{ type: i2.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [matExpansionAnimations.bodyExpansion], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatExpansionPanel, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-expansion-panel', exportAs: 'matExpansionPanel', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disabled', 'expanded'], outputs: ['opened', 'closed', 'expandedChange'], animations: [matExpansionAnimations.bodyExpansion], providers: [\n                        // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n                        // to the same accordion.\n                        { provide: MAT_ACCORDION, useValue: undefined },\n                    ], host: {\n                        'class': 'mat-expansion-panel',\n                        '[class.mat-expanded]': 'expanded',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                        '[class.mat-expansion-panel-spacing]': '_hasSpacing()',\n                    }, template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\", styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }, {\n                        type: Inject,\n                        args: [MAT_ACCORDION]\n                    }] }, { type: i0.ChangeDetectorRef }, { type: i1.UniqueSelectionDispatcher }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n                    }, {\n                        type: Optional\n                    }] }];\n    }, propDecorators: { hideToggle: [{\n                type: Input\n            }], togglePosition: [{\n                type: Input\n            }], afterExpand: [{\n                type: Output\n            }], afterCollapse: [{\n                type: Output\n            }], _lazyContent: [{\n                type: ContentChild,\n                args: [MatExpansionPanelContent]\n            }], _body: [{\n                type: ViewChild,\n                args: ['body']\n            }] } });\n/**\n * Actions of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelActionRow {\n}\nMatExpansionPanelActionRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatExpansionPanelActionRow, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatExpansionPanelActionRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatExpansionPanelActionRow, selector: \"mat-action-row\", host: { classAttribute: \"mat-action-row\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatExpansionPanelActionRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-action-row',\n                    host: {\n                        class: 'mat-action-row',\n                    },\n                }]\n        }] });\n\n// Boilerplate for applying mixins to MatExpansionPanelHeader.\n/** @docs-private */\nclass MatExpansionPanelHeaderBase {\n}\nconst _MatExpansionPanelHeaderMixinBase = mixinTabIndex(MatExpansionPanelHeaderBase);\n/**\n * Header element of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader extends _MatExpansionPanelHeaderMixinBase {\n    constructor(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions, _animationMode, tabIndex) {\n        super();\n        this.panel = panel;\n        this._element = _element;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        const accordionHideToggleChange = panel.accordion\n            ? panel.accordion._stateChanges.pipe(filter(changes => !!(changes['hideToggle'] || changes['togglePosition'])))\n            : EMPTY;\n        this.tabIndex = parseInt(tabIndex || '') || 0;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to subscribe and trigger change detection manually.\n        this._parentChangeSubscription = merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter(changes => {\n            return !!(changes['hideToggle'] || changes['disabled'] || changes['togglePosition']);\n        }))).subscribe(() => this._changeDetectorRef.markForCheck());\n        // Avoids focus being lost if the panel contained the focused element and was closed.\n        panel.closed\n            .pipe(filter(() => panel._containsFocus()))\n            .subscribe(() => _focusMonitor.focusVia(_element, 'program'));\n        if (defaultOptions) {\n            this.expandedHeight = defaultOptions.expandedHeight;\n            this.collapsedHeight = defaultOptions.collapsedHeight;\n        }\n    }\n    /**\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n     * @docs-private\n     */\n    get disabled() {\n        return this.panel.disabled;\n    }\n    /** Toggles the expanded state of the panel. */\n    _toggle() {\n        if (!this.disabled) {\n            this.panel.toggle();\n        }\n    }\n    /** Gets whether the panel is expanded. */\n    _isExpanded() {\n        return this.panel.expanded;\n    }\n    /** Gets the expanded state string of the panel. */\n    _getExpandedState() {\n        return this.panel._getExpandedState();\n    }\n    /** Gets the panel id. */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /** Gets the toggle position for the header. */\n    _getTogglePosition() {\n        return this.panel.togglePosition;\n    }\n    /** Gets whether the expand indicator should be shown. */\n    _showToggle() {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Gets the current height of the header. Null if no custom height has been\n     * specified, and if the default height from the stylesheet should be used.\n     */\n    _getHeaderHeight() {\n        const isExpanded = this._isExpanded();\n        if (isExpanded && this.expandedHeight) {\n            return this.expandedHeight;\n        }\n        else if (!isExpanded && this.collapsedHeight) {\n            return this.collapsedHeight;\n        }\n        return null;\n    }\n    /** Handle keydown event calling to toggle() if appropriate. */\n    _keydown(event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this._toggle();\n                }\n                break;\n            default:\n                if (this.panel.accordion) {\n                    this.panel.accordion._handleHeaderKeydown(event);\n                }\n                return;\n        }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * @param origin Origin of the action that triggered the focus.\n     * @docs-private\n     */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._element).subscribe(origin => {\n            if (origin && this.panel.accordion) {\n                this.panel.accordion._handleHeaderFocus(this);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element);\n    }\n}\nMatExpansionPanelHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatExpansionPanelHeader, deps: [{ token: MatExpansionPanel, host: true }, { token: i0.ElementRef }, { token: i2$1.FocusMonitor }, { token: i0.ChangeDetectorRef }, { token: MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Component });\nMatExpansionPanelHeader.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatExpansionPanelHeader, selector: \"mat-expansion-panel-header\", inputs: { tabIndex: \"tabIndex\", expandedHeight: \"expandedHeight\", collapsedHeight: \"collapsedHeight\" }, host: { attributes: { \"role\": \"button\" }, listeners: { \"click\": \"_toggle()\", \"keydown\": \"_keydown($event)\" }, properties: { \"attr.id\": \"panel._headerId\", \"attr.tabindex\": \"tabIndex\", \"attr.aria-controls\": \"_getPanelId()\", \"attr.aria-expanded\": \"_isExpanded()\", \"attr.aria-disabled\": \"panel.disabled\", \"class.mat-expanded\": \"_isExpanded()\", \"class.mat-expansion-toggle-indicator-after\": \"_getTogglePosition() === 'after'\", \"class.mat-expansion-toggle-indicator-before\": \"_getTogglePosition() === 'before'\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\", \"style.height\": \"_getHeaderHeight()\" }, classAttribute: \"mat-expansion-panel-header mat-focus-indicator\" }, usesInheritance: true, ngImport: i0, template: \"<span class=\\\"mat-content\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n<span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\"\\n      class=\\\"mat-expansion-indicator\\\"></span>\\n\", styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true])::before{top:0;left:0;right:0;bottom:0;position:absolute;box-sizing:border-box;pointer-events:none;border:3px solid;border-radius:4px;content:\\\"\\\"}.cdk-high-contrast-active .mat-expansion-panel-content{border-top:1px solid;border-top-left-radius:0;border-top-right-radius:0}\\n\"], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [matExpansionAnimations.indicatorRotate], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatExpansionPanelHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-expansion-panel-header', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['tabIndex'], animations: [matExpansionAnimations.indicatorRotate], host: {\n                        'class': 'mat-expansion-panel-header mat-focus-indicator',\n                        'role': 'button',\n                        '[attr.id]': 'panel._headerId',\n                        '[attr.tabindex]': 'tabIndex',\n                        '[attr.aria-controls]': '_getPanelId()',\n                        '[attr.aria-expanded]': '_isExpanded()',\n                        '[attr.aria-disabled]': 'panel.disabled',\n                        '[class.mat-expanded]': '_isExpanded()',\n                        '[class.mat-expansion-toggle-indicator-after]': `_getTogglePosition() === 'after'`,\n                        '[class.mat-expansion-toggle-indicator-before]': `_getTogglePosition() === 'before'`,\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                        '[style.height]': '_getHeaderHeight()',\n                        '(click)': '_toggle()',\n                        '(keydown)': '_keydown($event)',\n                    }, template: \"<span class=\\\"mat-content\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n<span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\"\\n      class=\\\"mat-expansion-indicator\\\"></span>\\n\", styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true])::before{top:0;left:0;right:0;bottom:0;position:absolute;box-sizing:border-box;pointer-events:none;border:3px solid;border-radius:4px;content:\\\"\\\"}.cdk-high-contrast-active .mat-expansion-panel-content{border-top:1px solid;border-top-left-radius:0;border-top-right-radius:0}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: MatExpansionPanel, decorators: [{\n                        type: Host\n                    }] }, { type: i0.ElementRef }, { type: i2$1.FocusMonitor }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n                    }, {\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['tabindex']\n                    }] }];\n    }, propDecorators: { expandedHeight: [{\n                type: Input\n            }], collapsedHeight: [{\n                type: Input\n            }] } });\n/**\n * Description element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelDescription {\n}\nMatExpansionPanelDescription.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatExpansionPanelDescription, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatExpansionPanelDescription.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatExpansionPanelDescription, selector: \"mat-panel-description\", host: { classAttribute: \"mat-expansion-panel-header-description\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatExpansionPanelDescription, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-panel-description',\n                    host: {\n                        class: 'mat-expansion-panel-header-description',\n                    },\n                }]\n        }] });\n/**\n * Title element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelTitle {\n}\nMatExpansionPanelTitle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatExpansionPanelTitle, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatExpansionPanelTitle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatExpansionPanelTitle, selector: \"mat-panel-title\", host: { classAttribute: \"mat-expansion-panel-header-title\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatExpansionPanelTitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-panel-title',\n                    host: {\n                        class: 'mat-expansion-panel-header-title',\n                    },\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n    constructor() {\n        super(...arguments);\n        /** Headers belonging to this accordion. */\n        this._ownHeaders = new QueryList();\n        this._hideToggle = false;\n        /**\n         * Display mode used for all expansion panels in the accordion. Currently two display\n         * modes exist:\n         *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n         *     panel at a different elevation from the rest of the accordion.\n         *  flat - no spacing is placed around expanded panels, showing all panels at the same\n         *     elevation.\n         */\n        this.displayMode = 'default';\n        /** The position of the expansion indicator. */\n        this.togglePosition = 'after';\n    }\n    /** Whether the expansion indicator should be hidden. */\n    get hideToggle() {\n        return this._hideToggle;\n    }\n    set hideToggle(show) {\n        this._hideToggle = coerceBooleanProperty(show);\n    }\n    ngAfterContentInit() {\n        this._headers.changes\n            .pipe(startWith(this._headers))\n            .subscribe((headers) => {\n            this._ownHeaders.reset(headers.filter(header => header.panel.accordion === this));\n            this._ownHeaders.notifyOnChanges();\n        });\n        this._keyManager = new FocusKeyManager(this._ownHeaders).withWrap().withHomeAndEnd();\n    }\n    /** Handles keyboard events coming in from the panel headers. */\n    _handleHeaderKeydown(event) {\n        this._keyManager.onKeydown(event);\n    }\n    _handleHeaderFocus(header) {\n        this._keyManager.updateActiveItem(header);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._ownHeaders.destroy();\n    }\n}\nMatAccordion.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatAccordion, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatAccordion.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatAccordion, selector: \"mat-accordion\", inputs: { multi: \"multi\", hideToggle: \"hideToggle\", displayMode: \"displayMode\", togglePosition: \"togglePosition\" }, host: { properties: { \"class.mat-accordion-multi\": \"this.multi\" }, classAttribute: \"mat-accordion\" }, providers: [\n        {\n            provide: MAT_ACCORDION,\n            useExisting: MatAccordion,\n        },\n    ], queries: [{ propertyName: \"_headers\", predicate: MatExpansionPanelHeader, descendants: true }], exportAs: [\"matAccordion\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatAccordion, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-accordion',\n                    exportAs: 'matAccordion',\n                    inputs: ['multi'],\n                    providers: [\n                        {\n                            provide: MAT_ACCORDION,\n                            useExisting: MatAccordion,\n                        },\n                    ],\n                    host: {\n                        class: 'mat-accordion',\n                        // Class binding which is only used by the test harness as there is no other\n                        // way for the harness to detect if multiple panel support is enabled.\n                        '[class.mat-accordion-multi]': 'this.multi',\n                    },\n                }]\n        }], propDecorators: { _headers: [{\n                type: ContentChildren,\n                args: [MatExpansionPanelHeader, { descendants: true }]\n            }], hideToggle: [{\n                type: Input\n            }], displayMode: [{\n                type: Input\n            }], togglePosition: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatExpansionModule {\n}\nMatExpansionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatExpansionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatExpansionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatExpansionModule, declarations: [MatAccordion,\n        MatExpansionPanel,\n        MatExpansionPanelActionRow,\n        MatExpansionPanelHeader,\n        MatExpansionPanelTitle,\n        MatExpansionPanelDescription,\n        MatExpansionPanelContent], imports: [CommonModule, MatCommonModule, CdkAccordionModule, PortalModule], exports: [MatAccordion,\n        MatExpansionPanel,\n        MatExpansionPanelActionRow,\n        MatExpansionPanelHeader,\n        MatExpansionPanelTitle,\n        MatExpansionPanelDescription,\n        MatExpansionPanelContent] });\nMatExpansionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatExpansionModule, imports: [[CommonModule, MatCommonModule, CdkAccordionModule, PortalModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatExpansionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatCommonModule, CdkAccordionModule, PortalModule],\n                    exports: [\n                        MatAccordion,\n                        MatExpansionPanel,\n                        MatExpansionPanelActionRow,\n                        MatExpansionPanelHeader,\n                        MatExpansionPanelTitle,\n                        MatExpansionPanelDescription,\n                        MatExpansionPanelContent,\n                    ],\n                    declarations: [\n                        MatAccordion,\n                        MatExpansionPanel,\n                        MatExpansionPanelActionRow,\n                        MatExpansionPanelHeader,\n                        MatExpansionPanelTitle,\n                        MatExpansionPanelDescription,\n                        MatExpansionPanelContent,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EXPANSION_PANEL_ANIMATION_TIMING, MAT_ACCORDION, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatAccordion, MatExpansionModule, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelContent, MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, matExpansionAnimations };\n","import * as i0 from '@angular/core';\nimport { SecurityContext, Injectable, Optional, Inject, SkipSelf, ErrorHandler, InjectionToken, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Input, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DOCUMENT } from '@angular/common';\nimport { of, throwError, forkJoin, Subscription } from 'rxjs';\nimport { tap, map, catchError, finalize, share, take } from 'rxjs/operators';\nimport * as i1 from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http';\nimport * as i2 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Trusted Types policy, or null if Trusted Types are not\n * enabled/supported, or undefined if the policy has not been created yet.\n */\nlet policy;\n/**\n * Returns the Trusted Types policy, or null if Trusted Types are not\n * enabled/supported. The first call to this function will create the policy.\n */\nfunction getPolicy() {\n    if (policy === undefined) {\n        policy = null;\n        if (typeof window !== 'undefined') {\n            const ttWindow = window;\n            if (ttWindow.trustedTypes !== undefined) {\n                policy = ttWindow.trustedTypes.createPolicy('angular#components', {\n                    createHTML: (s) => s,\n                });\n            }\n        }\n    }\n    return policy;\n}\n/**\n * Unsafely promote a string to a TrustedHTML, falling back to strings when\n * Trusted Types are not available.\n * @security This is a security-sensitive function; any use of this function\n * must go through security review. In particular, it must be assured that the\n * provided string will never cause an XSS vulnerability if used in a context\n * that will be interpreted as HTML by a browser, e.g. when assigning to\n * element.innerHTML.\n */\nfunction trustedHTMLFromString(html) {\n    var _a;\n    return ((_a = getPolicy()) === null || _a === void 0 ? void 0 : _a.createHTML(html)) || html;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * @docs-private\n */\nfunction getMatIconNameNotFoundError(iconName) {\n    return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including @angular/common/http.\n * @docs-private\n */\nfunction getMatIconNoHttpProviderError() {\n    return Error('Could not find HttpClient provider for use with Angular Material icons. ' +\n        'Please include the HttpClientModule from @angular/common/http in your ' +\n        'app imports.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * @param url URL that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeUrlError(url) {\n    return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` +\n        `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * @param literal HTML that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeLiteralError(literal) {\n    return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by ` +\n        `Angular's DomSanitizer. Attempted literal was \"${literal}\".`);\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * @docs-private\n */\nclass SvgIconConfig {\n    constructor(url, svgText, options) {\n        this.url = url;\n        this.svgText = svgText;\n        this.options = options;\n    }\n}\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nclass MatIconRegistry {\n    constructor(_httpClient, _sanitizer, document, _errorHandler) {\n        this._httpClient = _httpClient;\n        this._sanitizer = _sanitizer;\n        this._errorHandler = _errorHandler;\n        /**\n         * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n         */\n        this._svgIconConfigs = new Map();\n        /**\n         * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n         * Multiple icon sets can be registered under the same namespace.\n         */\n        this._iconSetConfigs = new Map();\n        /** Cache for icons loaded by direct URLs. */\n        this._cachedIconsByUrl = new Map();\n        /** In-progress icon fetches. Used to coalesce multiple requests to the same URL. */\n        this._inProgressUrlFetches = new Map();\n        /** Map from font identifiers to their CSS class names. Used for icon fonts. */\n        this._fontCssClassesByAlias = new Map();\n        /** Registered icon resolver functions. */\n        this._resolvers = [];\n        /**\n         * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n         * The default 'material-icons' value assumes that the material icon font has been loaded as\n         * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n         */\n        this._defaultFontSetClass = 'material-icons';\n        this._document = document;\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIcon(iconName, url, options) {\n        return this.addSvgIconInNamespace('', iconName, url, options);\n    }\n    /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteral(iconName, literal, options) {\n        return this.addSvgIconLiteralInNamespace('', iconName, literal, options);\n    }\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIconInNamespace(namespace, iconName, url, options) {\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon resolver function with the registry. The function will be invoked with the\n     * name and namespace of an icon when the registry tries to resolve the URL from which to fetch\n     * the icon. The resolver is expected to return a `SafeResourceUrl` that points to the icon,\n     * an object with the icon URL and icon options, or `null` if the icon is not supported. Resolvers\n     * will be invoked in the order in which they have been registered.\n     * @param resolver Resolver function to be registered.\n     */\n    addSvgIconResolver(resolver) {\n        this._resolvers.push(resolver);\n        return this;\n    }\n    /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteralInNamespace(namespace, iconName, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        // TODO: add an ngDevMode check\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        // Security: The literal is passed in as SafeHtml, and is thus trusted.\n        const trustedLiteral = trustedHTMLFromString(cleanLiteral);\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig('', trustedLiteral, options));\n    }\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @param url\n     */\n    addSvgIconSet(url, options) {\n        return this.addSvgIconSetInNamespace('', url, options);\n    }\n    /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteral(literal, options) {\n        return this.addSvgIconSetLiteralInNamespace('', literal, options);\n    }\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param url\n     */\n    addSvgIconSetInNamespace(namespace, url, options) {\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteralInNamespace(namespace, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        // Security: The literal is passed in as SafeHtml, and is thus trusted.\n        const trustedLiteral = trustedHTMLFromString(cleanLiteral);\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig('', trustedLiteral, options));\n    }\n    /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * @param alias Alias for the font.\n     * @param className Class name override to be used instead of the alias.\n     */\n    registerFontClassAlias(alias, className = alias) {\n        this._fontCssClassesByAlias.set(alias, className);\n        return this;\n    }\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     */\n    classNameForFontAlias(alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    }\n    /**\n     * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @param className\n     */\n    setDefaultFontSetClass(className) {\n        this._defaultFontSetClass = className;\n        return this;\n    }\n    /**\n     * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     */\n    getDefaultFontSetClass() {\n        return this._defaultFontSetClass;\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param safeUrl URL from which to fetch the SVG icon.\n     */\n    getSvgIconFromUrl(safeUrl) {\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        const cachedIcon = this._cachedIconsByUrl.get(url);\n        if (cachedIcon) {\n            return of(cloneSvg(cachedIcon));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl, null)).pipe(tap(svg => this._cachedIconsByUrl.set(url, svg)), map(svg => cloneSvg(svg)));\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param name Name of the icon to be retrieved.\n     * @param namespace Namespace in which to look for the icon.\n     */\n    getNamedSvgIcon(name, namespace = '') {\n        const key = iconKey(namespace, name);\n        let config = this._svgIconConfigs.get(key);\n        // Return (copy of) cached icon if possible.\n        if (config) {\n            return this._getSvgFromConfig(config);\n        }\n        // Otherwise try to resolve the config from one of the resolver functions.\n        config = this._getIconConfigFromResolvers(namespace, name);\n        if (config) {\n            this._svgIconConfigs.set(key, config);\n            return this._getSvgFromConfig(config);\n        }\n        // See if we have any icon sets registered for the namespace.\n        const iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return throwError(getMatIconNameNotFoundError(key));\n    }\n    ngOnDestroy() {\n        this._resolvers = [];\n        this._svgIconConfigs.clear();\n        this._iconSetConfigs.clear();\n        this._cachedIconsByUrl.clear();\n    }\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     */\n    _getSvgFromConfig(config) {\n        if (config.svgText) {\n            // We already have the SVG element for this icon, return a copy.\n            return of(cloneSvg(this._svgElementFromConfig(config)));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config).pipe(map(svg => cloneSvg(svg)));\n        }\n    }\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     */\n    _getSvgFromIconSetConfigs(name, iconSetConfigs) {\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        const iconSetFetchRequests = iconSetConfigs\n            .filter(iconSetConfig => !iconSetConfig.svgText)\n            .map(iconSetConfig => {\n            return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(catchError((err) => {\n                const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n                // Swallow errors fetching individual URLs so the\n                // combined Observable won't necessarily fail.\n                const errorMessage = `Loading icon set URL: ${url} failed: ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n                return of(null);\n            }));\n        });\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return forkJoin(iconSetFetchRequests).pipe(map(() => {\n            const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            // TODO: add an ngDevMode check\n            if (!foundIcon) {\n                throw getMatIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        }));\n    }\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractIconWithNameFromAnySet(iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\n            const config = iconSetConfigs[i];\n            // Parsing the icon set's text into an SVG element can be expensive. We can avoid some of\n            // the parsing by doing a quick check using `indexOf` to see if there's any chance for the\n            // icon to be in the set. This won't be 100% accurate, but it should help us avoid at least\n            // some of the parsing.\n            if (config.svgText && config.svgText.toString().indexOf(iconName) > -1) {\n                const svg = this._svgElementFromConfig(config);\n                const foundIcon = this._extractSvgIconFromSet(svg, iconName, config.options);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     */\n    _loadSvgIconFromConfig(config) {\n        return this._fetchIcon(config).pipe(tap(svgText => (config.svgText = svgText)), map(() => this._svgElementFromConfig(config)));\n    }\n    /**\n     * Loads the content of the icon set URL specified in the\n     * SvgIconConfig and attaches it to the config.\n     */\n    _loadSvgIconSetFromConfig(config) {\n        if (config.svgText) {\n            return of(null);\n        }\n        return this._fetchIcon(config).pipe(tap(svgText => (config.svgText = svgText)));\n    }\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractSvgIconFromSet(iconSet, iconName, options) {\n        // Use the `id=\"iconName\"` syntax in order to escape special\n        // characters in the ID (versus using the #iconName syntax).\n        const iconSource = iconSet.querySelector(`[id=\"${iconName}\"]`);\n        if (!iconSource) {\n            return null;\n        }\n        // Clone the element and remove the ID to prevent multiple elements from being added\n        // to the page with the same ID.\n        const iconElement = iconSource.cloneNode(true);\n        iconElement.removeAttribute('id');\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconElement.nodeName.toLowerCase() === 'svg') {\n            return this._setSvgAttributes(iconElement, options);\n        }\n        // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n        // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n        // tag is problematic on Firefox, because it needs to include the current page path.\n        if (iconElement.nodeName.toLowerCase() === 'symbol') {\n            return this._setSvgAttributes(this._toSvgElement(iconElement), options);\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        const svg = this._svgElementFromString(trustedHTMLFromString('<svg></svg>'));\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconElement);\n        return this._setSvgAttributes(svg, options);\n    }\n    /**\n     * Creates a DOM element from the given SVG string.\n     */\n    _svgElementFromString(str) {\n        const div = this._document.createElement('DIV');\n        div.innerHTML = str;\n        const svg = div.querySelector('svg');\n        // TODO: add an ngDevMode check\n        if (!svg) {\n            throw Error('<svg> tag not found');\n        }\n        return svg;\n    }\n    /**\n     * Converts an element into an SVG node by cloning all of its children.\n     */\n    _toSvgElement(element) {\n        const svg = this._svgElementFromString(trustedHTMLFromString('<svg></svg>'));\n        const attributes = element.attributes;\n        // Copy over all the attributes from the `symbol` to the new SVG, except the id.\n        for (let i = 0; i < attributes.length; i++) {\n            const { name, value } = attributes[i];\n            if (name !== 'id') {\n                svg.setAttribute(name, value);\n            }\n        }\n        for (let i = 0; i < element.childNodes.length; i++) {\n            if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n                svg.appendChild(element.childNodes[i].cloneNode(true));\n            }\n        }\n        return svg;\n    }\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     */\n    _setSvgAttributes(svg, options) {\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        if (options && options.viewBox) {\n            svg.setAttribute('viewBox', options.viewBox);\n        }\n        return svg;\n    }\n    /**\n     * Returns an Observable which produces the string contents of the given icon. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     */\n    _fetchIcon(iconConfig) {\n        var _a;\n        const { url: safeUrl, options } = iconConfig;\n        const withCredentials = (_a = options === null || options === void 0 ? void 0 : options.withCredentials) !== null && _a !== void 0 ? _a : false;\n        if (!this._httpClient) {\n            throw getMatIconNoHttpProviderError();\n        }\n        // TODO: add an ngDevMode check\n        if (safeUrl == null) {\n            throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\n        }\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        // TODO: add an ngDevMode check\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        const inProgressFetch = this._inProgressUrlFetches.get(url);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n        const req = this._httpClient.get(url, { responseType: 'text', withCredentials }).pipe(map(svg => {\n            // Security: This SVG is fetched from a SafeResourceUrl, and is thus\n            // trusted HTML.\n            return trustedHTMLFromString(svg);\n        }), finalize(() => this._inProgressUrlFetches.delete(url)), share());\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    }\n    /**\n     * Registers an icon config by name in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param iconName Name under which to register the config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconConfig(namespace, iconName, config) {\n        this._svgIconConfigs.set(iconKey(namespace, iconName), config);\n        return this;\n    }\n    /**\n     * Registers an icon set config in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconSetConfig(namespace, config) {\n        const configNamespace = this._iconSetConfigs.get(namespace);\n        if (configNamespace) {\n            configNamespace.push(config);\n        }\n        else {\n            this._iconSetConfigs.set(namespace, [config]);\n        }\n        return this;\n    }\n    /** Parses a config's text into an SVG element. */\n    _svgElementFromConfig(config) {\n        if (!config.svgElement) {\n            const svg = this._svgElementFromString(config.svgText);\n            this._setSvgAttributes(svg, config.options);\n            config.svgElement = svg;\n        }\n        return config.svgElement;\n    }\n    /** Tries to create an icon config through the registered resolver functions. */\n    _getIconConfigFromResolvers(namespace, name) {\n        for (let i = 0; i < this._resolvers.length; i++) {\n            const result = this._resolvers[i](name, namespace);\n            if (result) {\n                return isSafeUrlWithOptions(result)\n                    ? new SvgIconConfig(result.url, null, result.options)\n                    : new SvgIconConfig(result, null);\n            }\n        }\n        return undefined;\n    }\n}\nMatIconRegistry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIconRegistry, deps: [{ token: i1.HttpClient, optional: true }, { token: i2.DomSanitizer }, { token: DOCUMENT, optional: true }, { token: i0.ErrorHandler }], target: i0.ɵɵFactoryTarget.Injectable });\nMatIconRegistry.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIconRegistry, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIconRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: i1.HttpClient, decorators: [{\n                        type: Optional\n                    }] }, { type: i2.DomSanitizer }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i0.ErrorHandler }];\n    } });\n/** @docs-private */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, errorHandler, document) {\n    return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document, errorHandler);\n}\n/** @docs-private */\nconst ICON_REGISTRY_PROVIDER = {\n    // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MatIconRegistry,\n    deps: [\n        [new Optional(), new SkipSelf(), MatIconRegistry],\n        [new Optional(), HttpClient],\n        DomSanitizer,\n        ErrorHandler,\n        [new Optional(), DOCUMENT],\n    ],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\n/** Clones an SVGElement while preserving type information. */\nfunction cloneSvg(svg) {\n    return svg.cloneNode(true);\n}\n/** Returns the cache key to use for an icon namespace and name. */\nfunction iconKey(namespace, name) {\n    return namespace + ':' + name;\n}\nfunction isSafeUrlWithOptions(value) {\n    return !!(value.url && value.options);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatIcon.\n/** @docs-private */\nconst _MatIconBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\nconst MAT_ICON_LOCATION = new InjectionToken('mat-icon-location', {\n    providedIn: 'root',\n    factory: MAT_ICON_LOCATION_FACTORY,\n});\n/** @docs-private */\nfunction MAT_ICON_LOCATION_FACTORY() {\n    const _document = inject(DOCUMENT);\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: () => (_location ? _location.pathname + _location.search : ''),\n    };\n}\n/** SVG attributes that accept a FuncIRI (e.g. `url(<something>)`). */\nconst funcIriAttributes = [\n    'clip-path',\n    'color-profile',\n    'src',\n    'cursor',\n    'fill',\n    'filter',\n    'marker',\n    'marker-start',\n    'marker-mid',\n    'marker-end',\n    'mask',\n    'stroke',\n];\n/** Selector that can be used to find all elements that are using a `FuncIRI`. */\nconst funcIriAttributeSelector = funcIriAttributes.map(attr => `[${attr}]`).join(', ');\n/** Regex that can be used to extract the id out of a FuncIRI. */\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the content of the `<mat-icon>`\n *   component. By default the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\nclass MatIcon extends _MatIconBase {\n    constructor(elementRef, _iconRegistry, ariaHidden, _location, _errorHandler) {\n        super(elementRef);\n        this._iconRegistry = _iconRegistry;\n        this._location = _location;\n        this._errorHandler = _errorHandler;\n        this._inline = false;\n        /** Subscription to the current in-progress SVG icon request. */\n        this._currentIconFetch = Subscription.EMPTY;\n        // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n        // the right thing to do for the majority of icon use-cases.\n        if (!ariaHidden) {\n            elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n        }\n    }\n    /**\n     * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n     * the element the icon is contained in.\n     */\n    get inline() {\n        return this._inline;\n    }\n    set inline(inline) {\n        this._inline = coerceBooleanProperty(inline);\n    }\n    /** Name of the icon in the SVG icon set. */\n    get svgIcon() {\n        return this._svgIcon;\n    }\n    set svgIcon(value) {\n        if (value !== this._svgIcon) {\n            if (value) {\n                this._updateSvgIcon(value);\n            }\n            else if (this._svgIcon) {\n                this._clearSvgElement();\n            }\n            this._svgIcon = value;\n        }\n    }\n    /** Font set that the icon is a part of. */\n    get fontSet() {\n        return this._fontSet;\n    }\n    set fontSet(value) {\n        const newValue = this._cleanupFontValue(value);\n        if (newValue !== this._fontSet) {\n            this._fontSet = newValue;\n            this._updateFontIconClasses();\n        }\n    }\n    /** Name of an icon within a font set. */\n    get fontIcon() {\n        return this._fontIcon;\n    }\n    set fontIcon(value) {\n        const newValue = this._cleanupFontValue(value);\n        if (newValue !== this._fontIcon) {\n            this._fontIcon = newValue;\n            this._updateFontIconClasses();\n        }\n    }\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     */\n    _splitIconName(iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        const parts = iconName.split(':');\n        switch (parts.length) {\n            case 1:\n                return ['', parts[0]]; // Use default namespace.\n            case 2:\n                return parts;\n            default:\n                throw Error(`Invalid icon name: \"${iconName}\"`); // TODO: add an ngDevMode check\n        }\n    }\n    ngOnInit() {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n        this._updateFontIconClasses();\n    }\n    ngAfterViewChecked() {\n        const cachedElements = this._elementsWithExternalReferences;\n        if (cachedElements && cachedElements.size) {\n            const newPath = this._location.getPathname();\n            // We need to check whether the URL has changed on each change detection since\n            // the browser doesn't have an API that will let us react on link clicks and\n            // we can't depend on the Angular router. The references need to be updated,\n            // because while most browsers don't care whether the URL is correct after\n            // the first render, Safari will break if the user navigates to a different\n            // page and the SVG isn't re-rendered.\n            if (newPath !== this._previousPath) {\n                this._previousPath = newPath;\n                this._prependPathToReferences(newPath);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._currentIconFetch.unsubscribe();\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n    }\n    _usingFontIcon() {\n        return !this.svgIcon;\n    }\n    _setSvgElement(svg) {\n        this._clearSvgElement();\n        // Workaround for IE11 and Edge ignoring `style` tags inside dynamically-created SVGs.\n        // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n        // Do this before inserting the element into the DOM, in order to avoid a style recalculation.\n        const styleTags = svg.querySelectorAll('style');\n        for (let i = 0; i < styleTags.length; i++) {\n            styleTags[i].textContent += ' ';\n        }\n        // Note: we do this fix here, rather than the icon registry, because the\n        // references have to point to the URL at the time that the icon was created.\n        const path = this._location.getPathname();\n        this._previousPath = path;\n        this._cacheChildrenWithExternalReferences(svg);\n        this._prependPathToReferences(path);\n        this._elementRef.nativeElement.appendChild(svg);\n    }\n    _clearSvgElement() {\n        const layoutElement = this._elementRef.nativeElement;\n        let childCount = layoutElement.childNodes.length;\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n        // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n        // we can't use innerHTML, because IE will throw if the element has a data binding.\n        while (childCount--) {\n            const child = layoutElement.childNodes[childCount];\n            // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n            // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n            if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n                child.remove();\n            }\n        }\n    }\n    _updateFontIconClasses() {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        const elem = this._elementRef.nativeElement;\n        const fontSetClass = this.fontSet\n            ? this._iconRegistry.classNameForFontAlias(this.fontSet)\n            : this._iconRegistry.getDefaultFontSetClass();\n        if (fontSetClass != this._previousFontSetClass) {\n            if (this._previousFontSetClass) {\n                elem.classList.remove(this._previousFontSetClass);\n            }\n            if (fontSetClass) {\n                elem.classList.add(fontSetClass);\n            }\n            this._previousFontSetClass = fontSetClass;\n        }\n        if (this.fontIcon != this._previousFontIconClass) {\n            if (this._previousFontIconClass) {\n                elem.classList.remove(this._previousFontIconClass);\n            }\n            if (this.fontIcon) {\n                elem.classList.add(this.fontIcon);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    }\n    /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     */\n    _cleanupFontValue(value) {\n        return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n    }\n    /**\n     * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n     * reference. This is required because WebKit browsers require references to be prefixed with\n     * the current path, if the page has a `base` tag.\n     */\n    _prependPathToReferences(path) {\n        const elements = this._elementsWithExternalReferences;\n        if (elements) {\n            elements.forEach((attrs, element) => {\n                attrs.forEach(attr => {\n                    element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\n                });\n            });\n        }\n    }\n    /**\n     * Caches the children of an SVG element that have `url()`\n     * references that we need to prefix with the current path.\n     */\n    _cacheChildrenWithExternalReferences(element) {\n        const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n        const elements = (this._elementsWithExternalReferences =\n            this._elementsWithExternalReferences || new Map());\n        for (let i = 0; i < elementsWithFuncIri.length; i++) {\n            funcIriAttributes.forEach(attr => {\n                const elementWithReference = elementsWithFuncIri[i];\n                const value = elementWithReference.getAttribute(attr);\n                const match = value ? value.match(funcIriPattern) : null;\n                if (match) {\n                    let attributes = elements.get(elementWithReference);\n                    if (!attributes) {\n                        attributes = [];\n                        elements.set(elementWithReference, attributes);\n                    }\n                    attributes.push({ name: attr, value: match[1] });\n                }\n            });\n        }\n    }\n    /** Sets a new SVG icon with a particular name. */\n    _updateSvgIcon(rawName) {\n        this._svgNamespace = null;\n        this._svgName = null;\n        this._currentIconFetch.unsubscribe();\n        if (rawName) {\n            const [namespace, iconName] = this._splitIconName(rawName);\n            if (namespace) {\n                this._svgNamespace = namespace;\n            }\n            if (iconName) {\n                this._svgName = iconName;\n            }\n            this._currentIconFetch = this._iconRegistry\n                .getNamedSvgIcon(iconName, namespace)\n                .pipe(take(1))\n                .subscribe(svg => this._setSvgElement(svg), (err) => {\n                const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n            });\n        }\n    }\n}\nMatIcon.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIcon, deps: [{ token: i0.ElementRef }, { token: MatIconRegistry }, { token: 'aria-hidden', attribute: true }, { token: MAT_ICON_LOCATION }, { token: i0.ErrorHandler }], target: i0.ɵɵFactoryTarget.Component });\nMatIcon.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatIcon, selector: \"mat-icon\", inputs: { color: \"color\", inline: \"inline\", svgIcon: \"svgIcon\", fontSet: \"fontSet\", fontIcon: \"fontIcon\" }, host: { attributes: { \"role\": \"img\" }, properties: { \"attr.data-mat-icon-type\": \"_usingFontIcon() ? \\\"font\\\" : \\\"svg\\\"\", \"attr.data-mat-icon-name\": \"_svgName || fontIcon\", \"attr.data-mat-icon-namespace\": \"_svgNamespace || fontSet\", \"class.mat-icon-inline\": \"inline\", \"class.mat-icon-no-color\": \"color !== \\\"primary\\\" && color !== \\\"accent\\\" && color !== \\\"warn\\\"\" }, classAttribute: \"mat-icon notranslate\" }, exportAs: [\"matIcon\"], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mat-icon{-webkit-user-select:none;-moz-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIcon, decorators: [{\n            type: Component,\n            args: [{ template: '<ng-content></ng-content>', selector: 'mat-icon', exportAs: 'matIcon', inputs: ['color'], host: {\n                        'role': 'img',\n                        'class': 'mat-icon notranslate',\n                        '[attr.data-mat-icon-type]': '_usingFontIcon() ? \"font\" : \"svg\"',\n                        '[attr.data-mat-icon-name]': '_svgName || fontIcon',\n                        '[attr.data-mat-icon-namespace]': '_svgNamespace || fontSet',\n                        '[class.mat-icon-inline]': 'inline',\n                        '[class.mat-icon-no-color]': 'color !== \"primary\" && color !== \"accent\" && color !== \"warn\"',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-icon{-webkit-user-select:none;-moz-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: MatIconRegistry }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['aria-hidden']\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_ICON_LOCATION]\n                    }] }, { type: i0.ErrorHandler }];\n    }, propDecorators: { inline: [{\n                type: Input\n            }], svgIcon: [{\n                type: Input\n            }], fontSet: [{\n                type: Input\n            }], fontIcon: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatIconModule {\n}\nMatIconModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIconModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatIconModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIconModule, declarations: [MatIcon], imports: [MatCommonModule], exports: [MatIcon, MatCommonModule] });\nMatIconModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIconModule, imports: [[MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIconModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatIcon, MatCommonModule],\n                    declarations: [MatIcon],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ICON_REGISTRY_PROVIDER, ICON_REGISTRY_PROVIDER_FACTORY, MAT_ICON_LOCATION, MAT_ICON_LOCATION_FACTORY, MatIcon, MatIconModule, MatIconRegistry, getMatIconFailedToSanitizeLiteralError, getMatIconFailedToSanitizeUrlError, getMatIconNameNotFoundError, getMatIconNoHttpProviderError };\n","import * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Directive, Optional, Inject, ContentChildren, ContentChild, Input, forwardRef, EventEmitter, Output, ViewChild, Attribute, NgModule } from '@angular/core';\nimport * as i1 from '@angular/material/core';\nimport { mixinDisabled, mixinDisableRipple, setLines, MatLine, MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { takeUntil, startWith } from 'rxjs/operators';\nimport * as i3 from '@angular/cdk/a11y';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { hasModifierKey, A, ENTER, SPACE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDividerModule } from '@angular/material/divider';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatList.\n/** @docs-private */\nconst _MatListBase = mixinDisabled(mixinDisableRipple(class {\n}));\n// Boilerplate for applying mixins to MatListItem.\n/** @docs-private */\nconst _MatListItemMixinBase = mixinDisableRipple(class {\n});\n/**\n * Injection token that can be used to inject instances of `MatList`. It serves as\n * alternative token to the actual `MatList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_LIST = new InjectionToken('MatList');\n/**\n * Injection token that can be used to inject instances of `MatNavList`. It serves as\n * alternative token to the actual `MatNavList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_NAV_LIST = new InjectionToken('MatNavList');\nclass MatNavList extends _MatListBase {\n    constructor() {\n        super(...arguments);\n        /** Emits when the state of the list changes. */\n        this._stateChanges = new Subject();\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatNavList.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatNavList, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatNavList.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatNavList, selector: \"mat-nav-list\", inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, host: { attributes: { \"role\": \"navigation\" }, classAttribute: \"mat-nav-list mat-list-base\" }, providers: [{ provide: MAT_NAV_LIST, useExisting: MatNavList }], exportAs: [\"matNavList\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<ng-content></ng-content>\\n\\n\", styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatNavList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-nav-list', exportAs: 'matNavList', host: {\n                        'role': 'navigation',\n                        'class': 'mat-nav-list mat-list-base',\n                    }, inputs: ['disableRipple', 'disabled'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MAT_NAV_LIST, useExisting: MatNavList }], template: \"<ng-content></ng-content>\\n\\n\", styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"] }]\n        }] });\nclass MatList extends _MatListBase {\n    constructor(_elementRef) {\n        super();\n        this._elementRef = _elementRef;\n        /** Emits when the state of the list changes. */\n        this._stateChanges = new Subject();\n        if (this._getListType() === 'action-list') {\n            _elementRef.nativeElement.classList.add('mat-action-list');\n        }\n    }\n    _getListType() {\n        const nodeName = this._elementRef.nativeElement.nodeName.toLowerCase();\n        if (nodeName === 'mat-list') {\n            return 'list';\n        }\n        if (nodeName === 'mat-action-list') {\n            return 'action-list';\n        }\n        return null;\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatList.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatList, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nMatList.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatList, selector: \"mat-list, mat-action-list\", inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, host: { classAttribute: \"mat-list mat-list-base\" }, providers: [{ provide: MAT_LIST, useExisting: MatList }], exportAs: [\"matList\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<ng-content></ng-content>\\n\\n\", styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-list, mat-action-list', exportAs: 'matList', host: {\n                        'class': 'mat-list mat-list-base',\n                    }, inputs: ['disableRipple', 'disabled'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MAT_LIST, useExisting: MatList }], template: \"<ng-content></ng-content>\\n\\n\", styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListAvatarCssMatStyler {\n}\nMatListAvatarCssMatStyler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListAvatarCssMatStyler, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatListAvatarCssMatStyler.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatListAvatarCssMatStyler, selector: \"[mat-list-avatar], [matListAvatar]\", host: { classAttribute: \"mat-list-avatar\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListAvatarCssMatStyler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-list-avatar], [matListAvatar]',\n                    host: { 'class': 'mat-list-avatar' },\n                }]\n        }] });\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListIconCssMatStyler {\n}\nMatListIconCssMatStyler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListIconCssMatStyler, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatListIconCssMatStyler.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatListIconCssMatStyler, selector: \"[mat-list-icon], [matListIcon]\", host: { classAttribute: \"mat-list-icon\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListIconCssMatStyler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-list-icon], [matListIcon]',\n                    host: { 'class': 'mat-list-icon' },\n                }]\n        }] });\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListSubheaderCssMatStyler {\n}\nMatListSubheaderCssMatStyler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListSubheaderCssMatStyler, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatListSubheaderCssMatStyler.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatListSubheaderCssMatStyler, selector: \"[mat-subheader], [matSubheader]\", host: { classAttribute: \"mat-subheader\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListSubheaderCssMatStyler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-subheader], [matSubheader]',\n                    host: { 'class': 'mat-subheader' },\n                }]\n        }] });\n/** An item within a Material Design list. */\nclass MatListItem extends _MatListItemMixinBase {\n    constructor(_element, _changeDetectorRef, navList, list) {\n        super();\n        this._element = _element;\n        this._isInteractiveList = false;\n        this._destroyed = new Subject();\n        this._disabled = false;\n        this._isInteractiveList = !!(navList || (list && list._getListType() === 'action-list'));\n        this._list = navList || list;\n        // If no type attribute is specified for <button>, set it to \"button\".\n        // If a type attribute is already specified, do nothing.\n        const element = this._getHostElement();\n        if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n            element.setAttribute('type', 'button');\n        }\n        if (this._list) {\n            // React to changes in the state of the parent list since\n            // some of the item's properties depend on it (e.g. `disableRipple`).\n            this._list._stateChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                _changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /** Whether the option is disabled. */\n    get disabled() {\n        return this._disabled || !!(this._list && this._list.disabled);\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Whether this list item should show a ripple effect when clicked. */\n    _isRippleDisabled() {\n        return (!this._isInteractiveList || this.disableRipple || !!(this._list && this._list.disableRipple));\n    }\n    /** Retrieves the DOM element of the component host. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n}\nMatListItem.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListItem, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_NAV_LIST, optional: true }, { token: MAT_LIST, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatListItem.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatListItem, selector: \"mat-list-item, a[mat-list-item], button[mat-list-item]\", inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, host: { properties: { \"class.mat-list-item-disabled\": \"disabled\", \"class.mat-list-item-avatar\": \"_avatar || _icon\", \"class.mat-list-item-with-avatar\": \"_avatar || _icon\" }, classAttribute: \"mat-list-item mat-focus-indicator\" }, queries: [{ propertyName: \"_avatar\", first: true, predicate: MatListAvatarCssMatStyler, descendants: true }, { propertyName: \"_icon\", first: true, predicate: MatListIconCssMatStyler, descendants: true }, { propertyName: \"_lines\", predicate: MatLine, descendants: true }], exportAs: [\"matListItem\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-list-item-content\\\">\\n  <div class=\\\"mat-list-item-ripple\\\" mat-ripple\\n       [matRippleTrigger]=\\\"_getHostElement()\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\">\\n  </div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n  <div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n\\n  <ng-content></ng-content>\\n</div>\\n\", directives: [{ type: i1.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListItem, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]', exportAs: 'matListItem', host: {\n                        'class': 'mat-list-item mat-focus-indicator',\n                        '[class.mat-list-item-disabled]': 'disabled',\n                        // @breaking-change 8.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\n                        '[class.mat-list-item-avatar]': '_avatar || _icon',\n                        '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                    }, inputs: ['disableRipple'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"mat-list-item-content\\\">\\n  <div class=\\\"mat-list-item-ripple\\\" mat-ripple\\n       [matRippleTrigger]=\\\"_getHostElement()\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\">\\n  </div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n  <div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n\\n  <ng-content></ng-content>\\n</div>\\n\" }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: MatNavList, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_NAV_LIST]\n                    }] }, { type: MatList, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_LIST]\n                    }] }];\n    }, propDecorators: { _lines: [{\n                type: ContentChildren,\n                args: [MatLine, { descendants: true }]\n            }], _avatar: [{\n                type: ContentChild,\n                args: [MatListAvatarCssMatStyler]\n            }], _icon: [{\n                type: ContentChild,\n                args: [MatListIconCssMatStyler]\n            }], disabled: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst _MatSelectionListBase = mixinDisableRipple(class {\n});\nconst _MatListOptionBase = mixinDisableRipple(class {\n});\n/** @docs-private */\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSelectionList),\n    multi: true,\n};\n/** Change event that is being fired whenever the selected state of an option changes. */\nclass MatSelectionListChange {\n    constructor(\n    /** Reference to the selection list that emitted the event. */\n    source, \n    /**\n     * Reference to the option that has been changed.\n     * @deprecated Use `options` instead, because some events may change more than one option.\n     * @breaking-change 12.0.0\n     */\n    option, \n    /** Reference to the options that have been changed. */\n    options) {\n        this.source = source;\n        this.option = option;\n        this.options = options;\n    }\n}\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\nclass MatListOption extends _MatListOptionBase {\n    constructor(_element, _changeDetector, \n    /** @docs-private */\n    selectionList) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this.selectionList = selectionList;\n        this._selected = false;\n        this._disabled = false;\n        this._hasFocus = false;\n        /**\n         * Emits when the selected state of the option has changed.\n         * Use to facilitate two-data binding to the `selected` property.\n         * @docs-private\n         */\n        this.selectedChange = new EventEmitter();\n        /** Whether the label should appear before or after the checkbox. Defaults to 'after' */\n        this.checkboxPosition = 'after';\n        /**\n         * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n         * in the first cycle.\n         */\n        this._inputsInitialized = false;\n    }\n    /** Theme color of the list option. This sets the color of the checkbox. */\n    get color() {\n        return this._color || this.selectionList.color;\n    }\n    set color(newValue) {\n        this._color = newValue;\n    }\n    /** Value of the option */\n    get value() {\n        return this._value;\n    }\n    set value(newValue) {\n        if (this.selected &&\n            !this.selectionList.compareWith(newValue, this.value) &&\n            this._inputsInitialized) {\n            this.selected = false;\n        }\n        this._value = newValue;\n    }\n    /** Whether the option is disabled. */\n    get disabled() {\n        return this._disabled || (this.selectionList && this.selectionList.disabled);\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n    /** Whether the option is selected. */\n    get selected() {\n        return this.selectionList.selectedOptions.isSelected(this);\n    }\n    set selected(value) {\n        const isSelected = coerceBooleanProperty(value);\n        if (isSelected !== this._selected) {\n            this._setSelected(isSelected);\n            if (isSelected || this.selectionList.multiple) {\n                this.selectionList._reportValueChange();\n            }\n        }\n    }\n    ngOnInit() {\n        const list = this.selectionList;\n        if (list._value && list._value.some(value => list.compareWith(value, this._value))) {\n            this._setSelected(true);\n        }\n        const wasSelected = this._selected;\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then(() => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this._changeDetector.markForCheck();\n            }\n        });\n        this._inputsInitialized = true;\n    }\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    ngOnDestroy() {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => {\n                this.selected = false;\n            });\n        }\n        const hadFocus = this._hasFocus;\n        const newActiveItem = this.selectionList._removeOptionFromList(this);\n        // Only move focus if this option was focused at the time it was destroyed.\n        if (hadFocus && newActiveItem) {\n            newActiveItem.focus();\n        }\n    }\n    /** Toggles the selection state of the option. */\n    toggle() {\n        this.selected = !this.selected;\n    }\n    /** Allows for programmatic focusing of the option. */\n    focus() {\n        this._element.nativeElement.focus();\n    }\n    /**\n     * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n     * @docs-private\n     */\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent || '' : '';\n    }\n    /** Whether this list item should show a ripple effect when clicked. */\n    _isRippleDisabled() {\n        return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n    }\n    _handleClick() {\n        if (!this.disabled && (this.selectionList.multiple || !this.selected)) {\n            this.toggle();\n            // Emit a change event if the selected state of the option changed through user interaction.\n            this.selectionList._emitChangeEvent([this]);\n        }\n    }\n    _handleFocus() {\n        this.selectionList._setFocusedOption(this);\n        this._hasFocus = true;\n    }\n    _handleBlur() {\n        this.selectionList._onTouched();\n        this._hasFocus = false;\n    }\n    /** Retrieves the DOM element of the component host. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /** Sets the selected state of the option. Returns whether the value has changed. */\n    _setSelected(selected) {\n        if (selected === this._selected) {\n            return false;\n        }\n        this._selected = selected;\n        if (selected) {\n            this.selectionList.selectedOptions.select(this);\n        }\n        else {\n            this.selectionList.selectedOptions.deselect(this);\n        }\n        this.selectedChange.emit(selected);\n        this._changeDetector.markForCheck();\n        return true;\n    }\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run. Mainly\n     * used to trigger an update of the list option if the disabled state of the selection list\n     * changed.\n     */\n    _markForCheck() {\n        this._changeDetector.markForCheck();\n    }\n}\nMatListOption.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListOption, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: forwardRef(() => MatSelectionList) }], target: i0.ɵɵFactoryTarget.Component });\nMatListOption.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatListOption, selector: \"mat-list-option\", inputs: { disableRipple: \"disableRipple\", checkboxPosition: \"checkboxPosition\", color: \"color\", value: \"value\", disabled: \"disabled\", selected: \"selected\" }, outputs: { selectedChange: \"selectedChange\" }, host: { attributes: { \"role\": \"option\" }, listeners: { \"focus\": \"_handleFocus()\", \"blur\": \"_handleBlur()\", \"click\": \"_handleClick()\" }, properties: { \"class.mat-list-item-disabled\": \"disabled\", \"class.mat-list-item-with-avatar\": \"_avatar || _icon\", \"class.mat-primary\": \"color === \\\"primary\\\"\", \"class.mat-accent\": \"color !== \\\"primary\\\" && color !== \\\"warn\\\"\", \"class.mat-warn\": \"color === \\\"warn\\\"\", \"class.mat-list-single-selected-option\": \"selected && !selectionList.multiple\", \"attr.aria-selected\": \"selected\", \"attr.aria-disabled\": \"disabled\", \"attr.tabindex\": \"-1\" }, classAttribute: \"mat-list-item mat-list-option mat-focus-indicator\" }, queries: [{ propertyName: \"_avatar\", first: true, predicate: MatListAvatarCssMatStyler, descendants: true }, { propertyName: \"_icon\", first: true, predicate: MatListIconCssMatStyler, descendants: true }, { propertyName: \"_lines\", predicate: MatLine, descendants: true }], viewQueries: [{ propertyName: \"_text\", first: true, predicate: [\"text\"], descendants: true }], exportAs: [\"matListOption\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-list-item-content\\\"\\n  [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\">\\n\\n  <div mat-ripple\\n    class=\\\"mat-list-item-ripple\\\"\\n    [matRippleTrigger]=\\\"_getHostElement()\\\"\\n    [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div>\\n\\n  <mat-pseudo-checkbox\\n    *ngIf=\\\"selectionList.multiple\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n    [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n  <div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n</div>\\n\", components: [{ type: i1.MatPseudoCheckbox, selector: \"mat-pseudo-checkbox\", inputs: [\"state\", \"disabled\"] }], directives: [{ type: i1.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListOption, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-list-option', exportAs: 'matListOption', inputs: ['disableRipple'], host: {\n                        'role': 'option',\n                        'class': 'mat-list-item mat-list-option mat-focus-indicator',\n                        '(focus)': '_handleFocus()',\n                        '(blur)': '_handleBlur()',\n                        '(click)': '_handleClick()',\n                        '[class.mat-list-item-disabled]': 'disabled',\n                        '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                        // Manually set the \"primary\" or \"warn\" class if the color has been explicitly\n                        // set to \"primary\" or \"warn\". The pseudo checkbox picks up these classes for\n                        // its theme.\n                        '[class.mat-primary]': 'color === \"primary\"',\n                        // Even though accent is the default, we need to set this class anyway, because the  list might\n                        // be placed inside a parent that has one of the other colors with a higher specificity.\n                        '[class.mat-accent]': 'color !== \"primary\" && color !== \"warn\"',\n                        '[class.mat-warn]': 'color === \"warn\"',\n                        '[class.mat-list-single-selected-option]': 'selected && !selectionList.multiple',\n                        '[attr.aria-selected]': 'selected',\n                        '[attr.aria-disabled]': 'disabled',\n                        '[attr.tabindex]': '-1',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"mat-list-item-content\\\"\\n  [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\">\\n\\n  <div mat-ripple\\n    class=\\\"mat-list-item-ripple\\\"\\n    [matRippleTrigger]=\\\"_getHostElement()\\\"\\n    [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div>\\n\\n  <mat-pseudo-checkbox\\n    *ngIf=\\\"selectionList.multiple\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n    [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n  <div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n</div>\\n\" }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: MatSelectionList, decorators: [{\n                        type: Inject,\n                        args: [forwardRef(() => MatSelectionList)]\n                    }] }];\n    }, propDecorators: { _avatar: [{\n                type: ContentChild,\n                args: [MatListAvatarCssMatStyler]\n            }], _icon: [{\n                type: ContentChild,\n                args: [MatListIconCssMatStyler]\n            }], _lines: [{\n                type: ContentChildren,\n                args: [MatLine, { descendants: true }]\n            }], selectedChange: [{\n                type: Output\n            }], _text: [{\n                type: ViewChild,\n                args: ['text']\n            }], checkboxPosition: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }] } });\n/**\n * Material Design list component where each item is a selectable option. Behaves as a listbox.\n */\nclass MatSelectionList extends _MatSelectionListBase {\n    constructor(_element, \n    // @breaking-change 11.0.0 Remove `tabIndex` parameter.\n    tabIndex, _changeDetector, \n    // @breaking-change 11.0.0 `_focusMonitor` parameter to become required.\n    _focusMonitor) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this._focusMonitor = _focusMonitor;\n        this._multiple = true;\n        this._contentInitialized = false;\n        /** Emits a change event whenever the selected state of an option changes. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Tabindex of the selection list.\n         * @breaking-change 11.0.0 Remove `tabIndex` input.\n         */\n        this.tabIndex = 0;\n        /** Theme color of the selection list. This sets the checkbox color for all list options. */\n        this.color = 'accent';\n        /**\n         * Function used for comparing an option against the selected value when determining which\n         * options should appear as selected. The first argument is the value of an options. The second\n         * one is a value from the selected value. A boolean must be returned.\n         */\n        this.compareWith = (a1, a2) => a1 === a2;\n        this._disabled = false;\n        /** The currently selected options. */\n        this.selectedOptions = new SelectionModel(this._multiple);\n        /** The tabindex of the selection list. */\n        this._tabIndex = -1;\n        /** View to model callback that should be called whenever the selected options change. */\n        this._onChange = (_) => { };\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /** View to model callback that should be called if the list or its options lost focus. */\n        this._onTouched = () => { };\n    }\n    /** Whether the selection list is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // The `MatSelectionList` and `MatListOption` are using the `OnPush` change detection\n        // strategy. Therefore the options will not check for any changes if the `MatSelectionList`\n        // changed its state. Since we know that a change to `disabled` property of the list affects\n        // the state of the options, we manually mark each option for check.\n        this._markOptionsForCheck();\n    }\n    /** Whether selection is limited to one or multiple items (default multiple). */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._multiple) {\n            if (this._contentInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw new Error('Cannot change `multiple` mode of mat-selection-list after initialization.');\n            }\n            this._multiple = newValue;\n            this.selectedOptions = new SelectionModel(this._multiple, this.selectedOptions.selected);\n        }\n    }\n    ngAfterContentInit() {\n        var _a;\n        this._contentInitialized = true;\n        this._keyManager = new FocusKeyManager(this.options)\n            .withWrap()\n            .withTypeAhead()\n            .withHomeAndEnd()\n            // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n            // screenreader users, that allows reading the different options of the list.\n            .skipPredicate(() => false)\n            .withAllowedModifierKeys(['shiftKey']);\n        if (this._value) {\n            this._setOptionsFromValues(this._value);\n        }\n        // If the user attempts to tab out of the selection list, allow focus to escape.\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._allowFocusEscape();\n        });\n        // When the number of options change, update the tabindex of the selection list.\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this._updateTabIndex();\n        });\n        // Sync external changes to the model back to the options.\n        this.selectedOptions.changed.pipe(takeUntil(this._destroyed)).subscribe(event => {\n            if (event.added) {\n                for (let item of event.added) {\n                    item.selected = true;\n                }\n            }\n            if (event.removed) {\n                for (let item of event.removed) {\n                    item.selected = false;\n                }\n            }\n        });\n        // @breaking-change 11.0.0 Remove null assertion once _focusMonitor is required.\n        (_a = this._focusMonitor) === null || _a === void 0 ? void 0 : _a.monitor(this._element).pipe(takeUntil(this._destroyed)).subscribe(origin => {\n            var _a;\n            if (origin === 'keyboard' || origin === 'program') {\n                let toFocus = 0;\n                for (let i = 0; i < this.options.length; i++) {\n                    if ((_a = this.options.get(i)) === null || _a === void 0 ? void 0 : _a.selected) {\n                        toFocus = i;\n                        break;\n                    }\n                }\n                this._keyManager.setActiveItem(toFocus);\n            }\n        });\n    }\n    ngOnChanges(changes) {\n        const disableRippleChanges = changes['disableRipple'];\n        const colorChanges = changes['color'];\n        if ((disableRippleChanges && !disableRippleChanges.firstChange) ||\n            (colorChanges && !colorChanges.firstChange)) {\n            this._markOptionsForCheck();\n        }\n    }\n    ngOnDestroy() {\n        var _a;\n        // @breaking-change 11.0.0 Remove null assertion once _focusMonitor is required.\n        (_a = this._focusMonitor) === null || _a === void 0 ? void 0 : _a.stopMonitoring(this._element);\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._isDestroyed = true;\n    }\n    /** Focuses the selection list. */\n    focus(options) {\n        this._element.nativeElement.focus(options);\n    }\n    /** Selects all of the options. Returns the options that changed as a result. */\n    selectAll() {\n        return this._setAllOptionsSelected(true);\n    }\n    /** Deselects all of the options. Returns the options that changed as a result. */\n    deselectAll() {\n        return this._setAllOptionsSelected(false);\n    }\n    /** Sets the focused option of the selection-list. */\n    _setFocusedOption(option) {\n        this._keyManager.updateActiveItem(option);\n    }\n    /**\n     * Removes an option from the selection list and updates the active item.\n     * @returns Currently-active item.\n     */\n    _removeOptionFromList(option) {\n        const optionIndex = this._getOptionIndex(option);\n        if (optionIndex > -1 && this._keyManager.activeItemIndex === optionIndex) {\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.updateActiveItem(optionIndex - 1);\n            }\n            else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.updateActiveItem(Math.min(optionIndex + 1, this.options.length - 1));\n            }\n        }\n        return this._keyManager.activeItem;\n    }\n    /** Passes relevant key presses to our key manager. */\n    _keydown(event) {\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        const previousFocusIndex = manager.activeItemIndex;\n        const hasModifier = hasModifierKey(event);\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                if (!hasModifier && !manager.isTyping()) {\n                    this._toggleFocusedOption();\n                    // Always prevent space from scrolling the page since the list has focus\n                    event.preventDefault();\n                }\n                break;\n            default:\n                // The \"A\" key gets special treatment, because it's used for the \"select all\" functionality.\n                if (keyCode === A &&\n                    this.multiple &&\n                    hasModifierKey(event, 'ctrlKey') &&\n                    !manager.isTyping()) {\n                    const shouldSelect = this.options.some(option => !option.disabled && !option.selected);\n                    this._setAllOptionsSelected(shouldSelect, true, true);\n                    event.preventDefault();\n                }\n                else {\n                    manager.onKeydown(event);\n                }\n        }\n        if (this.multiple &&\n            (keyCode === UP_ARROW || keyCode === DOWN_ARROW) &&\n            event.shiftKey &&\n            manager.activeItemIndex !== previousFocusIndex) {\n            this._toggleFocusedOption();\n        }\n    }\n    /** Reports a value change to the ControlValueAccessor */\n    _reportValueChange() {\n        // Stop reporting value changes after the list has been destroyed. This avoids\n        // cases where the list might wrongly reset its value once it is removed, but\n        // the form control is still live.\n        if (this.options && !this._isDestroyed) {\n            const value = this._getSelectedOptionValues();\n            this._onChange(value);\n            this._value = value;\n        }\n    }\n    /** Emits a change event if the selected state of an option changed. */\n    _emitChangeEvent(options) {\n        this.selectionChange.emit(new MatSelectionListChange(this, options[0], options));\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(values) {\n        this._value = values;\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        }\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Sets the selected options based on the specified values. */\n    _setOptionsFromValues(values) {\n        this.options.forEach(option => option._setSelected(false));\n        values.forEach(value => {\n            const correspondingOption = this.options.find(option => {\n                // Skip options that are already in the model. This allows us to handle cases\n                // where the same primitive value is selected multiple times.\n                return option.selected ? false : this.compareWith(option.value, value);\n            });\n            if (correspondingOption) {\n                correspondingOption._setSelected(true);\n            }\n        });\n    }\n    /** Returns the values of the selected options. */\n    _getSelectedOptionValues() {\n        return this.options.filter(option => option.selected).map(option => option.value);\n    }\n    /** Toggles the state of the currently focused option if enabled. */\n    _toggleFocusedOption() {\n        let focusedIndex = this._keyManager.activeItemIndex;\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            let focusedOption = this.options.toArray()[focusedIndex];\n            if (focusedOption && !focusedOption.disabled && (this._multiple || !focusedOption.selected)) {\n                focusedOption.toggle();\n                // Emit a change event because the focused option changed its state through user\n                // interaction.\n                this._emitChangeEvent([focusedOption]);\n            }\n        }\n    }\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     */\n    _setAllOptionsSelected(isSelected, skipDisabled, isUserInput) {\n        // Keep track of whether anything changed, because we only want to\n        // emit the changed event when something actually changed.\n        const changedOptions = [];\n        this.options.forEach(option => {\n            if ((!skipDisabled || !option.disabled) && option._setSelected(isSelected)) {\n                changedOptions.push(option);\n            }\n        });\n        if (changedOptions.length) {\n            this._reportValueChange();\n            if (isUserInput) {\n                this._emitChangeEvent(changedOptions);\n            }\n        }\n        return changedOptions;\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.options.length;\n    }\n    /** Returns the index of the specified list option. */\n    _getOptionIndex(option) {\n        return this.options.toArray().indexOf(option);\n    }\n    /** Marks all the options to be checked in the next change detection run. */\n    _markOptionsForCheck() {\n        if (this.options) {\n            this.options.forEach(option => option._markForCheck());\n        }\n    }\n    /**\n     * Removes the tabindex from the selection list and resets it back afterwards, allowing the user\n     * to tab out of it. This prevents the list from capturing focus and redirecting it back within\n     * the list, creating a focus trap if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n        this._tabIndex = -1;\n        setTimeout(() => {\n            this._tabIndex = 0;\n            this._changeDetector.markForCheck();\n        });\n    }\n    /** Updates the tabindex based upon if the selection list is empty. */\n    _updateTabIndex() {\n        this._tabIndex = this.options.length === 0 ? -1 : 0;\n    }\n}\nMatSelectionList.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSelectionList, deps: [{ token: i0.ElementRef }, { token: 'tabindex', attribute: true }, { token: i0.ChangeDetectorRef }, { token: i3.FocusMonitor }], target: i0.ɵɵFactoryTarget.Component });\nMatSelectionList.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatSelectionList, selector: \"mat-selection-list\", inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", color: \"color\", compareWith: \"compareWith\", disabled: \"disabled\", multiple: \"multiple\" }, outputs: { selectionChange: \"selectionChange\" }, host: { attributes: { \"role\": \"listbox\" }, listeners: { \"keydown\": \"_keydown($event)\" }, properties: { \"attr.aria-multiselectable\": \"multiple\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.tabindex\": \"_tabIndex\" }, classAttribute: \"mat-selection-list mat-list-base\" }, providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR], queries: [{ propertyName: \"options\", predicate: MatListOption, descendants: true }], exportAs: [\"matSelectionList\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSelectionList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-selection-list', exportAs: 'matSelectionList', inputs: ['disableRipple'], host: {\n                        'role': 'listbox',\n                        'class': 'mat-selection-list mat-list-base',\n                        '(keydown)': '_keydown($event)',\n                        '[attr.aria-multiselectable]': 'multiple',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.tabindex]': '_tabIndex',\n                    }, template: '<ng-content></ng-content>', encapsulation: ViewEncapsulation.None, providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR], changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['tabindex']\n                    }] }, { type: i0.ChangeDetectorRef }, { type: i3.FocusMonitor }];\n    }, propDecorators: { options: [{\n                type: ContentChildren,\n                args: [MatListOption, { descendants: true }]\n            }], selectionChange: [{\n                type: Output\n            }], tabIndex: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], compareWith: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], multiple: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatListModule {\n}\nMatListModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatListModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListModule, declarations: [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatSelectionList,\n        MatListOption], imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule], exports: [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatLineModule,\n        MatCommonModule,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatPseudoCheckboxModule,\n        MatSelectionList,\n        MatListOption,\n        MatDividerModule] });\nMatListModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListModule, imports: [[MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule], MatLineModule,\n        MatCommonModule,\n        MatPseudoCheckboxModule,\n        MatDividerModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n                    exports: [\n                        MatList,\n                        MatNavList,\n                        MatListItem,\n                        MatListAvatarCssMatStyler,\n                        MatLineModule,\n                        MatCommonModule,\n                        MatListIconCssMatStyler,\n                        MatListSubheaderCssMatStyler,\n                        MatPseudoCheckboxModule,\n                        MatSelectionList,\n                        MatListOption,\n                        MatDividerModule,\n                    ],\n                    declarations: [\n                        MatList,\n                        MatNavList,\n                        MatListItem,\n                        MatListAvatarCssMatStyler,\n                        MatListIconCssMatStyler,\n                        MatListSubheaderCssMatStyler,\n                        MatSelectionList,\n                        MatListOption,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_LIST, MAT_NAV_LIST, MAT_SELECTION_LIST_VALUE_ACCESSOR, MatList, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListItem, MatListModule, MatListOption, MatListSubheaderCssMatStyler, MatNavList, MatSelectionList, MatSelectionListChange };\n","import * as i1 from '@angular/cdk/a11y';\nimport { FocusKeyManager, isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UP_ARROW, DOWN_ARROW, RIGHT_ARROW, LEFT_ARROW, ESCAPE, hasModifierKey, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Input, QueryList, EventEmitter, TemplateRef, ContentChildren, ViewChild, ContentChild, Output, Self, NgModule } from '@angular/core';\nimport { Subject, Subscription, merge, of, asapScheduler } from 'rxjs';\nimport { startWith, switchMap, take, filter, takeUntil, delay } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i2 from '@angular/material/core';\nimport { mixinDisableRipple, mixinDisabled, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport * as i3$1 from '@angular/cdk/bidi';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nconst matMenuAnimations = {\n    /**\n     * This animation controls the menu panel's entry and exit from the page.\n     *\n     * When the menu panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the menu panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformMenu: trigger('transformMenu', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)',\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1)',\n        }))),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 }))),\n    ]),\n    /**\n     * This animation fades in the background color and content of the menu panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // TODO(crisbeto): this is inside the `transformMenu`\n        // now. Remove next time we do breaking changes.\n        state('showing', style({ opacity: 1 })),\n        transition('void => *', [\n            style({ opacity: 0 }),\n            animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ]),\n};\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst transformMenu = matMenuAnimations.transformMenu;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatMenuContent`. It serves\n * as alternative token to the actual `MatMenuContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_MENU_CONTENT = new InjectionToken('MatMenuContent');\nclass _MatMenuContentBase {\n    constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document, _changeDetectorRef) {\n        this._template = _template;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._document = _document;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Emits when the menu content has been attached. */\n        this._attached = new Subject();\n    }\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n        this.detach();\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n        }\n        const element = this._template.elementRef.nativeElement;\n        // Because we support opening the same menu from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode.insertBefore(this._outlet.outletElement, element);\n        // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n        // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n        // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n        // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n        // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n        // @breaking-change 9.0.0 Make change detector ref required\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\n_MatMenuContentBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatMenuContentBase, deps: [{ token: i0.TemplateRef }, { token: i0.ComponentFactoryResolver }, { token: i0.ApplicationRef }, { token: i0.Injector }, { token: i0.ViewContainerRef }, { token: DOCUMENT }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\n_MatMenuContentBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _MatMenuContentBase, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatMenuContentBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.TemplateRef }, { type: i0.ComponentFactoryResolver }, { type: i0.ApplicationRef }, { type: i0.Injector }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i0.ChangeDetectorRef }];\n    } });\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\nclass MatMenuContent extends _MatMenuContentBase {\n}\nMatMenuContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuContent, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatMenuContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatMenuContent, selector: \"ng-template[matMenuContent]\", providers: [{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matMenuContent]',\n                    providers: [{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * @docs-private\n */\nfunction throwMatMenuMissingError() {\n    throw Error(`matMenuTriggerFor: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when a menu is assigned\n * to a trigger that is placed inside the same menu.\n * @docs-private\n */\nfunction throwMatMenuRecursiveError() {\n    throw Error(`matMenuTriggerFor: menu cannot contain its own trigger. Assign a menu that is ` +\n        `not a parent of the trigger or move the trigger outside of the menu.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * @docs-private\n */\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n\n// Boilerplate for applying mixins to MatMenuItem.\n/** @docs-private */\nconst _MatMenuItemBase = mixinDisableRipple(mixinDisabled(class {\n}));\n/**\n * Single item inside of a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\nclass MatMenuItem extends _MatMenuItemBase {\n    constructor(_elementRef, \n    /**\n     * @deprecated `_document` parameter is no longer being used and will be removed.\n     * @breaking-change 12.0.0\n     */\n    _document, _focusMonitor, _parentMenu, \n    /**\n     * @deprecated `_changeDetectorRef` to become a required parameter.\n     * @breaking-change 14.0.0\n     */\n    _changeDetectorRef) {\n        // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\n        super();\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._parentMenu = _parentMenu;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** ARIA role for the menu item. */\n        this.role = 'menuitem';\n        /** Stream that emits when the menu item is hovered. */\n        this._hovered = new Subject();\n        /** Stream that emits when the menu item is focused. */\n        this._focused = new Subject();\n        /** Whether the menu item is highlighted. */\n        this._highlighted = false;\n        /** Whether the menu item acts as a trigger for a sub-menu. */\n        this._triggersSubmenu = false;\n        if (_parentMenu && _parentMenu.addItem) {\n            _parentMenu.addItem(this);\n        }\n    }\n    /** Focuses the menu item. */\n    focus(origin, options) {\n        if (this._focusMonitor && origin) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n        this._focused.next(this);\n    }\n    ngAfterViewInit() {\n        if (this._focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for menu items only when the focus was not caused by a\n            // mouse or touch interaction.\n            this._focusMonitor.monitor(this._elementRef, false);\n        }\n    }\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        if (this._parentMenu && this._parentMenu.removeItem) {\n            this._parentMenu.removeItem(this);\n        }\n        this._hovered.complete();\n        this._focused.complete();\n    }\n    /** Used to set the `tabindex`. */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Returns the host DOM element. */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n    /** Emits to the hover stream. */\n    _handleMouseEnter() {\n        this._hovered.next(this);\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        var _a;\n        const clone = this._elementRef.nativeElement.cloneNode(true);\n        const icons = clone.querySelectorAll('mat-icon, .material-icons');\n        // Strip away icons so they don't show up in the text.\n        for (let i = 0; i < icons.length; i++) {\n            icons[i].remove();\n        }\n        return ((_a = clone.textContent) === null || _a === void 0 ? void 0 : _a.trim()) || '';\n    }\n    _setHighlighted(isHighlighted) {\n        var _a;\n        // We need to mark this for check for the case where the content is coming from a\n        // `matMenuContent` whose change detection tree is at the declaration position,\n        // not the insertion position. See #23175.\n        // @breaking-change 14.0.0 Remove null check for `_changeDetectorRef`.\n        this._highlighted = isHighlighted;\n        (_a = this._changeDetectorRef) === null || _a === void 0 ? void 0 : _a.markForCheck();\n    }\n}\nMatMenuItem.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuItem, deps: [{ token: i0.ElementRef }, { token: DOCUMENT }, { token: i1.FocusMonitor }, { token: MAT_MENU_PANEL, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMatMenuItem.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatMenuItem, selector: \"[mat-menu-item]\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", role: \"role\" }, host: { listeners: { \"click\": \"_checkDisabled($event)\", \"mouseenter\": \"_handleMouseEnter()\" }, properties: { \"attr.role\": \"role\", \"class.mat-menu-item\": \"true\", \"class.mat-menu-item-highlighted\": \"_highlighted\", \"class.mat-menu-item-submenu-trigger\": \"_triggersSubmenu\", \"attr.tabindex\": \"_getTabIndex()\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.disabled\": \"disabled || null\" }, classAttribute: \"mat-focus-indicator\" }, exportAs: [\"matMenuItem\"], usesInheritance: true, ngImport: i0, template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\\n<svg\\n  *ngIf=\\\"_triggersSubmenu\\\"\\n  class=\\\"mat-menu-submenu-icon\\\"\\n  viewBox=\\\"0 0 5 10\\\"\\n  focusable=\\\"false\\\"><polygon points=\\\"0,0 5,5 0,10\\\"/></svg>\\n\", directives: [{ type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuItem, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-menu-item]', exportAs: 'matMenuItem', inputs: ['disabled', 'disableRipple'], host: {\n                        '[attr.role]': 'role',\n                        '[class.mat-menu-item]': 'true',\n                        '[class.mat-menu-item-highlighted]': '_highlighted',\n                        '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n                        '[attr.tabindex]': '_getTabIndex()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.disabled]': 'disabled || null',\n                        'class': 'mat-focus-indicator',\n                        '(click)': '_checkDisabled($event)',\n                        '(mouseenter)': '_handleMouseEnter()',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\\n<svg\\n  *ngIf=\\\"_triggersSubmenu\\\"\\n  class=\\\"mat-menu-submenu-icon\\\"\\n  viewBox=\\\"0 0 5 10\\\"\\n  focusable=\\\"false\\\"><polygon points=\\\"0,0 5,5 0,10\\\"/></svg>\\n\" }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i1.FocusMonitor }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_MENU_PANEL]\n                    }, {\n                        type: Optional\n                    }] }, { type: i0.ChangeDetectorRef }];\n    }, propDecorators: { role: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-menu`. */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n    providedIn: 'root',\n    factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n    };\n}\nlet menuPanelUid = 0;\n/** Base class with all of the `MatMenu` functionality. */\nclass _MatMenuBase {\n    constructor(_elementRef, _ngZone, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        this._xPosition = this._defaultOptions.xPosition;\n        this._yPosition = this._defaultOptions.yPosition;\n        /** Only the direct descendant menu items. */\n        this._directDescendantItems = new QueryList();\n        /** Subscription to tab events on the menu panel */\n        this._tabSubscription = Subscription.EMPTY;\n        /** Config object to be passed into the menu's ngClass */\n        this._classList = {};\n        /** Current state of the panel animation. */\n        this._panelAnimationState = 'void';\n        /** Emits whenever an animation on the menu completes. */\n        this._animationDone = new Subject();\n        /** Class or list of classes to be added to the overlay panel. */\n        this.overlayPanelClass = this._defaultOptions.overlayPanelClass || '';\n        /** Class to be added to the backdrop element. */\n        this.backdropClass = this._defaultOptions.backdropClass;\n        this._overlapTrigger = this._defaultOptions.overlapTrigger;\n        this._hasBackdrop = this._defaultOptions.hasBackdrop;\n        /** Event emitted when the menu is closed. */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted when the menu is closed.\n         * @deprecated Switch to `closed` instead\n         * @breaking-change 8.0.0\n         */\n        this.close = this.closed;\n        this.panelId = `mat-menu-panel-${menuPanelUid++}`;\n    }\n    /** Position of the menu in the X axis. */\n    get xPosition() {\n        return this._xPosition;\n    }\n    set xPosition(value) {\n        if (value !== 'before' &&\n            value !== 'after' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n    /** Position of the menu in the Y axis. */\n    get yPosition() {\n        return this._yPosition;\n    }\n    set yPosition(value) {\n        if (value !== 'above' && value !== 'below' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n    /** Whether the menu should overlap its trigger. */\n    get overlapTrigger() {\n        return this._overlapTrigger;\n    }\n    set overlapTrigger(value) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n    /** Whether the menu has a backdrop. */\n    get hasBackdrop() {\n        return this._hasBackdrop;\n    }\n    set hasBackdrop(value) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param classes list of class names\n     */\n    set panelClass(classes) {\n        const previousPanelClass = this._previousPanelClass;\n        if (previousPanelClass && previousPanelClass.length) {\n            previousPanelClass.split(' ').forEach((className) => {\n                this._classList[className] = false;\n            });\n        }\n        this._previousPanelClass = classes;\n        if (classes && classes.length) {\n            classes.split(' ').forEach((className) => {\n                this._classList[className] = true;\n            });\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @deprecated Use `panelClass` instead.\n     * @breaking-change 8.0.0\n     */\n    get classList() {\n        return this.panelClass;\n    }\n    set classList(classes) {\n        this.panelClass = classes;\n    }\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n    ngAfterContentInit() {\n        this._updateDirectDescendants();\n        this._keyManager = new FocusKeyManager(this._directDescendantItems)\n            .withWrap()\n            .withTypeAhead()\n            .withHomeAndEnd();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n        // If a user manually (programmatically) focuses a menu item, we need to reflect that focus\n        // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n        // is internal and we know that it gets completed on destroy.\n        this._directDescendantItems.changes\n            .pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._focused))))\n            .subscribe(focusedItem => this._keyManager.updateActiveItem(focusedItem));\n    }\n    ngOnDestroy() {\n        this._directDescendantItems.destroy();\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n    /** Stream that emits whenever the hovered menu item changes. */\n    _hovered() {\n        // Coerce the `changes` property because Angular types it as `Observable<any>`\n        const itemChanges = this._directDescendantItems.changes;\n        return itemChanges.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._hovered))));\n    }\n    /*\n     * Registers a menu item with the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    addItem(_item) { }\n    /**\n     * Removes an item from the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    removeItem(_item) { }\n    /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        switch (keyCode) {\n            case ESCAPE:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this.closed.emit('keydown');\n                }\n                break;\n            case LEFT_ARROW:\n                if (this.parentMenu && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parentMenu && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    manager.setFocusOrigin('keyboard');\n                }\n                manager.onKeydown(event);\n        }\n    }\n    /**\n     * Focus the first item in the menu.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin = 'program') {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => this._focusFirstItem(origin));\n        }\n        else {\n            this._focusFirstItem(origin);\n        }\n    }\n    /**\n     * Actual implementation that focuses the first item. Needs to be separated\n     * out so we don't repeat the same logic in the public `focusFirstItem` method.\n     */\n    _focusFirstItem(origin) {\n        const manager = this._keyManager;\n        manager.setFocusOrigin(origin).setFirstItemActive();\n        // If there's no active item at this point, it means that all the items are disabled.\n        // Move focus to the menu panel so keyboard events like Escape still work. Also this will\n        // give _some_ feedback to screen readers.\n        if (!manager.activeItem && this._directDescendantItems.length) {\n            let element = this._directDescendantItems.first._getHostElement().parentElement;\n            // Because the `mat-menu` is at the DOM insertion point, not inside the overlay, we don't\n            // have a nice way of getting a hold of the menu panel. We can't use a `ViewChild` either\n            // because the panel is inside an `ng-template`. We work around it by starting from one of\n            // the items and walking up the DOM.\n            while (element) {\n                if (element.getAttribute('role') === 'menu') {\n                    element.focus();\n                    break;\n                }\n                else {\n                    element = element.parentElement;\n                }\n            }\n        }\n    }\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n    /**\n     * Sets the menu panel elevation.\n     * @param depth Number of parent menus that come before the menu.\n     */\n    setElevation(depth) {\n        // The elevation starts at the base and increases by one for each level.\n        // Capped at 24 because that's the maximum elevation defined in the Material design spec.\n        const elevation = Math.min(this._baseElevation + depth, 24);\n        const newElevation = `${this._elevationPrefix}${elevation}`;\n        const customElevation = Object.keys(this._classList).find(className => {\n            return className.startsWith(this._elevationPrefix);\n        });\n        if (!customElevation || customElevation === this._previousElevation) {\n            if (this._previousElevation) {\n                this._classList[this._previousElevation] = false;\n            }\n            this._classList[newElevation] = true;\n            this._previousElevation = newElevation;\n        }\n    }\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the menu along the x axis.\n     * @param posY Position of the menu along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n        const classes = this._classList;\n        classes['mat-menu-before'] = posX === 'before';\n        classes['mat-menu-after'] = posX === 'after';\n        classes['mat-menu-above'] = posY === 'above';\n        classes['mat-menu-below'] = posY === 'below';\n    }\n    /** Starts the enter animation. */\n    _startAnimation() {\n        // @breaking-change 8.0.0 Combine with _resetAnimation.\n        this._panelAnimationState = 'enter';\n    }\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        // @breaking-change 8.0.0 Combine with _startAnimation.\n        this._panelAnimationState = 'void';\n    }\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n    }\n    _onAnimationStart(event) {\n        this._isAnimating = true;\n        // Scroll the content element to the top as soon as the animation starts. This is necessary,\n        // because we move focus to the first item while it's still being animated, which can throw\n        // the browser off when it determines the scroll position. Alternatively we can move focus\n        // when the animation is done, however moving focus asynchronously will interrupt screen\n        // readers which are in the process of reading out the menu already. We take the `element`\n        // from the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n    /**\n     * Sets up a stream that will keep track of any newly-added menu items and will update the list\n     * of direct descendants. We collect the descendants this way, because `_allItems` can include\n     * items that are part of child menus, and using a custom way of registering items is unreliable\n     * when it comes to maintaining the item order.\n     */\n    _updateDirectDescendants() {\n        this._allItems.changes\n            .pipe(startWith(this._allItems))\n            .subscribe((items) => {\n            this._directDescendantItems.reset(items.filter(item => item._parentMenu === this));\n            this._directDescendantItems.notifyOnChanges();\n        });\n    }\n}\n_MatMenuBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatMenuBase, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: MAT_MENU_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Directive });\n_MatMenuBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _MatMenuBase, inputs: { backdropClass: \"backdropClass\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], xPosition: \"xPosition\", yPosition: \"yPosition\", overlapTrigger: \"overlapTrigger\", hasBackdrop: \"hasBackdrop\", panelClass: [\"class\", \"panelClass\"], classList: \"classList\" }, outputs: { closed: \"closed\", close: \"close\" }, queries: [{ propertyName: \"lazyContent\", first: true, predicate: MAT_MENU_CONTENT, descendants: true }, { propertyName: \"_allItems\", predicate: MatMenuItem, descendants: true }, { propertyName: \"items\", predicate: MatMenuItem }], viewQueries: [{ propertyName: \"templateRef\", first: true, predicate: TemplateRef, descendants: true }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatMenuBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_MENU_DEFAULT_OPTIONS]\n                    }] }];\n    }, propDecorators: { _allItems: [{\n                type: ContentChildren,\n                args: [MatMenuItem, { descendants: true }]\n            }], backdropClass: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], xPosition: [{\n                type: Input\n            }], yPosition: [{\n                type: Input\n            }], templateRef: [{\n                type: ViewChild,\n                args: [TemplateRef]\n            }], items: [{\n                type: ContentChildren,\n                args: [MatMenuItem, { descendants: false }]\n            }], lazyContent: [{\n                type: ContentChild,\n                args: [MAT_MENU_CONTENT]\n            }], overlapTrigger: [{\n                type: Input\n            }], hasBackdrop: [{\n                type: Input\n            }], panelClass: [{\n                type: Input,\n                args: ['class']\n            }], classList: [{\n                type: Input\n            }], closed: [{\n                type: Output\n            }], close: [{\n                type: Output\n            }] } });\n/** @docs-public MatMenu */\nclass MatMenu extends _MatMenuBase {\n    constructor(elementRef, ngZone, defaultOptions) {\n        super(elementRef, ngZone, defaultOptions);\n        this._elevationPrefix = 'mat-elevation-z';\n        this._baseElevation = 4;\n    }\n}\nMatMenu.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenu, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: MAT_MENU_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Component });\nMatMenu.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatMenu, selector: \"mat-menu\", host: { properties: { \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"attr.aria-describedby\": \"null\" } }, providers: [{ provide: MAT_MENU_PANEL, useExisting: MatMenu }], exportAs: [\"matMenu\"], usesInheritance: true, ngImport: i0, template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\"mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.mat-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-menu-submenu-icon{fill:CanvasText}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], directives: [{ type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], animations: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenu, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-menu', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, exportAs: 'matMenu', host: {\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[attr.aria-describedby]': 'null',\n                    }, animations: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems], providers: [{ provide: MAT_MENU_PANEL, useExisting: MatMenu }], template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\"mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.mat-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-menu-submenu-icon{fill:CanvasText}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_MENU_DEFAULT_OPTIONS]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that determines the scroll handling while the menu is open. */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/** @docs-private */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_MENU_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n/** Default top padding of the menu panel. */\nconst MENU_PANEL_TOP_PADDING = 8;\n/** Options for binding a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\nclass _MatMenuTriggerBase {\n    constructor(_overlay, _element, _viewContainerRef, scrollStrategy, parentMenu, \n    // `MatMenuTrigger` is commonly used in combination with a `MatMenuItem`.\n    // tslint:disable-next-line: lightweight-tokens\n    _menuItemInstance, _dir, \n    // TODO(crisbeto): make the _focusMonitor required when doing breaking changes.\n    // @breaking-change 8.0.0\n    _focusMonitor) {\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._menuItemInstance = _menuItemInstance;\n        this._dir = _dir;\n        this._focusMonitor = _focusMonitor;\n        this._overlayRef = null;\n        this._menuOpen = false;\n        this._closingActionsSubscription = Subscription.EMPTY;\n        this._hoverSubscription = Subscription.EMPTY;\n        this._menuCloseSubscription = Subscription.EMPTY;\n        /**\n         * Handles touch start events on the trigger.\n         * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n         */\n        this._handleTouchStart = (event) => {\n            if (!isFakeTouchstartFromScreenReader(event)) {\n                this._openedBy = 'touch';\n            }\n        };\n        // Tracking input type is necessary so it's possible to only auto-focus\n        // the first item of the list when the menu is opened via the keyboard\n        this._openedBy = undefined;\n        /**\n         * Whether focus should be restored when the menu is closed.\n         * Note that disabling this option can have accessibility implications\n         * and it's up to you to manage focus, if you decide to turn it off.\n         */\n        this.restoreFocus = true;\n        /** Event emitted when the associated menu is opened. */\n        this.menuOpened = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is opened.\n         * @deprecated Switch to `menuOpened` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuOpen = this.menuOpened;\n        /** Event emitted when the associated menu is closed. */\n        this.menuClosed = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is closed.\n         * @deprecated Switch to `menuClosed` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuClose = this.menuClosed;\n        this._scrollStrategy = scrollStrategy;\n        this._parentMaterialMenu = parentMenu instanceof _MatMenuBase ? parentMenu : undefined;\n        _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        if (_menuItemInstance) {\n            _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n        }\n    }\n    /**\n     * @deprecated\n     * @breaking-change 8.0.0\n     */\n    get _deprecatedMatMenuTriggerFor() {\n        return this.menu;\n    }\n    set _deprecatedMatMenuTriggerFor(v) {\n        this.menu = v;\n    }\n    /** References the menu instance that the trigger is associated with. */\n    get menu() {\n        return this._menu;\n    }\n    set menu(menu) {\n        if (menu === this._menu) {\n            return;\n        }\n        this._menu = menu;\n        this._menuCloseSubscription.unsubscribe();\n        if (menu) {\n            if (menu === this._parentMaterialMenu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwMatMenuRecursiveError();\n            }\n            this._menuCloseSubscription = menu.close.subscribe((reason) => {\n                this._destroyMenu(reason);\n                // If a click closed the menu, we should close the entire chain of nested menus.\n                if ((reason === 'click' || reason === 'tab') && this._parentMaterialMenu) {\n                    this._parentMaterialMenu.closed.emit(reason);\n                }\n            });\n        }\n    }\n    ngAfterContentInit() {\n        this._checkMenu();\n        this._handleHover();\n    }\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n        this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        this._menuCloseSubscription.unsubscribe();\n        this._closingActionsSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n    /** Whether the menu is open. */\n    get menuOpen() {\n        return this._menuOpen;\n    }\n    /** The text direction of the containing app. */\n    get dir() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the menu triggers a sub-menu or a top-level one. */\n    triggersSubmenu() {\n        return !!(this._menuItemInstance && this._parentMaterialMenu);\n    }\n    /** Toggles the menu between the open and closed states. */\n    toggleMenu() {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    }\n    /** Opens the menu. */\n    openMenu() {\n        if (this._menuOpen) {\n            return;\n        }\n        this._checkMenu();\n        const overlayRef = this._createOverlay();\n        const overlayConfig = overlayRef.getConfig();\n        this._setPosition(overlayConfig.positionStrategy);\n        overlayConfig.hasBackdrop =\n            this.menu.hasBackdrop == null ? !this.triggersSubmenu() : this.menu.hasBackdrop;\n        overlayRef.attach(this._getPortal());\n        if (this.menu.lazyContent) {\n            this.menu.lazyContent.attach(this.menuData);\n        }\n        this._closingActionsSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n        this._initMenu();\n        if (this.menu instanceof _MatMenuBase) {\n            this.menu._startAnimation();\n        }\n    }\n    /** Closes the menu. */\n    closeMenu() {\n        this.menu.close.emit();\n    }\n    /**\n     * Focuses the menu trigger.\n     * @param origin Source of the menu trigger's focus.\n     */\n    focus(origin, options) {\n        if (this._focusMonitor && origin) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    /**\n     * Updates the position of the menu to ensure that it fits all options within the viewport.\n     */\n    updatePosition() {\n        var _a;\n        (_a = this._overlayRef) === null || _a === void 0 ? void 0 : _a.updatePosition();\n    }\n    /** Closes the menu and does the necessary cleanup. */\n    _destroyMenu(reason) {\n        if (!this._overlayRef || !this.menuOpen) {\n            return;\n        }\n        const menu = this.menu;\n        this._closingActionsSubscription.unsubscribe();\n        this._overlayRef.detach();\n        // Always restore focus if the user is navigating using the keyboard or the menu was opened\n        // programmatically. We don't restore for non-root triggers, because it can prevent focus\n        // from making it back to the root trigger when closing a long chain of menus by clicking\n        // on the backdrop.\n        if (this.restoreFocus && (reason === 'keydown' || !this._openedBy || !this.triggersSubmenu())) {\n            this.focus(this._openedBy);\n        }\n        this._openedBy = undefined;\n        if (menu instanceof _MatMenuBase) {\n            menu._resetAnimation();\n            if (menu.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                menu._animationDone\n                    .pipe(filter(event => event.toState === 'void'), take(1), \n                // Interrupt if the content got re-attached.\n                takeUntil(menu.lazyContent._attached))\n                    .subscribe({\n                    next: () => menu.lazyContent.detach(),\n                    // No matter whether the content got re-attached, reset the menu.\n                    complete: () => this._setIsMenuOpen(false),\n                });\n            }\n            else {\n                this._setIsMenuOpen(false);\n            }\n        }\n        else {\n            this._setIsMenuOpen(false);\n            if (menu.lazyContent) {\n                menu.lazyContent.detach();\n            }\n        }\n    }\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     */\n    _initMenu() {\n        this.menu.parentMenu = this.triggersSubmenu() ? this._parentMaterialMenu : undefined;\n        this.menu.direction = this.dir;\n        this._setMenuElevation();\n        this.menu.focusFirstItem(this._openedBy || 'program');\n        this._setIsMenuOpen(true);\n    }\n    /** Updates the menu elevation based on the amount of parent menus that it has. */\n    _setMenuElevation() {\n        if (this.menu.setElevation) {\n            let depth = 0;\n            let parentMenu = this.menu.parentMenu;\n            while (parentMenu) {\n                depth++;\n                parentMenu = parentMenu.parentMenu;\n            }\n            this.menu.setElevation(depth);\n        }\n    }\n    // set state rather than toggle to support triggers sharing a menu\n    _setIsMenuOpen(isOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n        if (this.triggersSubmenu()) {\n            this._menuItemInstance._setHighlighted(isOpen);\n        }\n    }\n    /**\n     * This method checks that a valid instance of MatMenu has been passed into\n     * matMenuTriggerFor. If not, an exception is thrown.\n     */\n    _checkMenu() {\n        if (!this.menu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuMissingError();\n        }\n    }\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     */\n    _createOverlay() {\n        if (!this._overlayRef) {\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy);\n            this._overlayRef = this._overlay.create(config);\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `MatMenuPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n        return this._overlayRef;\n    }\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._overlay\n                .position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withGrowAfterOpen()\n                .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n            backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n            panelClass: this.menu.overlayPanelClass,\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir,\n        });\n    }\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    _subscribeToPositions(position) {\n        if (this.menu.setPositionClasses) {\n            position.positionChanges.subscribe(change => {\n                const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n                this.menu.setPositionClasses(posX, posY);\n            });\n        }\n    }\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    _setPosition(positionStrategy) {\n        let [originX, originFallbackX] = this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n        let [overlayY, overlayFallbackY] = this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        let offsetY = 0;\n        if (this.triggersSubmenu()) {\n            // When the menu is a sub-menu, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n        }\n        else if (!this.menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n        positionStrategy.withPositions([\n            { originX, originY, overlayX, overlayY, offsetY },\n            { originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY },\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY,\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY,\n            },\n        ]);\n    }\n    /** Returns a stream that emits whenever an action that should close the menu occurs. */\n    _menuClosingActions() {\n        const backdrop = this._overlayRef.backdropClick();\n        const detachments = this._overlayRef.detachments();\n        const parentClose = this._parentMaterialMenu ? this._parentMaterialMenu.closed : of();\n        const hover = this._parentMaterialMenu\n            ? this._parentMaterialMenu._hovered().pipe(filter(active => active !== this._menuItemInstance), filter(() => this._menuOpen))\n            : of();\n        return merge(backdrop, parentClose, hover, detachments);\n    }\n    /** Handles mouse presses on the trigger. */\n    _handleMousedown(event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            // Since right or middle button clicks won't trigger the `click` event,\n            // we shouldn't consider the menu as opened by mouse in those cases.\n            this._openedBy = event.button === 0 ? 'mouse' : undefined;\n            // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n            // we should prevent focus from moving onto it via click to avoid the\n            // highlight from lingering on the menu item.\n            if (this.triggersSubmenu()) {\n                event.preventDefault();\n            }\n        }\n    }\n    /** Handles key presses on the trigger. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        // Pressing enter on the trigger will trigger the click handler later.\n        if (keyCode === ENTER || keyCode === SPACE) {\n            this._openedBy = 'keyboard';\n        }\n        if (this.triggersSubmenu() &&\n            ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n                (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this._openedBy = 'keyboard';\n            this.openMenu();\n        }\n    }\n    /** Handles click events on the trigger. */\n    _handleClick(event) {\n        if (this.triggersSubmenu()) {\n            // Stop event propagation to avoid closing the parent menu.\n            event.stopPropagation();\n            this.openMenu();\n        }\n        else {\n            this.toggleMenu();\n        }\n    }\n    /** Handles the cases where the user hovers over the trigger. */\n    _handleHover() {\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (!this.triggersSubmenu() || !this._parentMaterialMenu) {\n            return;\n        }\n        this._hoverSubscription = this._parentMaterialMenu\n            ._hovered()\n            // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n            // with different data and triggers), we have to delay it by a tick to ensure that\n            // it won't be closed immediately after it is opened.\n            .pipe(filter(active => active === this._menuItemInstance && !active.disabled), delay(0, asapScheduler))\n            .subscribe(() => {\n            this._openedBy = 'mouse';\n            // If the same menu is used between multiple triggers, it might still be animating\n            // while the new trigger tries to re-open it. Wait for the animation to finish\n            // before doing so. Also interrupt if the user moves to another item.\n            if (this.menu instanceof _MatMenuBase && this.menu._isAnimating) {\n                // We need the `delay(0)` here in order to avoid\n                // 'changed after checked' errors in some cases. See #12194.\n                this.menu._animationDone\n                    .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMaterialMenu._hovered()))\n                    .subscribe(() => this.openMenu());\n            }\n            else {\n                this.openMenu();\n            }\n        });\n    }\n    /** Gets the portal that should be attached to the overlay. */\n    _getPortal() {\n        // Note that we can avoid this check by keeping the portal on the menu panel.\n        // While it would be cleaner, we'd have to introduce another required method on\n        // `MatMenuPanel`, making it harder to consume.\n        if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\n            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n        }\n        return this._portal;\n    }\n}\n_MatMenuTriggerBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatMenuTriggerBase, deps: [{ token: i1$1.Overlay }, { token: i0.ElementRef }, { token: i0.ViewContainerRef }, { token: MAT_MENU_SCROLL_STRATEGY }, { token: MAT_MENU_PANEL, optional: true }, { token: MatMenuItem, optional: true, self: true }, { token: i3$1.Directionality, optional: true }, { token: i1.FocusMonitor }], target: i0.ɵɵFactoryTarget.Directive });\n_MatMenuTriggerBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _MatMenuTriggerBase, inputs: { _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"], menu: [\"matMenuTriggerFor\", \"menu\"], menuData: [\"matMenuTriggerData\", \"menuData\"], restoreFocus: [\"matMenuTriggerRestoreFocus\", \"restoreFocus\"] }, outputs: { menuOpened: \"menuOpened\", onMenuOpen: \"onMenuOpen\", menuClosed: \"menuClosed\", onMenuClose: \"onMenuClose\" }, host: { attributes: { \"aria-haspopup\": \"true\" }, listeners: { \"click\": \"_handleClick($event)\", \"mousedown\": \"_handleMousedown($event)\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.aria-expanded\": \"menuOpen || null\", \"attr.aria-controls\": \"menuOpen ? menu.panelId : null\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatMenuTriggerBase, decorators: [{\n            type: Directive,\n            args: [{\n                    host: {\n                        'aria-haspopup': 'true',\n                        '[attr.aria-expanded]': 'menuOpen || null',\n                        '[attr.aria-controls]': 'menuOpen ? menu.panelId : null',\n                        '(click)': '_handleClick($event)',\n                        '(mousedown)': '_handleMousedown($event)',\n                        '(keydown)': '_handleKeydown($event)',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i1$1.Overlay }, { type: i0.ElementRef }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_MENU_SCROLL_STRATEGY]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_MENU_PANEL]\n                    }, {\n                        type: Optional\n                    }] }, { type: MatMenuItem, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }] }, { type: i3$1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i1.FocusMonitor }];\n    }, propDecorators: { _deprecatedMatMenuTriggerFor: [{\n                type: Input,\n                args: ['mat-menu-trigger-for']\n            }], menu: [{\n                type: Input,\n                args: ['matMenuTriggerFor']\n            }], menuData: [{\n                type: Input,\n                args: ['matMenuTriggerData']\n            }], restoreFocus: [{\n                type: Input,\n                args: ['matMenuTriggerRestoreFocus']\n            }], menuOpened: [{\n                type: Output\n            }], onMenuOpen: [{\n                type: Output\n            }], menuClosed: [{\n                type: Output\n            }], onMenuClose: [{\n                type: Output\n            }] } });\n/** Directive applied to an element that should trigger a `mat-menu`. */\nclass MatMenuTrigger extends _MatMenuTriggerBase {\n}\nMatMenuTrigger.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuTrigger, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatMenuTrigger.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatMenuTrigger, selector: \"[mat-menu-trigger-for], [matMenuTriggerFor]\", host: { classAttribute: \"mat-menu-trigger\" }, exportAs: [\"matMenuTrigger\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuTrigger, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n                    host: {\n                        'class': 'mat-menu-trigger',\n                    },\n                    exportAs: 'matMenuTrigger',\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatMenuModule {\n}\nMatMenuModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatMenuModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuModule, declarations: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent], imports: [CommonModule, MatCommonModule, MatRippleModule, OverlayModule], exports: [CdkScrollableModule,\n        MatCommonModule,\n        MatMenu,\n        MatMenuItem,\n        MatMenuTrigger,\n        MatMenuContent] });\nMatMenuModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuModule, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[CommonModule, MatCommonModule, MatRippleModule, OverlayModule], CdkScrollableModule,\n        MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatCommonModule, MatRippleModule, OverlayModule],\n                    exports: [\n                        CdkScrollableModule,\n                        MatCommonModule,\n                        MatMenu,\n                        MatMenuItem,\n                        MatMenuTrigger,\n                        MatMenuContent,\n                    ],\n                    declarations: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent],\n                    providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MENU_CONTENT, MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY, MatMenu, MatMenuContent, MatMenuItem, MatMenuModule, MatMenuTrigger, _MatMenuBase, _MatMenuContentBase, _MatMenuTriggerBase, fadeInItems, matMenuAnimations, transformMenu };\n","import * as i7 from '@angular/cdk/overlay';\nimport { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport * as i8 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, EventEmitter, Optional, Inject, Self, Attribute, ViewChild, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport * as i2 from '@angular/material/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, MatOption, MAT_OPTGROUP, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport * as i6 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i5 from '@angular/cdk/a11y';\nimport { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, A } from '@angular/cdk/keycodes';\nimport * as i4 from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\nimport * as i3 from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * @docs-private\n */\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true })),\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0,\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            transform: 'scaleY(1)',\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            transform: 'scaleY(1)',\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 }))),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n/** The max height of the select's overlay panel. */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/** The panel's padding on the x-axis. */\nconst SELECT_PANEL_PADDING_X = 16;\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/** The height of the select items in `em` units. */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/** Injection token that determines the scroll handling while a select is open. */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/** @docs-private */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** Injection token that can be used to provide the default options the select module. */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/** @docs-private */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/** Change event object that is emitted when the select value has changed. */\nclass MatSelectChange {\n    constructor(\n    /** Reference to the select that emitted the change event. */\n    source, \n    /** Current value of the select that emitted the event. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n// Boilerplate for applying mixins to MatSelect.\n/** @docs-private */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(class {\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}))));\n/**\n * Injection token that can be used to reference instances of `MatSelectTrigger`. It serves as\n * alternative token to the actual `MatSelectTrigger` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SELECT_TRIGGER = new InjectionToken('MatSelectTrigger');\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSelectTrigger, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatSelectTrigger.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatSelectTrigger, selector: \"mat-select-trigger\", providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSelectTrigger, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-select-trigger',\n                    providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }],\n                }]\n        }] });\n/** Base class with all of the `MatSelect` functionality. */\nclass _MatSelectBase extends _MatSelectMixinBase {\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, _defaultOptions) {\n        var _a, _b, _c;\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._defaultOptions = _defaultOptions;\n        /** Whether or not the overlay panel is open. */\n        this._panelOpen = false;\n        /** Comparison function to specify which option is displayed. Defaults to object equality. */\n        this._compareWith = (o1, o2) => o1 === o2;\n        /** Unique id for this input. */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /** Current `ariar-labelledby` value for the select trigger. */\n        this._triggerAriaLabelledBy = null;\n        /** Emits whenever the component is destroyed. */\n        this._destroy = new Subject();\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when select has been touched` */\n        this._onTouched = () => { };\n        /** ID for the DOM node containing the select's value. */\n        this._valueId = `mat-select-value-${nextUniqueId++}`;\n        /** Emits when the panel element is finished transforming in. */\n        this._panelDoneAnimatingStream = new Subject();\n        this._overlayPanelClass = ((_a = this._defaultOptions) === null || _a === void 0 ? void 0 : _a.overlayPanelClass) || '';\n        this._focused = false;\n        /** A name for this control that can be used by `mat-form-field`. */\n        this.controlType = 'mat-select';\n        this._multiple = false;\n        this._disableOptionCentering = (_c = (_b = this._defaultOptions) === null || _b === void 0 ? void 0 : _b.disableOptionCentering) !== null && _c !== void 0 ? _c : false;\n        /** Aria label of the select. */\n        this.ariaLabel = '';\n        /** Combined stream of all of the child options' change events. */\n        this.optionSelectionChanges = defer(() => {\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n            }\n            return this._ngZone.onStable.pipe(take(1), switchMap(() => this.optionSelectionChanges));\n        });\n        /** Event emitted when the select panel has been toggled. */\n        this.openedChange = new EventEmitter();\n        /** Event emitted when the select has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the select has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the selected value has been changed by the user. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        // Note that we only want to set this when the defaults pass it in, otherwise it should\n        // stay as `undefined` so that it falls back to the default in the key manager.\n        if ((_defaultOptions === null || _defaultOptions === void 0 ? void 0 : _defaultOptions.typeaheadDebounceInterval) != null) {\n            this._typeaheadDebounceInterval = _defaultOptions.typeaheadDebounceInterval;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n    /** Whether the select is focused. */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /** Placeholder to be shown if no value has been selected. */\n    get placeholder() {\n        return this._placeholder;\n    }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /** Whether the component is required. */\n    get required() {\n        var _a, _b, _c, _d;\n        return (_d = (_a = this._required) !== null && _a !== void 0 ? _a : (_c = (_b = this.ngControl) === null || _b === void 0 ? void 0 : _b.control) === null || _c === void 0 ? void 0 : _c.hasValidator(Validators.required)) !== null && _d !== void 0 ? _d : false;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /** Whether the user should be allowed to select multiple options. */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        if (this._selectionModel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /** Whether to center the active option over the trigger. */\n    get disableOptionCentering() {\n        return this._disableOptionCentering;\n    }\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() {\n        return this._compareWith;\n    }\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /** Value of the select control. */\n    get value() {\n        return this._value;\n    }\n    set value(newValue) {\n        // Always re-assign an array, because it might have been mutated.\n        if (newValue !== this._value || (this._multiple && Array.isArray(newValue))) {\n            if (this.options) {\n                this._setSelectionByValue(newValue);\n            }\n            this._value = newValue;\n        }\n    }\n    /** Time to wait in milliseconds after the last keystroke before moving focus to an item. */\n    get typeaheadDebounceInterval() {\n        return this._typeaheadDebounceInterval;\n    }\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /** Unique id of the element. */\n    get id() {\n        return this._id;\n    }\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => this._panelDoneAnimating(this.panelOpen));\n    }\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n            event.added.forEach(option => option.select());\n            event.removed.forEach(option => option.deselect());\n        });\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n            this._resetOptions();\n            this._initializeSelection();\n        });\n    }\n    ngDoCheck() {\n        const newAriaLabelledby = this._getTriggerAriaLabelledby();\n        // We have to manage setting the `aria-labelledby` ourselves, because part of its value\n        // is computed as a result of a content query which can cause this binding to trigger a\n        // \"changed after checked\" error.\n        if (newAriaLabelledby !== this._triggerAriaLabelledBy) {\n            const element = this._elementRef.nativeElement;\n            this._triggerAriaLabelledBy = newAriaLabelledby;\n            if (newAriaLabelledby) {\n                element.setAttribute('aria-labelledby', newAriaLabelledby);\n            }\n            else {\n                element.removeAttribute('aria-labelledby');\n            }\n        }\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /** Toggles the overlay panel open or closed. */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /** Opens the overlay panel. */\n    open() {\n        if (this._canOpen()) {\n            this._panelOpen = true;\n            this._keyManager.withHorizontalOrientation(null);\n            this._highlightCorrectOption();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Closes the overlay panel and focuses the host element. */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /** Whether or not the overlay panel is open. */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /** The currently selected option. */\n    get selected() {\n        var _a, _b;\n        return this.multiple ? ((_a = this._selectionModel) === null || _a === void 0 ? void 0 : _a.selected) || [] : (_b = this._selectionModel) === null || _b === void 0 ? void 0 : _b.selected[0];\n    }\n    /** The value displayed in the trigger. */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /** Whether the element is in RTL mode. */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /** Handles all keydown events on the select. */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /** Handles keyboard events while the select is closed. */\n    _handleClosedKeydown(event) {\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW ||\n            keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW ||\n            keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if ((!manager.isTyping() && isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            const previouslySelectedOption = this.selected;\n            manager.onKeydown(event);\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(selectedOption.viewValue, 10000);\n            }\n        }\n    }\n    /** Handles keyboard events when the selected is open. */\n    _handleOpenKeydown(event) {\n        const manager = this._keyManager;\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const isTyping = manager.isTyping();\n        if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping &&\n            (keyCode === ENTER || keyCode === SPACE) &&\n            manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n            this.options.forEach(option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            });\n        }\n        else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple &&\n                isArrowKey &&\n                event.shiftKey &&\n                manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached() {\n        this._overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n            this._changeDetectorRef.detectChanges();\n            this._positioningSettled();\n        });\n    }\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /** Whether the select has a value. */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n            this.stateChanges.next();\n        });\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    _setSelectionByValue(value) {\n        this._selectionModel.selected.forEach(option => option.setInactiveStyles());\n        this._selectionModel.clear();\n        if (this.multiple && value) {\n            if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            value.forEach((currentValue) => this._selectValue(currentValue));\n            this._sortValues();\n        }\n        else {\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.updateActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.updateActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        const correspondingOption = this.options.find((option) => {\n            // Skip options that are already in the model. This allows us to handle cases\n            // where the same primitive value is selected multiple times.\n            if (this._selectionModel.isSelected(option)) {\n                return false;\n            }\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        });\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withHomeAndEnd()\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this.panelOpen) {\n                // Select the active item when tabbing away. This is consistent with how the native\n                // select behaves. Note that we only want to do this in single selection mode.\n                if (!this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            }\n        });\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this._panelOpen && this.panel) {\n                this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        });\n    }\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    _resetOptions() {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        });\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map(option => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n    /** Invoked when an option is clicked. */\n    _onSelect(option, isUserInput) {\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            if (this.value != null) {\n                this._propagateChanges(option.value);\n            }\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected\n                    ? this._selectionModel.select(option)\n                    : this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator\n                    ? this.sortComparator(a, b, options)\n                    : options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = this.selected.map(option => option.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(this._getChangeEvent(valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /** Whether the panel is allowed to open. */\n    _canOpen() {\n        var _a;\n        return !this._panelOpen && !this.disabled && ((_a = this.options) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    }\n    /** Focuses the select element. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Gets the aria-labelledby for the select panel. */\n    _getPanelAriaLabelledby() {\n        var _a;\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = (_a = this._parentFormField) === null || _a === void 0 ? void 0 : _a.getLabelId();\n        const labelExpression = labelId ? labelId + ' ' : '';\n        return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n    }\n    /** Determines the `aria-activedescendant` to be set on the host. */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /** Gets the aria-labelledby of the select component trigger. */\n    _getTriggerAriaLabelledby() {\n        var _a;\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = (_a = this._parentFormField) === null || _a === void 0 ? void 0 : _a.getLabelId();\n        let value = (labelId ? labelId + ' ' : '') + this._valueId;\n        if (this.ariaLabelledby) {\n            value += ' ' + this.ariaLabelledby;\n        }\n        return value;\n    }\n    /** Called when the overlay panel is done animating. */\n    _panelDoneAnimating(isOpen) {\n        this.openedChange.emit(isOpen);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty || (this._focused && !!this._placeholder);\n    }\n}\n_MatSelectBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatSelectBase, deps: [{ token: i1.ViewportRuler }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: i2.ErrorStateMatcher }, { token: i0.ElementRef }, { token: i3.Directionality, optional: true }, { token: i4.NgForm, optional: true }, { token: i4.FormGroupDirective, optional: true }, { token: MAT_FORM_FIELD, optional: true }, { token: i4.NgControl, optional: true, self: true }, { token: 'tabindex', attribute: true }, { token: MAT_SELECT_SCROLL_STRATEGY }, { token: i5.LiveAnnouncer }, { token: MAT_SELECT_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatSelectBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _MatSelectBase, inputs: { panelClass: \"panelClass\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", disableOptionCentering: \"disableOptionCentering\", compareWith: \"compareWith\", value: \"value\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", sortComparator: \"sortComparator\", id: \"id\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, viewQueries: [{ propertyName: \"trigger\", first: true, predicate: [\"trigger\"], descendants: true }, { propertyName: \"panel\", first: true, predicate: [\"panel\"], descendants: true }, { propertyName: \"_overlayDir\", first: true, predicate: CdkConnectedOverlay, descendants: true }], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatSelectBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i1.ViewportRuler }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: i2.ErrorStateMatcher }, { type: i0.ElementRef }, { type: i3.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i4.NgForm, decorators: [{\n                        type: Optional\n                    }] }, { type: i4.FormGroupDirective, decorators: [{\n                        type: Optional\n                    }] }, { type: i6.MatFormField, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_FORM_FIELD]\n                    }] }, { type: i4.NgControl, decorators: [{\n                        type: Self\n                    }, {\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['tabindex']\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_SELECT_SCROLL_STRATEGY]\n                    }] }, { type: i5.LiveAnnouncer }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_SELECT_CONFIG]\n                    }] }];\n    }, propDecorators: { trigger: [{\n                type: ViewChild,\n                args: ['trigger']\n            }], panel: [{\n                type: ViewChild,\n                args: ['panel']\n            }], _overlayDir: [{\n                type: ViewChild,\n                args: [CdkConnectedOverlay]\n            }], panelClass: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], multiple: [{\n                type: Input\n            }], disableOptionCentering: [{\n                type: Input\n            }], compareWith: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], errorStateMatcher: [{\n                type: Input\n            }], typeaheadDebounceInterval: [{\n                type: Input\n            }], sortComparator: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], openedChange: [{\n                type: Output\n            }], _openedStream: [{\n                type: Output,\n                args: ['opened']\n            }], _closedStream: [{\n                type: Output,\n                args: ['closed']\n            }], selectionChange: [{\n                type: Output\n            }], valueChange: [{\n                type: Output\n            }] } });\nclass MatSelect extends _MatSelectBase {\n    constructor() {\n        super(...arguments);\n        /** The scroll position of the overlay panel, calculated to center the selected option. */\n        this._scrollTop = 0;\n        /** The cached font-size of the trigger element. */\n        this._triggerFontSize = 0;\n        /** The value of the select panel's transform-origin property. */\n        this._transformOrigin = 'top';\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this._viewportRuler\n            .change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n            if (this.panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    open() {\n        if (super._canOpen()) {\n            super.open();\n            this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n            // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n            // `parseInt` ignores the trailing 'px' and converts this to a number.\n            this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n            this._calculateOverlayPosition();\n            // Set the font size on the panel element once it exists.\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n                if (this._triggerFontSize &&\n                    this._overlayDir.overlayRef &&\n                    this._overlayDir.overlayRef.overlayElement) {\n                    this._overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n        }\n    }\n    /** Scrolls the active option into view. */\n    _scrollOptionIntoView(index) {\n        const labelCount = _countGroupLabelsBeforeOption(index, this.options, this.optionGroups);\n        const itemHeight = this._getItemHeight();\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            this.panel.nativeElement.scrollTop = 0;\n        }\n        else {\n            this.panel.nativeElement.scrollTop = _getOptionScrollPosition((index + labelCount) * itemHeight, itemHeight, this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n        }\n    }\n    _positioningSettled() {\n        this._calculateOverlayOffsetX();\n        this.panel.nativeElement.scrollTop = this._scrollTop;\n    }\n    _panelDoneAnimating(isOpen) {\n        if (this.panelOpen) {\n            this._scrollTop = 0;\n        }\n        else {\n            this._overlayDir.offsetX = 0;\n            this._changeDetectorRef.markForCheck();\n        }\n        super._panelDoneAnimating(isOpen);\n    }\n    _getChangeEvent(value) {\n        return new MatSelectChange(this, value);\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    _calculateOverlayOffsetX() {\n        const overlayRect = this._overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        const paddingWidth = this.multiple\n            ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X\n            : SELECT_PANEL_PADDING_X * 2;\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else if (this.disableOptionCentering) {\n            offsetX = SELECT_PANEL_PADDING_X;\n        }\n        else {\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this._overlayDir.offsetX = Math.round(offsetX);\n        this._overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this.disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            let partialItemHeight = itemHeight - ((this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight);\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    _calculateOverlayPosition() {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset;\n        if (this.empty) {\n            selectedOptionOffset = 0;\n        }\n        else {\n            selectedOptionOffset = Math.max(this.options.toArray().indexOf(this._selectionModel.selected[0]), 0);\n        }\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /** Sets the transform origin point based on the selected option. */\n    _getOriginBasedOnOption() {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /** Calculates the height of the select's options. */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n}\nMatSelect.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSelect, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatSelect.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatSelect, selector: \"mat-select\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, host: { attributes: { \"role\": \"combobox\", \"aria-autocomplete\": \"none\", \"aria-haspopup\": \"true\" }, listeners: { \"keydown\": \"_handleKeydown($event)\", \"focus\": \"_onFocus()\", \"blur\": \"_onBlur()\" }, properties: { \"attr.id\": \"id\", \"attr.tabindex\": \"tabIndex\", \"attr.aria-controls\": \"panelOpen ? id + \\\"-panel\\\" : null\", \"attr.aria-expanded\": \"panelOpen\", \"attr.aria-label\": \"ariaLabel || null\", \"attr.aria-required\": \"required.toString()\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-invalid\": \"errorState\", \"attr.aria-describedby\": \"_ariaDescribedby || null\", \"attr.aria-activedescendant\": \"_getAriaActiveDescendant()\", \"class.mat-select-disabled\": \"disabled\", \"class.mat-select-invalid\": \"errorState\", \"class.mat-select-required\": \"required\", \"class.mat-select-empty\": \"empty\", \"class.mat-select-multiple\": \"multiple\" }, classAttribute: \"mat-select\" }, providers: [\n        { provide: MatFormFieldControl, useExisting: MatSelect },\n        { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect },\n    ], queries: [{ propertyName: \"customTrigger\", first: true, predicate: MAT_SELECT_TRIGGER, descendants: true }, { propertyName: \"options\", predicate: MatOption, descendants: true }, { propertyName: \"optionGroups\", predicate: MAT_OPTGROUP, descendants: true }], exportAs: [\"matSelect\"], usesInheritance: true, ngImport: i0, template: \"<!--\\n Note that the select trigger element specifies `aria-owns` pointing to the listbox overlay.\\n While aria-owns is not required for the ARIA 1.2 `role=\\\"combobox\\\"` interaction pattern,\\n it fixes an issue with VoiceOver when the select appears inside of an `aria-model=\\\"true\\\"`\\n element (e.g. a dialog). Without this `aria-owns`, the `aria-modal` on a dialog prevents\\n VoiceOver from \\\"seeing\\\" the select's listbox overlay for aria-activedescendant.\\n Using `aria-owns` re-parents the select overlay so that it works again.\\n See https://github.com/angular/components/issues/20694\\n-->\\n<div cdk-overlay-origin\\n     [attr.aria-owns]=\\\"panelOpen ? id + '-panel' : null\\\"\\n     class=\\\"mat-select-trigger\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\" [attr.id]=\\\"_valueId\\\">\\n    <span class=\\\"mat-select-placeholder mat-select-min-line\\\" *ngSwitchCase=\\\"true\\\">{{placeholder}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span class=\\\"mat-select-min-line\\\" *ngSwitchDefault>{{triggerValue}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width!\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      role=\\\"listbox\\\"\\n      tabindex=\\\"-1\\\"\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [attr.id]=\\\"id + '-panel'\\\"\\n      [attr.aria-multiselectable]=\\\"multiple\\\"\\n      [attr.aria-label]=\\\"ariaLabel || null\\\"\\n      [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}.mat-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;opacity:0}\\n\"], directives: [{ type: i7.CdkOverlayOrigin, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"] }, { type: i8.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i8.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i8.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }, { type: i7.CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: [\"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayPositionStrategy\", \"cdkConnectedOverlayOffsetX\", \"cdkConnectedOverlayOffsetY\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayHeight\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayMinHeight\", \"cdkConnectedOverlayBackdropClass\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayViewportMargin\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayDisableClose\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayLockPosition\", \"cdkConnectedOverlayFlexibleDimensions\", \"cdkConnectedOverlayGrowAfterOpen\", \"cdkConnectedOverlayPush\"], outputs: [\"backdropClick\", \"positionChange\", \"attach\", \"detach\", \"overlayKeydown\", \"overlayOutsideClick\"], exportAs: [\"cdkConnectedOverlay\"] }, { type: i8.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], animations: [matSelectAnimations.transformPanelWrap, matSelectAnimations.transformPanel], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSelect, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-select', exportAs: 'matSelect', inputs: ['disabled', 'disableRipple', 'tabIndex'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'role': 'combobox',\n                        'aria-autocomplete': 'none',\n                        // TODO(crisbeto): the value for aria-haspopup should be `listbox`, but currently it's difficult\n                        // to sync into Google, because of an outdated automated a11y check which flags it as an invalid\n                        // value. At some point we should try to switch it back to being `listbox`.\n                        'aria-haspopup': 'true',\n                        'class': 'mat-select',\n                        '[attr.id]': 'id',\n                        '[attr.tabindex]': 'tabIndex',\n                        '[attr.aria-controls]': 'panelOpen ? id + \"-panel\" : null',\n                        '[attr.aria-expanded]': 'panelOpen',\n                        '[attr.aria-label]': 'ariaLabel || null',\n                        '[attr.aria-required]': 'required.toString()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-invalid]': 'errorState',\n                        '[attr.aria-describedby]': '_ariaDescribedby || null',\n                        '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                        '[class.mat-select-disabled]': 'disabled',\n                        '[class.mat-select-invalid]': 'errorState',\n                        '[class.mat-select-required]': 'required',\n                        '[class.mat-select-empty]': 'empty',\n                        '[class.mat-select-multiple]': 'multiple',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(focus)': '_onFocus()',\n                        '(blur)': '_onBlur()',\n                    }, animations: [matSelectAnimations.transformPanelWrap, matSelectAnimations.transformPanel], providers: [\n                        { provide: MatFormFieldControl, useExisting: MatSelect },\n                        { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect },\n                    ], template: \"<!--\\n Note that the select trigger element specifies `aria-owns` pointing to the listbox overlay.\\n While aria-owns is not required for the ARIA 1.2 `role=\\\"combobox\\\"` interaction pattern,\\n it fixes an issue with VoiceOver when the select appears inside of an `aria-model=\\\"true\\\"`\\n element (e.g. a dialog). Without this `aria-owns`, the `aria-modal` on a dialog prevents\\n VoiceOver from \\\"seeing\\\" the select's listbox overlay for aria-activedescendant.\\n Using `aria-owns` re-parents the select overlay so that it works again.\\n See https://github.com/angular/components/issues/20694\\n-->\\n<div cdk-overlay-origin\\n     [attr.aria-owns]=\\\"panelOpen ? id + '-panel' : null\\\"\\n     class=\\\"mat-select-trigger\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\" [attr.id]=\\\"_valueId\\\">\\n    <span class=\\\"mat-select-placeholder mat-select-min-line\\\" *ngSwitchCase=\\\"true\\\">{{placeholder}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span class=\\\"mat-select-min-line\\\" *ngSwitchDefault>{{triggerValue}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width!\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      role=\\\"listbox\\\"\\n      tabindex=\\\"-1\\\"\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [attr.id]=\\\"id + '-panel'\\\"\\n      [attr.aria-multiselectable]=\\\"multiple\\\"\\n      [attr.aria-label]=\\\"ariaLabel || null\\\"\\n      [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}.mat-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;opacity:0}\\n\"] }]\n        }], propDecorators: { options: [{\n                type: ContentChildren,\n                args: [MatOption, { descendants: true }]\n            }], optionGroups: [{\n                type: ContentChildren,\n                args: [MAT_OPTGROUP, { descendants: true }]\n            }], customTrigger: [{\n                type: ContentChild,\n                args: [MAT_SELECT_TRIGGER]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSelectModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatSelectModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSelectModule, declarations: [MatSelect, MatSelectTrigger], imports: [CommonModule, OverlayModule, MatOptionModule, MatCommonModule], exports: [CdkScrollableModule,\n        MatFormFieldModule,\n        MatSelect,\n        MatSelectTrigger,\n        MatOptionModule,\n        MatCommonModule] });\nMatSelectModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSelectModule, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[CommonModule, OverlayModule, MatOptionModule, MatCommonModule], CdkScrollableModule,\n        MatFormFieldModule,\n        MatOptionModule,\n        MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSelectModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, OverlayModule, MatOptionModule, MatCommonModule],\n                    exports: [\n                        CdkScrollableModule,\n                        MatFormFieldModule,\n                        MatSelect,\n                        MatSelectTrigger,\n                        MatOptionModule,\n                        MatCommonModule,\n                    ],\n                    declarations: [MatSelect, MatSelectTrigger],\n                    providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_SELECT_TRIGGER, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, _MatSelectBase, matSelectAnimations };\n","import * as i3 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollable, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i5 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, EventEmitter, Optional, Input, Output, QueryList, ContentChildren, ContentChild, ViewChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, map, mapTo, takeUntil, distinctUntilChanged, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i2 from '@angular/cdk/a11y';\nimport * as i4 from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material drawers.\n * @docs-private\n */\nconst matDrawerAnimations = {\n    /** Animation that slides a drawer in and out. */\n    transformDrawer: trigger('transform', [\n        // We remove the `transform` here completely, rather than setting it to zero, because:\n        // 1. Having a transform can cause elements with ripples or an animated\n        //    transform to shift around in Chrome with an RTL layout (see #10023).\n        // 2. 3d transforms causes text to appear blurry on IE and Edge.\n        state('open, open-instant', style({\n            'transform': 'none',\n            'visibility': 'visible',\n        })),\n        state('void', style({\n            // Avoids the shadow showing up when closed in SSR.\n            'box-shadow': 'none',\n            'visibility': 'hidden',\n        })),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')),\n    ]),\n};\n\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * @docs-private\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/** Configures whether drawers should use auto sizing by default. */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * @docs-private\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/** @docs-private */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n        super(elementRef, scrollDispatcher, ngZone);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n    }\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n}\nMatDrawerContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDrawerContent, deps: [{ token: i0.ChangeDetectorRef }, { token: forwardRef(() => MatDrawerContainer) }, { token: i0.ElementRef }, { token: i1.ScrollDispatcher }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nMatDrawerContent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDrawerContent, selector: \"mat-drawer-content\", host: { properties: { \"style.margin-left.px\": \"_container._contentMargins.left\", \"style.margin-right.px\": \"_container._contentMargins.right\" }, classAttribute: \"mat-drawer-content\" }, usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDrawerContent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-drawer-content',\n                    template: '<ng-content></ng-content>',\n                    host: {\n                        'class': 'mat-drawer-content',\n                        '[style.margin-left.px]': '_container._contentMargins.left',\n                        '[style.margin-right.px]': '_container._contentMargins.right',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: MatDrawerContainer, decorators: [{\n                        type: Inject,\n                        args: [forwardRef(() => MatDrawerContainer)]\n                    }] }, { type: i0.ElementRef }, { type: i1.ScrollDispatcher }, { type: i0.NgZone }];\n    } });\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _interactivityChecker, _doc, _container) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._interactivityChecker = _interactivityChecker;\n        this._doc = _doc;\n        this._container = _container;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /** Whether the drawer is initialized. Used for disabling the initial animation. */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        this._opened = false;\n        /** Emits whenever the drawer has started animating. */\n        this._animationStarted = new Subject();\n        /** Emits whenever the drawer is done animating. */\n        this._animationEnd = new Subject();\n        /** Current state of the sidenav animation. */\n        this._animationState = 'void';\n        /** Event emitted when the drawer open state is changed. */\n        this.openedChange =\n            // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n            new EventEmitter(/* isAsync */ true);\n        /** Event emitted when the drawer has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the drawer has started opening. */\n        this.openedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState.indexOf('open') === 0), mapTo(undefined));\n        /** Event emitted when the drawer has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the drawer has started closing. */\n        this.closedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState === 'void'), mapTo(undefined));\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Event emitted when the drawer's position changes. */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this.openedChange.subscribe((opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement;\n                }\n                this._takeFocus();\n            }\n            else if (this._isFocusWithinDrawer()) {\n                this._restoreFocus(this._openedVia || 'program');\n            }\n        });\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular(() => {\n            fromEvent(this._elementRef.nativeElement, 'keydown')\n                .pipe(filter(event => {\n                return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n            }), takeUntil(this._destroyed))\n                .subscribe(event => this._ngZone.run(() => {\n                this.close();\n                event.stopPropagation();\n                event.preventDefault();\n            }));\n        });\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._animationEnd\n            .pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))\n            .subscribe((event) => {\n            const { fromState, toState } = event;\n            if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n                (toState === 'void' && fromState.indexOf('open') === 0)) {\n                this.openedChange.emit(this._opened);\n            }\n        });\n    }\n    /** The side that the drawer is attached to. */\n    get position() {\n        return this._position;\n    }\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value != this._position) {\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    /** Mode of the drawer; one of 'over', 'push' or 'side'. */\n    get mode() {\n        return this._mode;\n    }\n    set mode(value) {\n        this._mode = value;\n        this._updateFocusTrapState();\n        this._modeChanged.next();\n    }\n    /** Whether the drawer can be closed with the escape key or by clicking on the backdrop. */\n    get disableClose() {\n        return this._disableClose;\n    }\n    set disableClose(value) {\n        this._disableClose = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or AutoFocusTarget\n     * instead.\n     */\n    get autoFocus() {\n        const value = this._autoFocus;\n        // Note that usually we don't allow autoFocus to be set to `first-tabbable` in `side` mode,\n        // because we don't know how the sidenav is being used, but in some cases it still makes\n        // sense to do it. The consumer can explicitly set `autoFocus`.\n        if (value == null) {\n            if (this.mode === 'side') {\n                return 'dialog';\n            }\n            else {\n                return 'first-tabbable';\n            }\n        }\n        return value;\n    }\n    set autoFocus(value) {\n        if (value === 'true' || value === 'false' || value == null) {\n            value = coerceBooleanProperty(value);\n        }\n        this._autoFocus = value;\n    }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     */\n    get opened() {\n        return this._opened;\n    }\n    set opened(value) {\n        this.toggle(coerceBooleanProperty(value));\n    }\n    /**\n     * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n     * attribute to forcefully focus it. The attribute is removed after focus is moved.\n     * @param element The element to focus.\n     */\n    _forceFocus(element, options) {\n        if (!this._interactivityChecker.isFocusable(element)) {\n            element.tabIndex = -1;\n            // The tabindex attribute should be removed to avoid navigating to that element again\n            this._ngZone.runOutsideAngular(() => {\n                element.addEventListener('blur', () => element.removeAttribute('tabindex'));\n                element.addEventListener('mousedown', () => element.removeAttribute('tabindex'));\n            });\n        }\n        element.focus(options);\n    }\n    /**\n     * Focuses the first element that matches the given selector within the focus trap.\n     * @param selector The CSS selector for the element to set focus to.\n     */\n    _focusByCssSelector(selector, options) {\n        let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n        if (elementToFocus) {\n            this._forceFocus(elementToFocus, options);\n        }\n    }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     */\n    _takeFocus() {\n        if (!this._focusTrap) {\n            return;\n        }\n        const element = this._elementRef.nativeElement;\n        // When autoFocus is not on the sidenav, if the element cannot be focused or does\n        // not exist, focus the sidenav itself so the keyboard navigation still works.\n        // We need to check that `focus` is a function due to Universal.\n        switch (this.autoFocus) {\n            case false:\n            case 'dialog':\n                return;\n            case true:\n            case 'first-tabbable':\n                this._focusTrap.focusInitialElementWhenReady().then(hasMovedFocus => {\n                    if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n                        element.focus();\n                    }\n                });\n                break;\n            case 'first-heading':\n                this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n                break;\n            default:\n                this._focusByCssSelector(this.autoFocus);\n                break;\n        }\n    }\n    /**\n     * Restores focus to the element that was originally focused when the drawer opened.\n     * If no element was focused at that time, the focus will be restored to the drawer.\n     */\n    _restoreFocus(focusOrigin) {\n        if (this.autoFocus === 'dialog') {\n            return;\n        }\n        if (this._elementFocusedBeforeDrawerWasOpened) {\n            this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, focusOrigin);\n        }\n        else {\n            this._elementRef.nativeElement.blur();\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n    }\n    /** Whether focus is currently within the drawer. */\n    _isFocusWithinDrawer() {\n        var _a;\n        const activeEl = (_a = this._doc) === null || _a === void 0 ? void 0 : _a.activeElement;\n        return !!activeEl && this._elementRef.nativeElement.contains(activeEl);\n    }\n    ngAfterContentInit() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._updateFocusTrapState();\n    }\n    ngAfterContentChecked() {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    }\n    ngOnDestroy() {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /** Close the drawer. */\n    close() {\n        return this.toggle(false);\n    }\n    /** Closes the drawer with context that the backdrop was clicked. */\n    _closeViaBackdropClick() {\n        // If the drawer is closed upon a backdrop click, we always want to restore focus. We\n        // don't need to check whether focus is currently in the drawer, as clicking on the\n        // backdrop causes blurs the active element.\n        return this._setOpen(/* isOpen */ false, /* restoreFocus */ true, 'mouse');\n    }\n    /**\n     * Toggle this drawer.\n     * @param isOpen Whether the drawer should be open.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    toggle(isOpen = !this.opened, openedVia) {\n        // If the focus is currently inside the drawer content and we are closing the drawer,\n        // restore the focus to the initially focused element (when the drawer opened).\n        if (isOpen && openedVia) {\n            this._openedVia = openedVia;\n        }\n        const result = this._setOpen(isOpen, \n        /* restoreFocus */ !isOpen && this._isFocusWithinDrawer(), this._openedVia || 'program');\n        if (!isOpen) {\n            this._openedVia = null;\n        }\n        return result;\n    }\n    /**\n     * Toggles the opened state of the drawer.\n     * @param isOpen Whether the drawer should open or close.\n     * @param restoreFocus Whether focus should be restored on close.\n     * @param focusOrigin Origin to use when restoring focus.\n     */\n    _setOpen(isOpen, restoreFocus, focusOrigin) {\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n        }\n        else {\n            this._animationState = 'void';\n            if (restoreFocus) {\n                this._restoreFocus(focusOrigin);\n            }\n        }\n        this._updateFocusTrapState();\n        return new Promise(resolve => {\n            this.openedChange.pipe(take(1)).subscribe(open => resolve(open ? 'open' : 'close'));\n        });\n    }\n    _getWidth() {\n        return this._elementRef.nativeElement ? this._elementRef.nativeElement.offsetWidth || 0 : 0;\n    }\n    /** Updates the enabled state of the focus trap. */\n    _updateFocusTrapState() {\n        if (this._focusTrap) {\n            // The focus trap is only enabled when the drawer is open in any mode other than side.\n            this._focusTrap.enabled = this.opened && this.mode !== 'side';\n        }\n    }\n}\nMatDrawer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDrawer, deps: [{ token: i0.ElementRef }, { token: i2.FocusTrapFactory }, { token: i2.FocusMonitor }, { token: i3.Platform }, { token: i0.NgZone }, { token: i2.InteractivityChecker }, { token: DOCUMENT, optional: true }, { token: MAT_DRAWER_CONTAINER, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatDrawer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDrawer, selector: \"mat-drawer\", inputs: { position: \"position\", mode: \"mode\", disableClose: \"disableClose\", autoFocus: \"autoFocus\", opened: \"opened\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", openedStart: \"openedStart\", _closedStream: \"closed\", closedStart: \"closedStart\", onPositionChanged: \"positionChanged\" }, host: { attributes: { \"tabIndex\": \"-1\" }, listeners: { \"@transform.start\": \"_animationStarted.next($event)\", \"@transform.done\": \"_animationEnd.next($event)\" }, properties: { \"attr.align\": \"null\", \"class.mat-drawer-end\": \"position === \\\"end\\\"\", \"class.mat-drawer-over\": \"mode === \\\"over\\\"\", \"class.mat-drawer-push\": \"mode === \\\"push\\\"\", \"class.mat-drawer-side\": \"mode === \\\"side\\\"\", \"class.mat-drawer-opened\": \"opened\", \"@transform\": \"_animationState\" }, classAttribute: \"mat-drawer\" }, exportAs: [\"matDrawer\"], ngImport: i0, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\", directives: [{ type: i1.CdkScrollable, selector: \"[cdk-scrollable], [cdkScrollable]\" }], animations: [matDrawerAnimations.transformDrawer], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDrawer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-drawer', exportAs: 'matDrawer', animations: [matDrawerAnimations.transformDrawer], host: {\n                        'class': 'mat-drawer',\n                        // must prevent the browser from aligning text based on value\n                        '[attr.align]': 'null',\n                        '[class.mat-drawer-end]': 'position === \"end\"',\n                        '[class.mat-drawer-over]': 'mode === \"over\"',\n                        '[class.mat-drawer-push]': 'mode === \"push\"',\n                        '[class.mat-drawer-side]': 'mode === \"side\"',\n                        '[class.mat-drawer-opened]': 'opened',\n                        'tabIndex': '-1',\n                        '[@transform]': '_animationState',\n                        '(@transform.start)': '_animationStarted.next($event)',\n                        '(@transform.done)': '_animationEnd.next($event)',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\" }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i2.FocusTrapFactory }, { type: i2.FocusMonitor }, { type: i3.Platform }, { type: i0.NgZone }, { type: i2.InteractivityChecker }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: MatDrawerContainer, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DRAWER_CONTAINER]\n                    }] }];\n    }, propDecorators: { position: [{\n                type: Input\n            }], mode: [{\n                type: Input\n            }], disableClose: [{\n                type: Input\n            }], autoFocus: [{\n                type: Input\n            }], opened: [{\n                type: Input\n            }], openedChange: [{\n                type: Output\n            }], _openedStream: [{\n                type: Output,\n                args: ['opened']\n            }], openedStart: [{\n                type: Output\n            }], _closedStream: [{\n                type: Output,\n                args: ['closed']\n            }], closedStart: [{\n                type: Output\n            }], onPositionChanged: [{\n                type: Output,\n                args: ['positionChanged']\n            }] } });\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** Drawers that belong to this container. */\n        this._drawers = new QueryList();\n        /** Event emitted when the drawer backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Emits on every ngDoCheck. Used for debouncing reflows. */\n        this._doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._contentMargins = { left: null, right: null };\n        this._contentMarginChanges = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                this._validateDrawers();\n                this.updateContentMargins();\n            });\n        }\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        viewportRuler\n            .change()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.updateContentMargins());\n        this._autosize = defaultAutosize;\n    }\n    /** The drawer child with the `start` position. */\n    get start() {\n        return this._start;\n    }\n    /** The drawer child with the `end` position. */\n    get end() {\n        return this._end;\n    }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     */\n    get autosize() {\n        return this._autosize;\n    }\n    set autosize(value) {\n        this._autosize = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     */\n    get hasBackdrop() {\n        if (this._backdropOverride == null) {\n            return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /** Reference to the CdkScrollable instance that wraps the scrollable content. */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    ngAfterContentInit() {\n        this._allDrawers.changes\n            .pipe(startWith(this._allDrawers), takeUntil(this._destroyed))\n            .subscribe((drawer) => {\n            this._drawers.reset(drawer.filter(item => !item._container || item._container === this));\n            this._drawers.notifyOnChanges();\n        });\n        this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n            this._validateDrawers();\n            this._drawers.forEach((drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            });\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this.updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n        // Avoid hitting the NgZone through the debounce timeout.\n        this._ngZone.runOutsideAngular(() => {\n            this._doCheckSubject\n                .pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n            takeUntil(this._destroyed))\n                .subscribe(() => this.updateContentMargins());\n        });\n    }\n    ngOnDestroy() {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._drawers.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Calls `open` of both start and end drawers */\n    open() {\n        this._drawers.forEach(drawer => drawer.open());\n    }\n    /** Calls `close` of both start and end drawers */\n    close() {\n        this._drawers.forEach(drawer => drawer.close());\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     */\n    updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        let left = 0;\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._getWidth();\n            }\n            else if (this._left.mode == 'push') {\n                const width = this._left._getWidth();\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._getWidth();\n            }\n            else if (this._right.mode == 'push') {\n                const width = this._right._getWidth();\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || null;\n        right = right || null;\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins));\n        }\n    }\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted\n            .pipe(filter((event) => event.fromState !== event.toState), takeUntil(this._drawers.changes))\n            .subscribe((event) => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n                this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (drawer.mode !== 'side') {\n            drawer.openedChange\n                .pipe(takeUntil(this._drawers.changes))\n                .subscribe(() => this._setContainerClass(drawer.opened));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     */\n    _watchDrawerPosition(drawer) {\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n            this._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(() => {\n                this._validateDrawers();\n            });\n        });\n    }\n    /** Subscribes to changes in drawer mode so we can run change detection. */\n    _watchDrawerMode(drawer) {\n        if (drawer) {\n            drawer._modeChanged\n                .pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe(() => {\n                this.updateContentMargins();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /** Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element. */\n    _setContainerClass(isAdd) {\n        const classList = this._element.nativeElement.classList;\n        const className = 'mat-drawer-container-has-open';\n        if (isAdd) {\n            classList.add(className);\n        }\n        else {\n            classList.remove(className);\n        }\n    }\n    /** Validate the state of the drawer children components. */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach(drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        });\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /** Whether the container is being pushed to the side by one of the drawers. */\n    _isPushed() {\n        return ((this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over'));\n    }\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawersViaBackdrop();\n    }\n    _closeModalDrawersViaBackdrop() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter(drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer))\n            .forEach(drawer => drawer._closeViaBackdropClick());\n    }\n    _isShowingBackdrop() {\n        return ((this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end)));\n    }\n    _canHaveBackdrop(drawer) {\n        return drawer.mode !== 'side' || !!this._backdropOverride;\n    }\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n}\nMatDrawerContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDrawerContainer, deps: [{ token: i4.Directionality, optional: true }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1.ViewportRuler }, { token: MAT_DRAWER_DEFAULT_AUTOSIZE }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatDrawerContainer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDrawerContainer, selector: \"mat-drawer-container\", inputs: { autosize: \"autosize\", hasBackdrop: \"hasBackdrop\" }, outputs: { backdropClick: \"backdropClick\" }, host: { properties: { \"class.mat-drawer-container-explicit-backdrop\": \"_backdropOverride\" }, classAttribute: \"mat-drawer-container\" }, providers: [\n        {\n            provide: MAT_DRAWER_CONTAINER,\n            useExisting: MatDrawerContainer,\n        },\n    ], queries: [{ propertyName: \"_content\", first: true, predicate: MatDrawerContent, descendants: true }, { propertyName: \"_allDrawers\", predicate: MatDrawer, descendants: true }], viewQueries: [{ propertyName: \"_userContent\", first: true, predicate: MatDrawerContent, descendants: true }], exportAs: [\"matDrawerContainer\"], ngImport: i0, template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"], components: [{ type: MatDrawerContent, selector: \"mat-drawer-content\" }], directives: [{ type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDrawerContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-drawer-container', exportAs: 'matDrawerContainer', host: {\n                        'class': 'mat-drawer-container',\n                        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [\n                        {\n                            provide: MAT_DRAWER_CONTAINER,\n                            useExisting: MatDrawerContainer,\n                        },\n                    ], template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i4.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1.ViewportRuler }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { _allDrawers: [{\n                type: ContentChildren,\n                args: [MatDrawer, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }], _content: [{\n                type: ContentChild,\n                args: [MatDrawerContent]\n            }], _userContent: [{\n                type: ViewChild,\n                args: [MatDrawerContent]\n            }], autosize: [{\n                type: Input\n            }], hasBackdrop: [{\n                type: Input\n            }], backdropClick: [{\n                type: Output\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSidenavContent extends MatDrawerContent {\n    constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n        super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n    }\n}\nMatSidenavContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenavContent, deps: [{ token: i0.ChangeDetectorRef }, { token: forwardRef(() => MatSidenavContainer) }, { token: i0.ElementRef }, { token: i1.ScrollDispatcher }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nMatSidenavContent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatSidenavContent, selector: \"mat-sidenav-content\", host: { properties: { \"style.margin-left.px\": \"_container._contentMargins.left\", \"style.margin-right.px\": \"_container._contentMargins.right\" }, classAttribute: \"mat-drawer-content mat-sidenav-content\" }, usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenavContent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-sidenav-content',\n                    template: '<ng-content></ng-content>',\n                    host: {\n                        'class': 'mat-drawer-content mat-sidenav-content',\n                        '[style.margin-left.px]': '_container._contentMargins.left',\n                        '[style.margin-right.px]': '_container._contentMargins.right',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: MatSidenavContainer, decorators: [{\n                        type: Inject,\n                        args: [forwardRef(() => MatSidenavContainer)]\n                    }] }, { type: i0.ElementRef }, { type: i1.ScrollDispatcher }, { type: i0.NgZone }];\n    } });\nclass MatSidenav extends MatDrawer {\n    constructor() {\n        super(...arguments);\n        this._fixedInViewport = false;\n        this._fixedTopGap = 0;\n        this._fixedBottomGap = 0;\n    }\n    /** Whether the sidenav is fixed in the viewport. */\n    get fixedInViewport() {\n        return this._fixedInViewport;\n    }\n    set fixedInViewport(value) {\n        this._fixedInViewport = coerceBooleanProperty(value);\n    }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     */\n    get fixedTopGap() {\n        return this._fixedTopGap;\n    }\n    set fixedTopGap(value) {\n        this._fixedTopGap = coerceNumberProperty(value);\n    }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     */\n    get fixedBottomGap() {\n        return this._fixedBottomGap;\n    }\n    set fixedBottomGap(value) {\n        this._fixedBottomGap = coerceNumberProperty(value);\n    }\n}\nMatSidenav.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenav, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatSidenav.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatSidenav, selector: \"mat-sidenav\", inputs: { fixedInViewport: \"fixedInViewport\", fixedTopGap: \"fixedTopGap\", fixedBottomGap: \"fixedBottomGap\" }, host: { attributes: { \"tabIndex\": \"-1\" }, properties: { \"attr.align\": \"null\", \"class.mat-drawer-end\": \"position === \\\"end\\\"\", \"class.mat-drawer-over\": \"mode === \\\"over\\\"\", \"class.mat-drawer-push\": \"mode === \\\"push\\\"\", \"class.mat-drawer-side\": \"mode === \\\"side\\\"\", \"class.mat-drawer-opened\": \"opened\", \"class.mat-sidenav-fixed\": \"fixedInViewport\", \"style.top.px\": \"fixedInViewport ? fixedTopGap : null\", \"style.bottom.px\": \"fixedInViewport ? fixedBottomGap : null\" }, classAttribute: \"mat-drawer mat-sidenav\" }, exportAs: [\"matSidenav\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\", directives: [{ type: i1.CdkScrollable, selector: \"[cdk-scrollable], [cdkScrollable]\" }], animations: [matDrawerAnimations.transformDrawer], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenav, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-sidenav', exportAs: 'matSidenav', animations: [matDrawerAnimations.transformDrawer], host: {\n                        'class': 'mat-drawer mat-sidenav',\n                        'tabIndex': '-1',\n                        // must prevent the browser from aligning text based on value\n                        '[attr.align]': 'null',\n                        '[class.mat-drawer-end]': 'position === \"end\"',\n                        '[class.mat-drawer-over]': 'mode === \"over\"',\n                        '[class.mat-drawer-push]': 'mode === \"push\"',\n                        '[class.mat-drawer-side]': 'mode === \"side\"',\n                        '[class.mat-drawer-opened]': 'opened',\n                        '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                        '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                        '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\" }]\n        }], propDecorators: { fixedInViewport: [{\n                type: Input\n            }], fixedTopGap: [{\n                type: Input\n            }], fixedBottomGap: [{\n                type: Input\n            }] } });\nclass MatSidenavContainer extends MatDrawerContainer {\n}\nMatSidenavContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenavContainer, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatSidenavContainer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatSidenavContainer, selector: \"mat-sidenav-container\", host: { properties: { \"class.mat-drawer-container-explicit-backdrop\": \"_backdropOverride\" }, classAttribute: \"mat-drawer-container mat-sidenav-container\" }, providers: [\n        {\n            provide: MAT_DRAWER_CONTAINER,\n            useExisting: MatSidenavContainer,\n        },\n    ], queries: [{ propertyName: \"_content\", first: true, predicate: MatSidenavContent, descendants: true }, { propertyName: \"_allDrawers\", predicate: MatSidenav, descendants: true }], exportAs: [\"matSidenavContainer\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable>\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"], components: [{ type: MatSidenavContent, selector: \"mat-sidenav-content\" }], directives: [{ type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.CdkScrollable, selector: \"[cdk-scrollable], [cdkScrollable]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenavContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-sidenav-container', exportAs: 'matSidenavContainer', host: {\n                        'class': 'mat-drawer-container mat-sidenav-container',\n                        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [\n                        {\n                            provide: MAT_DRAWER_CONTAINER,\n                            useExisting: MatSidenavContainer,\n                        },\n                    ], template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable>\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"] }]\n        }], propDecorators: { _allDrawers: [{\n                type: ContentChildren,\n                args: [MatSidenav, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }], _content: [{\n                type: ContentChild,\n                args: [MatSidenavContent]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSidenavModule {\n}\nMatSidenavModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenavModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatSidenavModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenavModule, declarations: [MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent], imports: [CommonModule, MatCommonModule, PlatformModule, CdkScrollableModule], exports: [CdkScrollableModule,\n        MatCommonModule,\n        MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent] });\nMatSidenavModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenavModule, imports: [[CommonModule, MatCommonModule, PlatformModule, CdkScrollableModule], CdkScrollableModule,\n        MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenavModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatCommonModule, PlatformModule, CdkScrollableModule],\n                    exports: [\n                        CdkScrollableModule,\n                        MatCommonModule,\n                        MatDrawer,\n                        MatDrawerContainer,\n                        MatDrawerContent,\n                        MatSidenav,\n                        MatSidenavContainer,\n                        MatSidenavContent,\n                    ],\n                    declarations: [\n                        MatDrawer,\n                        MatDrawerContainer,\n                        MatDrawerContent,\n                        MatSidenav,\n                        MatSidenavContainer,\n                        MatSidenavContent,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError };\n","import * as i7 from '@angular/cdk/a11y';\nimport { FocusKeyManager, A11yModule } from '@angular/cdk/a11y';\nimport * as i5 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport * as i7$1 from '@angular/cdk/portal';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport * as i3$1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ContentChild, ViewChild, Input, forwardRef, EventEmitter, Output, ContentChildren, QueryList, Attribute, NgModule } from '@angular/core';\nimport * as i4 from '@angular/material/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, fromEvent, of, merge, timer } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/bidi';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\nimport * as i3 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport * as i1$1 from '@angular/cdk/scrolling';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token for the MatInkBar's Positioner. */\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY,\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    const method = (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    });\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\nclass MatInkBar {\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n    alignToElement(element) {\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => this._setStyles(element));\n            });\n        }\n        else {\n            this._setStyles(element);\n        }\n    }\n    /** Shows the ink bar. */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /** Hides the ink bar. */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @param element\n     */\n    _setStyles(element) {\n        const positions = this._inkBarPositioner(element);\n        const inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    }\n}\nMatInkBar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatInkBar, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: _MAT_INK_BAR_POSITIONER }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatInkBar.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatInkBar, selector: \"mat-ink-bar\", host: { properties: { \"class._mat-animation-noopable\": \"_animationMode === 'NoopAnimations'\" }, classAttribute: \"mat-ink-bar\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatInkBar, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-ink-bar',\n                    host: {\n                        'class': 'mat-ink-bar',\n                        '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [_MAT_INK_BAR_POSITIONER]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nclass MatTabContent {\n    constructor(/** Content for the tab. */ template) {\n        this.template = template;\n    }\n}\nMatTabContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTabContent, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatTabContent, selector: \"[matTabContent]\", providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTabContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTabContent]',\n                    providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\n/**\n * Used to provide a tab label to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB = new InjectionToken('MAT_TAB');\n/** Used to flag tab labels for use with the portal directive */\nclass MatTabLabel extends CdkPortal {\n    constructor(templateRef, viewContainerRef, _closestTab) {\n        super(templateRef, viewContainerRef);\n        this._closestTab = _closestTab;\n    }\n}\nMatTabLabel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTabLabel, deps: [{ token: i0.TemplateRef }, { token: i0.ViewContainerRef }, { token: MAT_TAB, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabLabel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatTabLabel, selector: \"[mat-tab-label], [matTabLabel]\", providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTabLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-tab-label], [matTabLabel]',\n                    providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_TAB]\n                    }, {\n                        type: Optional\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nconst _MatTabBase = mixinDisabled(class {\n});\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabBase {\n    constructor(_viewContainerRef, _closestTabGroup) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        this._closestTabGroup = _closestTabGroup;\n        /** Plain text label for the tab, used when there is no template label. */\n        this.textLabel = '';\n        /** Portal that will be the hosted content of the tab */\n        this._contentPortal = null;\n        /** Emits whenever the internal state of the tab changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n    get templateLabel() {\n        return this._templateLabel;\n    }\n    set templateLabel(value) {\n        this._setTemplateLabelInput(value);\n    }\n    /** @docs-private */\n    get content() {\n        return this._contentPortal;\n    }\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setTemplateLabelInput(value) {\n        // Only update the label if the query managed to find one. This works around an issue where a\n        // user may have manually set `templateLabel` during creation mode, which would then get\n        // clobbered by `undefined` when the query resolves. Also note that we check that the closest\n        // tab matches the current one so that we don't pick up labels from nested tabs.\n        if (value && value._closestTab === this) {\n            this._templateLabel = value;\n        }\n    }\n}\nMatTab.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTab, deps: [{ token: i0.ViewContainerRef }, { token: MAT_TAB_GROUP, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTab.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatTab, selector: \"mat-tab\", inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"] }, providers: [{ provide: MAT_TAB, useExisting: MatTab }], queries: [{ propertyName: \"templateLabel\", first: true, predicate: MAT_TAB_LABEL, descendants: true }, { propertyName: \"_explicitContent\", first: true, predicate: MAT_TAB_CONTENT, descendants: true, read: TemplateRef, static: true }], viewQueries: [{ propertyName: \"_implicitContent\", first: true, predicate: TemplateRef, descendants: true, static: true }], exportAs: [\"matTab\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\", changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTab, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab', inputs: ['disabled'], changeDetection: ChangeDetectionStrategy.Default, encapsulation: ViewEncapsulation.None, exportAs: 'matTab', providers: [{ provide: MAT_TAB, useExisting: MatTab }], template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\" }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_TAB_GROUP]\n                    }, {\n                        type: Optional\n                    }] }];\n    }, propDecorators: { templateLabel: [{\n                type: ContentChild,\n                args: [MAT_TAB_LABEL]\n            }], _explicitContent: [{\n                type: ContentChild,\n                args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true }]\n            }], _implicitContent: [{\n                type: ViewChild,\n                args: [TemplateRef, { static: true }]\n            }], textLabel: [{\n                type: Input,\n                args: ['label']\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nconst matTabsAnimations = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n        ]),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    constructor(componentFactoryResolver, viewContainerRef, _host, _document) {\n        super(componentFactoryResolver, viewContainerRef, _document);\n        this._host = _host;\n        /** Subscription to events for when the tab body begins centering. */\n        this._centeringSub = Subscription.EMPTY;\n        /** Subscription to events for when the tab body finishes leaving from center position. */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        });\n        this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n    /** Clean up centering subscription. */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTabBodyPortal, deps: [{ token: i0.ComponentFactoryResolver }, { token: i0.ViewContainerRef }, { token: forwardRef(() => MatTabBody) }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabBodyPortal.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatTabBodyPortal, selector: \"[matTabBodyHost]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTabBodyPortal, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTabBodyHost]',\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ComponentFactoryResolver }, { type: i0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                        type: Inject,\n                        args: [forwardRef(() => MatTabBody)]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\nclass _MatTabBodyBase {\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /** Subscription to the directionality change observable. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Emits when an animation on the tab is complete. */\n        this._translateTabComplete = new Subject();\n        /** Event emitted when the tab begins to animate towards the center as the active tab. */\n        this._onCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._beforeCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._afterLeavingCenter = new EventEmitter();\n        /** Event emitted when the tab completes its animation towards the center. */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /** Duration for the tab's animation. */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            });\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete\n            .pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))\n            .subscribe(event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        });\n    }\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    }\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    _onTranslateTabStarted(event) {\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /** The text direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the provided position state is considered center, regardless of origin. */\n    _isCenterPosition(position) {\n        return (position == 'center' || position == 'left-origin-center' || position == 'right-origin-center');\n    }\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    _computePositionFromOrigin(origin) {\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatTabBodyBase, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabBodyBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _MatTabBodyBase, inputs: { _content: [\"content\", \"_content\"], origin: \"origin\", animationDuration: \"animationDuration\", position: \"position\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatTabBodyBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.ChangeDetectorRef }];\n    }, propDecorators: { _onCentering: [{\n                type: Output\n            }], _beforeCentering: [{\n                type: Output\n            }], _afterLeavingCenter: [{\n                type: Output\n            }], _onCentered: [{\n                type: Output\n            }], _content: [{\n                type: Input,\n                args: ['content']\n            }], origin: [{\n                type: Input\n            }], animationDuration: [{\n                type: Input\n            }], position: [{\n                type: Input\n            }] } });\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTabBody, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMatTabBody.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatTabBody, selector: \"mat-tab-body\", host: { classAttribute: \"mat-tab-body\" }, viewQueries: [{ propertyName: \"_portalHost\", first: true, predicate: CdkPortalOutlet, descendants: true }], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\", styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"], directives: [{ type: MatTabBodyPortal, selector: \"[matTabBodyHost]\" }], animations: [matTabsAnimations.translateTab], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTabBody, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab-body', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, animations: [matTabsAnimations.translateTab], host: {\n                        'class': 'mat-tab-body',\n                    }, template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\", styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.ChangeDetectorRef }];\n    }, propDecorators: { _portalHost: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nconst _MatTabLabelWrapperBase = mixinDisabled(class {\n});\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperBase {\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /** Sets focus on the wrapper element */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTabLabelWrapper, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabLabelWrapper.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatTabLabelWrapper, selector: \"[matTabLabelWrapper]\", inputs: { disabled: \"disabled\" }, host: { properties: { \"class.mat-tab-disabled\": \"disabled\", \"attr.aria-disabled\": \"!!disabled\" } }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTabLabelWrapper, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTabLabelWrapper]',\n                    inputs: ['disabled'],\n                    host: {\n                        '[class.mat-tab-disabled]': 'disabled',\n                        '[attr.aria-disabled]': '!!disabled',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n});\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nclass MatPaginatedTabHeader {\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /** The distance in pixels that the tab labels should be translated to the left. */\n        this._scrollDistance = 0;\n        /** Whether the header should scroll to the selected index after the view has been checked. */\n        this._selectedIndexChanged = false;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Whether the controls for pagination should be displayed */\n        this._showPaginationControls = false;\n        /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n        this._disableScrollAfter = true;\n        /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n        this._disableScrollBefore = true;\n        /** Stream that will stop the automated scrolling. */\n        this._stopScrolling = new Subject();\n        /**\n         * Whether pagination should be disabled. This can be used to avoid unnecessary\n         * layout recalculations if it's known that pagination won't be required.\n         */\n        this.disablePagination = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the option is selected. */\n        this.selectFocusedIndex = new EventEmitter();\n        /** Event emitted when a label is focused. */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular(() => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => {\n                this._stopInterval();\n            });\n        });\n    }\n    /** The index of the active tab. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItem(value);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('before');\n        });\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('after');\n        });\n    }\n    ngAfterContentInit() {\n        const dirChange = this._dir ? this._dir.change : of('ltr');\n        const resize = this._viewportRuler.change(150);\n        const realign = () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        };\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withHomeAndEnd()\n            .withWrap();\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            // We need to defer this to give the browser some time to recalculate\n            // the element dimensions. The call has to be wrapped in `NgZone.run`,\n            // because the viewport change handler runs outside of Angular.\n            this._ngZone.run(() => Promise.resolve().then(realign));\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        });\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        });\n    }\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /** Handles keyboard events on the header. */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case ENTER:\n            case SPACE:\n                if (this.focusIndex !== this.selectedIndex) {\n                    this.selectFocusedIndex.emit(this.focusIndex);\n                    this._itemSelected(event);\n                }\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    _onContentChanges() {\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run(() => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : 0;\n    }\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this._tabListContainer.nativeElement;\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /** The layout direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    _updateTabScrollPosition() {\n        if (this.disablePagination) {\n            return;\n        }\n        const scrollDistance = this.scrollDistance;\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        if (this._platform.TRIDENT || this._platform.EDGE) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance() {\n        return this._scrollDistance;\n    }\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollHeader(direction) {\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        const scrollAmount = ((direction == 'before' ? -1 : 1) * viewLength) / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /** Handles click events on the pagination arrows. */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollToLabel(labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        let labelBeforePos, labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabListInner.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkPaginationEnabled() {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            const isEnabled = this._tabListInner.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkScrollingControls() {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _getMaxScrollDistance() {\n        const lengthOfTabList = this._tabListInner.nativeElement.scrollWidth;\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return lengthOfTabList - viewLength || 0;\n    }\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    _alignInkBarToSelectedTab() {\n        const selectedItem = this._items && this._items.length ? this._items.toArray()[this.selectedIndex] : null;\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /** Stops the currently-running paginator interval.  */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe(() => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        });\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatPaginatedTabHeader, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatPaginatedTabHeader.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatPaginatedTabHeader, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { disablePagination: [{\n                type: Input\n            }] } });\n\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() {\n        return this._disableRipple;\n    }\n    set disableRipple(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n    }\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatTabHeaderBase, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabHeaderBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatTabHeaderBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { disableRipple: [{\n                type: Input\n            }] } });\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTabHeader, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTabHeader.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatTabHeader, selector: \"mat-tab-header\", inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, host: { properties: { \"class.mat-tab-header-pagination-controls-enabled\": \"_showPaginationControls\", \"class.mat-tab-header-rtl\": \"_getLayoutDirection() == 'rtl'\" }, classAttribute: \"mat-tab-header\" }, queries: [{ propertyName: \"_items\", predicate: MatTabLabelWrapper }], viewQueries: [{ propertyName: \"_inkBar\", first: true, predicate: MatInkBar, descendants: true, static: true }, { propertyName: \"_tabListContainer\", first: true, predicate: [\"tabListContainer\"], descendants: true, static: true }, { propertyName: \"_tabList\", first: true, predicate: [\"tabList\"], descendants: true, static: true }, { propertyName: \"_tabListInner\", first: true, predicate: [\"tabListInner\"], descendants: true, static: true }, { propertyName: \"_nextPaginator\", first: true, predicate: [\"nextPaginator\"], descendants: true }, { propertyName: \"_previousPaginator\", first: true, predicate: [\"previousPaginator\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"], directives: [{ type: i4.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i5.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }, { type: MatInkBar, selector: \"mat-ink-bar\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTabHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab-header', inputs: ['selectedIndex'], outputs: ['selectFocusedIndex', 'indexFocused'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, host: {\n                        'class': 'mat-tab-header',\n                        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    }, template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { _items: [{\n                type: ContentChildren,\n                args: [MatTabLabelWrapper, { descendants: false }]\n            }], _inkBar: [{\n                type: ViewChild,\n                args: [MatInkBar, { static: true }]\n            }], _tabListContainer: [{\n                type: ViewChild,\n                args: ['tabListContainer', { static: true }]\n            }], _tabList: [{\n                type: ViewChild,\n                args: ['tabList', { static: true }]\n            }], _tabListInner: [{\n                type: ViewChild,\n                args: ['tabListInner', { static: true }]\n            }], _nextPaginator: [{\n                type: ViewChild,\n                args: ['nextPaginator']\n            }], _previousPaginator: [{\n                type: ViewChild,\n                args: ['previousPaginator']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {\n}\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        var _a;\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** All of the tabs that belong to the group. */\n        this._tabs = new QueryList();\n        /** The tab index that should be selected after the content has been checked. */\n        this._indexToSelect = 0;\n        /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n        this._tabBodyWrapperHeight = 0;\n        /** Subscription to tabs being added/removed. */\n        this._tabsSubscription = Subscription.EMPTY;\n        /** Subscription to changes in the tab labels. */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._selectedIndex = null;\n        /** Position of the tab header. */\n        this.headerPosition = 'above';\n        /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n        this.selectedIndexChange = new EventEmitter();\n        /** Event emitted when focus has changed within a tab group. */\n        this.focusChange = new EventEmitter();\n        /** Event emitted when the body animation has completed */\n        this.animationDone = new EventEmitter();\n        /** Event emitted when the tab selection has changed. */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration =\n            defaultConfig && defaultConfig.animationDuration ? defaultConfig.animationDuration : '500ms';\n        this.disablePagination =\n            defaultConfig && defaultConfig.disablePagination != null\n                ? defaultConfig.disablePagination\n                : false;\n        this.dynamicHeight =\n            defaultConfig && defaultConfig.dynamicHeight != null ? defaultConfig.dynamicHeight : false;\n        this.contentTabIndex = (_a = defaultConfig === null || defaultConfig === void 0 ? void 0 : defaultConfig.contentTabIndex) !== null && _a !== void 0 ? _a : null;\n    }\n    /** Whether the tab group should grow to the size of the active tab. */\n    get dynamicHeight() {\n        return this._dynamicHeight;\n    }\n    set dynamicHeight(value) {\n        this._dynamicHeight = coerceBooleanProperty(value);\n    }\n    /** The index of the active tab. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() {\n        return this._animationDuration;\n    }\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value + '') ? value + 'ms' : value;\n    }\n    /**\n     * `tabindex` to be set on the inner element that wraps the tab content. Can be used for improved\n     * accessibility when the tab does not have focusable elements or if it has scrollable content.\n     * The `tabindex` will be removed automatically for inactive tabs.\n     * Read more at https://www.w3.org/TR/wai-aria-practices/examples/tabs/tabs-2/tabs.html\n     */\n    get contentTabIndex() {\n        return this._contentTabIndex;\n    }\n    set contentTabIndex(value) {\n        this._contentTabIndex = coerceNumberProperty(value, null);\n    }\n    /** Background color of the tab group. */\n    get backgroundColor() {\n        return this._backgroundColor;\n    }\n    set backgroundColor(value) {\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = (this._indexToSelect = this._clampTabIndex(this._indexToSelect));\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n                // Preserve the height so page doesn't scroll up during tab change.\n                // Fixes https://stackblitz.com/edit/mat-tabs-scroll-page-top-on-tab-change\n                const wrapper = this._tabBodyWrapper.nativeElement;\n                wrapper.style.minHeight = wrapper.clientHeight + 'px';\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this._tabs.forEach((tab, index) => (tab.isActive = index === indexToSelect));\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                    // Clear the min-height, this was needed during tab change to avoid\n                    // unnecessary scrolling.\n                    this._tabBodyWrapper.nativeElement.style.minHeight = '';\n                }\n            });\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngAfterContentInit() {\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe(() => {\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this._tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Listens to changes in all of the tabs. */\n    _subscribeToAllTabChanges() {\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes.pipe(startWith(this._allTabs)).subscribe((tabs) => {\n            this._tabs.reset(tabs.filter(tab => {\n                return tab._closestTabGroup === this || !tab._closestTabGroup;\n            }));\n            this._tabs.notifyOnChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /** Re-aligns the ink bar to the selected tab element. */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    /**\n     * Sets focus to a particular tab.\n     * @param index Index of the tab to be focused.\n     */\n    focusTab(index) {\n        const header = this._tabHeader;\n        if (header) {\n            header.focusIndex = index;\n        }\n    }\n    _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    _createChangeEvent(index) {\n        const event = new MatTabChangeEvent();\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges)).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /** Returns a unique id for each tab label element */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /** Returns a unique id for each tab content element */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /** Removes the height of the tab body wrapper. */\n    _removeTabBodyWrapperHeight() {\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /** Handle click events, setting new selected index if appropriate. */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /** Retrieves the tabindex for the tab. */\n    _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n    /** Callback for when the focused state of a tab has changed. */\n    _tabFocusChanged(focusOrigin, index) {\n        // Mouse/touch focus happens during the `mousedown`/`touchstart` phase which\n        // can cause the tab to be moved out from under the pointer, interrupting the\n        // click sequence (see #21898). We don't need to scroll the tab into view for\n        // such cases anyway, because it will be done when the tab becomes selected.\n        if (focusOrigin && focusOrigin !== 'mouse' && focusOrigin !== 'touch') {\n            this._tabHeader.focusIndex = index;\n        }\n    }\n}\n_MatTabGroupBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatTabGroupBase, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_TABS_CONFIG, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabGroupBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _MatTabGroupBase, inputs: { dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", contentTabIndex: \"contentTabIndex\", disablePagination: \"disablePagination\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatTabGroupBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_TABS_CONFIG]\n                    }, {\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { dynamicHeight: [{\n                type: Input\n            }], selectedIndex: [{\n                type: Input\n            }], headerPosition: [{\n                type: Input\n            }], animationDuration: [{\n                type: Input\n            }], contentTabIndex: [{\n                type: Input\n            }], disablePagination: [{\n                type: Input\n            }], backgroundColor: [{\n                type: Input\n            }], selectedIndexChange: [{\n                type: Output\n            }], focusChange: [{\n                type: Output\n            }], animationDone: [{\n                type: Output\n            }], selectedTabChange: [{\n                type: Output\n            }] } });\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTabGroup, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_TABS_CONFIG, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTabGroup.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatTabGroup, selector: \"mat-tab-group\", inputs: { color: \"color\", disableRipple: \"disableRipple\" }, host: { properties: { \"class.mat-tab-group-dynamic-height\": \"dynamicHeight\", \"class.mat-tab-group-inverted-header\": \"headerPosition === \\\"below\\\"\" }, classAttribute: \"mat-tab-group\" }, providers: [\n        {\n            provide: MAT_TAB_GROUP,\n            useExisting: MatTabGroup,\n        },\n    ], queries: [{ propertyName: \"_allTabs\", predicate: MatTab, descendants: true }], viewQueries: [{ propertyName: \"_tabBodyWrapper\", first: true, predicate: [\"tabBodyWrapper\"], descendants: true }, { propertyName: \"_tabHeader\", first: true, predicate: [\"tabHeader\"], descendants: true }], exportAs: [\"matTabGroup\"], usesInheritance: true, ngImport: i0, template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n       (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.tabindex]=\\\"(contentTabIndex != null && selectedIndex === i) ? contentTabIndex : null\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex === i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\", styles: [\".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"], components: [{ type: MatTabHeader, selector: \"mat-tab-header\", inputs: [\"selectedIndex\"], outputs: [\"selectFocusedIndex\", \"indexFocused\"] }, { type: MatTabBody, selector: \"mat-tab-body\" }], directives: [{ type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: MatTabLabelWrapper, selector: \"[matTabLabelWrapper]\", inputs: [\"disabled\"] }, { type: i4.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i7.CdkMonitorFocus, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: [\"cdkFocusChange\"] }, { type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i7$1.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTabGroup, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab-group', exportAs: 'matTabGroup', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, inputs: ['color', 'disableRipple'], providers: [\n                        {\n                            provide: MAT_TAB_GROUP,\n                            useExisting: MatTabGroup,\n                        },\n                    ], host: {\n                        'class': 'mat-tab-group',\n                        '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                        '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n                    }, template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n       (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.tabindex]=\\\"(contentTabIndex != null && selectedIndex === i) ? contentTabIndex : null\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex === i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\", styles: [\".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_TABS_CONFIG]\n                    }, {\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { _allTabs: [{\n                type: ContentChildren,\n                args: [MatTab, { descendants: true }]\n            }], _tabBodyWrapper: [{\n                type: ViewChild,\n                args: ['tabBodyWrapper']\n            }], _tabHeader: [{\n                type: ViewChild,\n                args: ['tabHeader']\n            }] } });\n\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /** Theme color of the nav bar. */\n        this.color = 'primary';\n    }\n    /** Background color of the tab nav. */\n    get backgroundColor() {\n        return this._backgroundColor;\n    }\n    set backgroundColor(value) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() {\n        return this._disableRipple;\n    }\n    set disableRipple(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n    }\n    _itemSelected() {\n        // noop\n    }\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this.updateActiveLink();\n        });\n        super.ngAfterContentInit();\n    }\n    /** Notifies the component that the active link has been changed. */\n    updateActiveLink() {\n        if (!this._items) {\n            return;\n        }\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n}\n_MatTabNavBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatTabNavBase, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabNavBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _MatTabNavBase, inputs: { backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\", color: \"color\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatTabNavBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i3.Platform }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { backgroundColor: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }] } });\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTabNav, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTabNav.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatTabNav, selector: \"[mat-tab-nav-bar]\", inputs: { color: \"color\" }, host: { properties: { \"class.mat-tab-header-pagination-controls-enabled\": \"_showPaginationControls\", \"class.mat-tab-header-rtl\": \"_getLayoutDirection() == 'rtl'\", \"class.mat-primary\": \"color !== \\\"warn\\\" && color !== \\\"accent\\\"\", \"class.mat-accent\": \"color === \\\"accent\\\"\", \"class.mat-warn\": \"color === \\\"warn\\\"\" }, classAttribute: \"mat-tab-nav-bar mat-tab-header\" }, queries: [{ propertyName: \"_items\", predicate: i0.forwardRef(function () { return MatTabLink; }), descendants: true }], viewQueries: [{ propertyName: \"_inkBar\", first: true, predicate: MatInkBar, descendants: true, static: true }, { propertyName: \"_tabListContainer\", first: true, predicate: [\"tabListContainer\"], descendants: true, static: true }, { propertyName: \"_tabList\", first: true, predicate: [\"tabList\"], descendants: true, static: true }, { propertyName: \"_tabListInner\", first: true, predicate: [\"tabListInner\"], descendants: true, static: true }, { propertyName: \"_nextPaginator\", first: true, predicate: [\"nextPaginator\"], descendants: true }, { propertyName: \"_previousPaginator\", first: true, predicate: [\"previousPaginator\"], descendants: true }], exportAs: [\"matTabNavBar\", \"matTabNav\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"], directives: [{ type: i4.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i5.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }, { type: MatInkBar, selector: \"mat-ink-bar\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTabNav, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-tab-nav-bar]', exportAs: 'matTabNavBar, matTabNav', inputs: ['color'], host: {\n                        'class': 'mat-tab-nav-bar mat-tab-header',\n                        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                        '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                        '[class.mat-accent]': 'color === \"accent\"',\n                        '[class.mat-warn]': 'color === \"warn\"',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i3.Platform }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { _items: [{\n                type: ContentChildren,\n                args: [forwardRef(() => MatTabLink), { descendants: true }]\n            }], _inkBar: [{\n                type: ViewChild,\n                args: [MatInkBar, { static: true }]\n            }], _tabListContainer: [{\n                type: ViewChild,\n                args: ['tabListContainer', { static: true }]\n            }], _tabList: [{\n                type: ViewChild,\n                args: ['tabList', { static: true }]\n            }], _tabListInner: [{\n                type: ViewChild,\n                args: ['tabListInner', { static: true }]\n            }], _nextPaginator: [{\n                type: ViewChild,\n                args: ['nextPaginator']\n            }], _previousPaginator: [{\n                type: ViewChild,\n                args: ['previousPaginator']\n            }] } });\n// Boilerplate for applying mixins to MatTabLink.\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(class {\n})));\n/** Base class with all of the `MatTabLink` functionality. */\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    constructor(_tabNavBar, \n    /** @docs-private */ elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /** Whether the tab link is active or not. */\n        this._isActive = false;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /** Whether the link is active. */\n    get active() {\n        return this._isActive;\n    }\n    set active(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._isActive) {\n            this._isActive = newValue;\n            this._tabNavBar.updateActiveLink();\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return (this.disabled ||\n            this.disableRipple ||\n            this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled);\n    }\n    /** Focuses the tab link. */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this.elementRef);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n    _handleFocus() {\n        // Since we allow navigation through tabbing in the nav bar, we\n        // have to update the focused index whenever the link receives focus.\n        this._tabNavBar.focusIndex = this._tabNavBar._items.toArray().indexOf(this);\n    }\n}\n_MatTabLinkBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatTabLinkBase, deps: [{ token: _MatTabNavBase }, { token: i0.ElementRef }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: 'tabindex', attribute: true }, { token: i7.FocusMonitor }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabLinkBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _MatTabLinkBase, inputs: { active: \"active\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatTabLinkBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: _MatTabNavBase }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['tabindex']\n                    }] }, { type: i7.FocusMonitor }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { active: [{\n                type: Input\n            }] } });\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTabLink, deps: [{ token: MatTabNav }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i3.Platform }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: 'tabindex', attribute: true }, { token: i7.FocusMonitor }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabLink.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatTabLink, selector: \"[mat-tab-link], [matTabLink]\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, host: { listeners: { \"focus\": \"_handleFocus()\" }, properties: { \"attr.aria-current\": \"active ? \\\"page\\\" : null\", \"attr.aria-disabled\": \"disabled\", \"attr.tabIndex\": \"tabIndex\", \"class.mat-tab-disabled\": \"disabled\", \"class.mat-tab-label-active\": \"active\" }, classAttribute: \"mat-tab-link mat-focus-indicator\" }, exportAs: [\"matTabLink\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTabLink, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-tab-link], [matTabLink]',\n                    exportAs: 'matTabLink',\n                    inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                    host: {\n                        'class': 'mat-tab-link mat-focus-indicator',\n                        '[attr.aria-current]': 'active ? \"page\" : null',\n                        '[attr.aria-disabled]': 'disabled',\n                        '[attr.tabIndex]': 'tabIndex',\n                        '[class.mat-tab-disabled]': 'disabled',\n                        '[class.mat-tab-label-active]': 'active',\n                        '(focus)': '_handleFocus()',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: MatTabNav }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['tabindex']\n                    }] }, { type: i7.FocusMonitor }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTabsModule {\n}\nMatTabsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTabsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatTabsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTabsModule, declarations: [MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatInkBar,\n        MatTabLabelWrapper,\n        MatTabNav,\n        MatTabLink,\n        MatTabBody,\n        MatTabBodyPortal,\n        MatTabHeader,\n        MatTabContent], imports: [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule], exports: [MatCommonModule,\n        MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatTabNav,\n        MatTabLink,\n        MatTabContent] });\nMatTabsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTabsModule, imports: [[\n            CommonModule,\n            MatCommonModule,\n            PortalModule,\n            MatRippleModule,\n            ObserversModule,\n            A11yModule,\n        ], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTabsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        MatCommonModule,\n                        PortalModule,\n                        MatRippleModule,\n                        ObserversModule,\n                        A11yModule,\n                    ],\n                    // Don't export all components because some are only to be used internally.\n                    exports: [\n                        MatCommonModule,\n                        MatTabGroup,\n                        MatTabLabel,\n                        MatTab,\n                        MatTabNav,\n                        MatTabLink,\n                        MatTabContent,\n                    ],\n                    declarations: [\n                        MatTabGroup,\n                        MatTabLabel,\n                        MatTab,\n                        MatInkBar,\n                        MatTabLabelWrapper,\n                        MatTabNav,\n                        MatTabLink,\n                        MatTabBody,\n                        MatTabBodyPortal,\n                        MatTabHeader,\n                        MatTabContent,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TAB, MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations };\n","import * as i0 from '@angular/core';\nimport { Directive, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { DOCUMENT } from '@angular/common';\nimport * as i1 from '@angular/cdk/platform';\n\n// Boilerplate for applying mixins to MatToolbar.\n/** @docs-private */\nconst _MatToolbarBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\nclass MatToolbarRow {\n}\nMatToolbarRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatToolbarRow, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatToolbarRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatToolbarRow, selector: \"mat-toolbar-row\", host: { classAttribute: \"mat-toolbar-row\" }, exportAs: [\"matToolbarRow\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatToolbarRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-toolbar-row',\n                    exportAs: 'matToolbarRow',\n                    host: { 'class': 'mat-toolbar-row' },\n                }]\n        }] });\nclass MatToolbar extends _MatToolbarBase {\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._checkToolbarMixedModes();\n            this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n        }\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     */\n    _checkToolbarMixedModes() {\n        if (this._toolbarRows.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            // Check if there are any other DOM nodes that can display content but aren't inside of\n            // a <mat-toolbar-row> element.\n            const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n                .filter(node => !(node.classList && node.classList.contains('mat-toolbar-row')))\n                .filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8))\n                .some(node => !!(node.textContent && node.textContent.trim()));\n            if (isCombinedUsage) {\n                throwToolbarMixedModesError();\n            }\n        }\n    }\n}\nMatToolbar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatToolbar, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component });\nMatToolbar.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatToolbar, selector: \"mat-toolbar\", inputs: { color: \"color\" }, host: { properties: { \"class.mat-toolbar-multiple-rows\": \"_toolbarRows.length > 0\", \"class.mat-toolbar-single-row\": \"_toolbarRows.length === 0\" }, classAttribute: \"mat-toolbar\" }, queries: [{ propertyName: \"_toolbarRows\", predicate: MatToolbarRow, descendants: true }], exportAs: [\"matToolbar\"], usesInheritance: true, ngImport: i0, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatToolbar, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-toolbar', exportAs: 'matToolbar', inputs: ['color'], host: {\n                        'class': 'mat-toolbar',\n                        '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                        '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    }, propDecorators: { _toolbarRows: [{\n                type: ContentChildren,\n                args: [MatToolbarRow, { descendants: true }]\n            }] } });\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatToolbarModule {\n}\nMatToolbarModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatToolbarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatToolbarModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatToolbarModule, declarations: [MatToolbar, MatToolbarRow], imports: [MatCommonModule], exports: [MatToolbar, MatToolbarRow, MatCommonModule] });\nMatToolbarModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatToolbarModule, imports: [[MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatToolbarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                    declarations: [MatToolbar, MatToolbarRow],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n","import * as i0 from '@angular/core';\nimport { Component, Optional, Self, Input, HostBinding, HostListener, InjectionToken, Pipe, Inject, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i2 from '@angular/material/core';\nimport { mixinErrorState } from '@angular/material/core';\nimport * as i3 from '@angular/forms';\n\n/**\n * The files to be uploaded\n */\nclass FileInput {\n    constructor(_files, delimiter = ', ') {\n        this._files = _files;\n        this.delimiter = delimiter;\n        this._fileNames = (this._files || []).map((f) => f.name).join(delimiter);\n    }\n    get files() {\n        return this._files || [];\n    }\n    get fileNames() {\n        return this._fileNames;\n    }\n}\n\n// Boilerplate for applying mixins to FileInput\n/** @docs-private */\nclass FileInputBase {\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\n/**\n * Allows to use a custom ErrorStateMatcher with the file-input component\n */\nconst FileInputMixinBase = mixinErrorState(FileInputBase);\n\nclass FileInputComponent extends FileInputMixinBase {\n    /**\n     * @see https://angular.io/api/forms/ControlValueAccessor\n     */\n    constructor(fm, _elementRef, _renderer, _defaultErrorStateMatcher, ngControl, _parentForm, _parentFormGroup) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this.fm = fm;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this.ngControl = ngControl;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.focused = false;\n        this.controlType = 'file-input';\n        this.autofilled = false;\n        this._required = false;\n        this.accept = null;\n        this.id = `ngx-mat-file-input-${FileInputComponent.nextId++}`;\n        this.describedBy = '';\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        if (this.ngControl != null) {\n            this.ngControl.valueAccessor = this;\n        }\n        fm.monitor(_elementRef.nativeElement, true).subscribe(origin => {\n            this.focused = !!origin;\n            this.stateChanges.next();\n        });\n    }\n    setDescribedByIds(ids) {\n        this.describedBy = ids.join(' ');\n    }\n    get value() {\n        return this.empty ? null : new FileInput(this._elementRef.nativeElement.value || []);\n    }\n    set value(fileInput) {\n        if (fileInput) {\n            this.writeValue(fileInput);\n            this.stateChanges.next();\n        }\n    }\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    get placeholder() {\n        return this._placeholder;\n    }\n    set placeholder(plh) {\n        this._placeholder = plh;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the current input has files\n     */\n    get empty() {\n        return !this._elementRef.nativeElement.value || this._elementRef.nativeElement.value.length === 0;\n    }\n    get shouldLabelFloat() {\n        return this.focused || !this.empty || this.valuePlaceholder !== undefined;\n    }\n    get required() {\n        return this._required;\n    }\n    set required(req) {\n        this._required = coerceBooleanProperty(req);\n        this.stateChanges.next();\n    }\n    get isDisabled() {\n        return this.disabled;\n    }\n    get disabled() {\n        return this._elementRef.nativeElement.disabled;\n    }\n    set disabled(dis) {\n        this.setDisabledState(coerceBooleanProperty(dis));\n        this.stateChanges.next();\n    }\n    onContainerClick(event) {\n        if (event.target.tagName.toLowerCase() !== 'input' && !this.disabled) {\n            this._elementRef.nativeElement.querySelector('input').focus();\n            this.focused = true;\n            this.open();\n        }\n    }\n    get fileNames() {\n        return this.value ? this.value.fileNames : this.valuePlaceholder;\n    }\n    writeValue(obj) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', obj instanceof FileInput ? obj.files : null);\n    }\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Remove all files from the file input component\n     * @param [event] optional event that may have triggered the clear action\n     */\n    clear(event) {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        this.value = new FileInput([]);\n        this._elementRef.nativeElement.querySelector('input').value = null;\n        this._onChange(this.value);\n    }\n    change(event) {\n        const fileList = event.target.files;\n        const fileArray = [];\n        if (fileList) {\n            for (let i = 0; i < fileList.length; i++) {\n                fileArray.push(fileList[i]);\n            }\n        }\n        this.value = new FileInput(fileArray);\n        this._onChange(this.value);\n    }\n    blur() {\n        this.focused = false;\n        this._onTouched();\n    }\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    ngOnInit() {\n        this.multiple = coerceBooleanProperty(this.multiple);\n    }\n    open() {\n        if (!this.disabled) {\n            this._elementRef.nativeElement.querySelector('input').click();\n        }\n    }\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        this.fm.stopMonitoring(this._elementRef.nativeElement);\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n    }\n}\nFileInputComponent.nextId = 0;\nFileInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FileInputComponent, deps: [{ token: i1.FocusMonitor }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i2.ErrorStateMatcher }, { token: i3.NgControl, optional: true, self: true }, { token: i3.NgForm, optional: true }, { token: i3.FormGroupDirective, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nFileInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.2\", type: FileInputComponent, selector: \"ngx-mat-file-input\", inputs: { autofilled: \"autofilled\", valuePlaceholder: \"valuePlaceholder\", accept: \"accept\", errorStateMatcher: \"errorStateMatcher\", value: \"value\", multiple: \"multiple\", placeholder: \"placeholder\", required: \"required\", disabled: \"disabled\" }, host: { listeners: { \"change\": \"change($event)\", \"focusout\": \"blur()\" }, properties: { \"id\": \"this.id\", \"attr.aria-describedby\": \"this.describedBy\", \"class.mat-form-field-should-float\": \"this.shouldLabelFloat\", \"class.file-input-disabled\": \"this.isDisabled\" } }, providers: [{ provide: MatFormFieldControl, useExisting: FileInputComponent }], usesInheritance: true, ngImport: i0, template: \"<input #input type=\\\"file\\\" [attr.multiple]=\\\"multiple? '' : null\\\" [attr.accept]=\\\"accept\\\">\\n<span class=\\\"filename\\\" [title]=\\\"fileNames\\\">{{ fileNames }}</span>\\n\", styles: [\":host{display:inline-block;width:100%}:host:not(.file-input-disabled){cursor:pointer}input{width:0px;height:0px;opacity:0;overflow:hidden;position:absolute;z-index:-1}.filename{display:inline-block;text-overflow:ellipsis;overflow:hidden;width:100%}\\n\"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FileInputComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-mat-file-input', providers: [{ provide: MatFormFieldControl, useExisting: FileInputComponent }], template: \"<input #input type=\\\"file\\\" [attr.multiple]=\\\"multiple? '' : null\\\" [attr.accept]=\\\"accept\\\">\\n<span class=\\\"filename\\\" [title]=\\\"fileNames\\\">{{ fileNames }}</span>\\n\", styles: [\":host{display:inline-block;width:100%}:host:not(.file-input-disabled){cursor:pointer}input{width:0px;height:0px;opacity:0;overflow:hidden;position:absolute;z-index:-1}.filename{display:inline-block;text-overflow:ellipsis;overflow:hidden;width:100%}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i1.FocusMonitor }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i2.ErrorStateMatcher }, { type: i3.NgControl, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }] }, { type: i3.NgForm, decorators: [{\n                        type: Optional\n                    }] }, { type: i3.FormGroupDirective, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { autofilled: [{\n                type: Input\n            }], valuePlaceholder: [{\n                type: Input\n            }], accept: [{\n                type: Input\n            }], errorStateMatcher: [{\n                type: Input\n            }], id: [{\n                type: HostBinding\n            }], describedBy: [{\n                type: HostBinding,\n                args: ['attr.aria-describedby']\n            }], value: [{\n                type: Input\n            }], multiple: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], shouldLabelFloat: [{\n                type: HostBinding,\n                args: ['class.mat-form-field-should-float']\n            }], required: [{\n                type: Input\n            }], isDisabled: [{\n                type: HostBinding,\n                args: ['class.file-input-disabled']\n            }], disabled: [{\n                type: Input\n            }], change: [{\n                type: HostListener,\n                args: ['change', ['$event']]\n            }], blur: [{\n                type: HostListener,\n                args: ['focusout']\n            }] } });\n\n/**\n * Optional token to provide custom configuration to the module\n */\nconst NGX_MAT_FILE_INPUT_CONFIG = new InjectionToken('ngx-mat-file-input.config');\n\nclass ByteFormatPipe {\n    constructor(config) {\n        this.config = config;\n        this.unit = config ? config.sizeUnit : 'Byte';\n    }\n    transform(value, args) {\n        if (parseInt(value, 10) >= 0) {\n            value = this.formatBytes(+value, +args);\n        }\n        return value;\n    }\n    formatBytes(bytes, decimals) {\n        if (bytes === 0) {\n            return '0 ' + this.unit;\n        }\n        const B = this.unit.charAt(0);\n        const k = 1024;\n        const dm = decimals || 2;\n        const sizes = [this.unit, 'K' + B, 'M' + B, 'G' + B, 'T' + B, 'P' + B, 'E' + B, 'Z' + B, 'Y' + B];\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    }\n}\nByteFormatPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: ByteFormatPipe, deps: [{ token: NGX_MAT_FILE_INPUT_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Pipe });\nByteFormatPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: ByteFormatPipe, name: \"byteFormat\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: ByteFormatPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'byteFormat'\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [NGX_MAT_FILE_INPUT_CONFIG]\n                    }] }];\n    } });\n\nclass MaterialFileInputModule {\n}\nMaterialFileInputModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: MaterialFileInputModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMaterialFileInputModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: MaterialFileInputModule, declarations: [FileInputComponent, ByteFormatPipe], exports: [FileInputComponent, ByteFormatPipe] });\nMaterialFileInputModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: MaterialFileInputModule, providers: [FocusMonitor] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: MaterialFileInputModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [FileInputComponent, ByteFormatPipe],\n                    providers: [FocusMonitor],\n                    exports: [FileInputComponent, ByteFormatPipe]\n                }]\n        }] });\n\nclass FileValidator {\n    /**\n     * Function to control content of files\n     *\n     * @param bytes max number of bytes allowed\n     *\n     * @returns\n     */\n    static maxContentSize(bytes) {\n        return (control) => {\n            const size = control && control.value ? control.value.files.map(f => f.size).reduce((acc, i) => acc + i, 0) : 0;\n            const condition = bytes >= size;\n            return condition\n                ? null\n                : {\n                    maxContentSize: {\n                        actualSize: size,\n                        maxSize: bytes\n                    }\n                };\n        };\n    }\n}\n\n// Module\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ByteFormatPipe, FileInput, FileInputComponent, FileValidator, MaterialFileInputModule, NGX_MAT_FILE_INPUT_CONFIG };\n"],"names":["i0","InjectionToken","Directive","Input","EventEmitter","Optional","Inject","SkipSelf","Output","NgModule","coerceBooleanProperty","Subject","Subscription","i1","nextId$1","CDK_ACCORDION","CdkAccordion","constructor","_stateChanges","_openCloseAllActions","id","_multi","multi","openAll","next","closeAll","ngOnChanges","changes","ngOnDestroy","complete","ɵfac","ɵdir","provide","useExisting","type","args","selector","exportAs","providers","nextId","CdkAccordionItem","accordion","_changeDetectorRef","_expansionDispatcher","_openCloseAllSubscription","EMPTY","closed","opened","destroyed","expandedChange","_expanded","_disabled","_removeUniqueSelectionListener","listen","accordionId","expanded","_subscribeToOpenCloseAllActions","emit","notify","markForCheck","disabled","unsubscribe","toggle","close","open","subscribe","ChangeDetectorRef","UniqueSelectionDispatcher","useValue","undefined","decorators","CdkAccordionModule","ɵmod","ɵinj","exports","declarations","i2","TemplatePortal","PortalModule","i3","DOCUMENT","CommonModule","Component","ViewEncapsulation","ChangeDetectionStrategy","ContentChild","ViewChild","Host","Attribute","QueryList","ContentChildren","mixinTabIndex","MatCommonModule","i2$1","FocusKeyManager","distinctUntilChanged","startWith","filter","take","ENTER","hasModifierKey","SPACE","ANIMATION_MODULE_TYPE","merge","trigger","state","style","transition","animate","MAT_ACCORDION","EXPANSION_PANEL_ANIMATION_TIMING","matExpansionAnimations","indicatorRotate","transform","bodyExpansion","height","visibility","MatExpansionPanelContent","_template","TemplateRef","uniqueId","MAT_EXPANSION_PANEL_DEFAULT_OPTIONS","MatExpansionPanel","_uniqueSelectionDispatcher","_viewContainerRef","_document","_animationMode","defaultOptions","_hideToggle","afterExpand","afterCollapse","_inputChanges","_headerId","_bodyAnimationDone","pipe","x","y","fromState","toState","event","hideToggle","value","togglePosition","_togglePosition","_hasSpacing","displayMode","_getExpandedState","ngAfterContentInit","_lazyContent","_portal","_containsFocus","_body","focusedElement","activeElement","bodyElement","nativeElement","contains","ViewContainerRef","ɵcmp","CdkPortalOutlet","encapsulation","None","changeDetection","OnPush","inputs","outputs","animations","host","template","styles","MatExpansionPanelActionRow","class","MatExpansionPanelHeaderBase","_MatExpansionPanelHeaderMixinBase","MatExpansionPanelHeader","panel","_element","_focusMonitor","tabIndex","_parentChangeSubscription","accordionHideToggleChange","parseInt","focusVia","expandedHeight","collapsedHeight","_toggle","_isExpanded","_getPanelId","_getTogglePosition","_showToggle","_getHeaderHeight","isExpanded","_keydown","keyCode","preventDefault","_handleHeaderKeydown","focus","origin","options","ngAfterViewInit","monitor","_handleHeaderFocus","stopMonitoring","ElementRef","FocusMonitor","NgIf","MatExpansionPanelDescription","MatExpansionPanelTitle","MatAccordion","arguments","_ownHeaders","show","_headers","headers","reset","header","notifyOnChanges","_keyManager","withWrap","withHomeAndEnd","onKeydown","updateActiveItem","destroy","descendants","MatExpansionModule","imports","SecurityContext","Injectable","ErrorHandler","inject","mixinColor","of","throwError","forkJoin","tap","map","catchError","finalize","share","HttpClient","DomSanitizer","policy","getPolicy","window","ttWindow","trustedTypes","createPolicy","createHTML","s","trustedHTMLFromString","html","_a","getMatIconNameNotFoundError","iconName","Error","getMatIconNoHttpProviderError","getMatIconFailedToSanitizeUrlError","url","getMatIconFailedToSanitizeLiteralError","literal","SvgIconConfig","svgText","MatIconRegistry","_httpClient","_sanitizer","document","_errorHandler","_svgIconConfigs","Map","_iconSetConfigs","_cachedIconsByUrl","_inProgressUrlFetches","_fontCssClassesByAlias","_resolvers","_defaultFontSetClass","addSvgIcon","addSvgIconInNamespace","addSvgIconLiteral","addSvgIconLiteralInNamespace","namespace","_addSvgIconConfig","addSvgIconResolver","resolver","push","cleanLiteral","sanitize","HTML","trustedLiteral","addSvgIconSet","addSvgIconSetInNamespace","addSvgIconSetLiteral","addSvgIconSetLiteralInNamespace","_addSvgIconSetConfig","registerFontClassAlias","alias","className","set","classNameForFontAlias","get","setDefaultFontSetClass","getDefaultFontSetClass","getSvgIconFromUrl","safeUrl","RESOURCE_URL","cachedIcon","cloneSvg","_loadSvgIconFromConfig","svg","getNamedSvgIcon","name","key","iconKey","config","_getSvgFromConfig","_getIconConfigFromResolvers","iconSetConfigs","_getSvgFromIconSetConfigs","clear","_svgElementFromConfig","namedIcon","_extractIconWithNameFromAnySet","iconSetFetchRequests","iconSetConfig","_loadSvgIconSetFromConfig","err","errorMessage","message","handleError","foundIcon","i","length","toString","indexOf","_extractSvgIconFromSet","_fetchIcon","iconSet","iconSource","querySelector","iconElement","cloneNode","removeAttribute","nodeName","toLowerCase","_setSvgAttributes","_toSvgElement","_svgElementFromString","appendChild","str","div","createElement","innerHTML","element","attributes","setAttribute","childNodes","nodeType","ELEMENT_NODE","viewBox","iconConfig","withCredentials","inProgressFetch","req","responseType","delete","configNamespace","svgElement","result","isSafeUrlWithOptions","ɵprov","providedIn","ICON_REGISTRY_PROVIDER_FACTORY","parentRegistry","httpClient","sanitizer","errorHandler","ICON_REGISTRY_PROVIDER","deps","useFactory","_MatIconBase","_elementRef","MAT_ICON_LOCATION","factory","MAT_ICON_LOCATION_FACTORY","_location","location","getPathname","pathname","search","funcIriAttributes","funcIriAttributeSelector","attr","join","funcIriPattern","MatIcon","elementRef","_iconRegistry","ariaHidden","_inline","_currentIconFetch","inline","svgIcon","_svgIcon","_updateSvgIcon","_clearSvgElement","fontSet","_fontSet","newValue","_cleanupFontValue","_updateFontIconClasses","fontIcon","_fontIcon","_splitIconName","parts","split","ngOnInit","ngAfterViewChecked","cachedElements","_elementsWithExternalReferences","size","newPath","_previousPath","_prependPathToReferences","_usingFontIcon","_setSvgElement","styleTags","querySelectorAll","textContent","path","_cacheChildrenWithExternalReferences","layoutElement","childCount","child","remove","elem","fontSetClass","_previousFontSetClass","classList","add","_previousFontIconClass","trim","elements","forEach","attrs","elementsWithFuncIri","elementWithReference","getAttribute","match","rawName","_svgNamespace","_svgName","MatIconModule","forwardRef","mixinDisabled","mixinDisableRipple","setLines","MatLine","MatLineModule","MatRippleModule","MatPseudoCheckboxModule","takeUntil","SelectionModel","A","UP_ARROW","DOWN_ARROW","NG_VALUE_ACCESSOR","MatDividerModule","_MatListBase","_MatListItemMixinBase","MAT_LIST","MAT_NAV_LIST","MatNavList","MatList","_getListType","MatListAvatarCssMatStyler","MatListIconCssMatStyler","MatListSubheaderCssMatStyler","MatListItem","navList","list","_isInteractiveList","_destroyed","_list","_getHostElement","hasAttribute","_lines","_isRippleDisabled","disableRipple","MatRipple","_avatar","_icon","_MatSelectionListBase","_MatListOptionBase","MAT_SELECTION_LIST_VALUE_ACCESSOR","MatSelectionList","MatSelectionListChange","source","option","MatListOption","_changeDetector","selectionList","_selected","_hasFocus","selectedChange","checkboxPosition","_inputsInitialized","color","_color","_value","selected","compareWith","selectedOptions","isSelected","_setSelected","multiple","_reportValueChange","some","wasSelected","Promise","resolve","then","hadFocus","newActiveItem","_removeOptionFromList","getLabel","_text","_handleClick","_emitChangeEvent","_handleFocus","_setFocusedOption","_handleBlur","_onTouched","select","deselect","_markForCheck","MatPseudoCheckbox","_multiple","_contentInitialized","selectionChange","a1","a2","_tabIndex","_onChange","_","_markOptionsForCheck","ngDevMode","withTypeAhead","skipPredicate","withAllowedModifierKeys","_setOptionsFromValues","tabOut","_allowFocusEscape","_updateTabIndex","changed","added","item","removed","toFocus","setActiveItem","disableRippleChanges","colorChanges","firstChange","_isDestroyed","selectAll","_setAllOptionsSelected","deselectAll","optionIndex","_getOptionIndex","activeItemIndex","Math","min","activeItem","manager","previousFocusIndex","hasModifier","isTyping","_toggleFocusedOption","shouldSelect","shiftKey","_getSelectedOptionValues","writeValue","values","setDisabledState","isDisabled","registerOnChange","fn","registerOnTouched","correspondingOption","find","focusedIndex","_isValidIndex","focusedOption","toArray","skipDisabled","isUserInput","changedOptions","index","setTimeout","MatListModule","isFakeTouchstartFromScreenReader","isFakeMousedownFromScreenReader","RIGHT_ARROW","LEFT_ARROW","ESCAPE","Self","asapScheduler","switchMap","delay","DomPortalOutlet","i1$1","Overlay","OverlayConfig","OverlayModule","normalizePassiveListenerOptions","i3$1","CdkScrollableModule","matMenuAnimations","transformMenu","opacity","fadeInItems","MAT_MENU_CONTENT","_MatMenuContentBase","_componentFactoryResolver","_appRef","_injector","_attached","attach","context","detach","_outlet","parentNode","insertBefore","outletElement","isAttached","dispose","ComponentFactoryResolver","ApplicationRef","Injector","MatMenuContent","throwMatMenuMissingError","throwMatMenuInvalidPositionX","throwMatMenuInvalidPositionY","throwMatMenuRecursiveError","MAT_MENU_PANEL","_MatMenuItemBase","MatMenuItem","_parentMenu","role","_hovered","_focused","_highlighted","_triggersSubmenu","addItem","removeItem","_getTabIndex","_checkDisabled","stopPropagation","_handleMouseEnter","clone","icons","_setHighlighted","isHighlighted","MAT_MENU_DEFAULT_OPTIONS","MAT_MENU_DEFAULT_OPTIONS_FACTORY","overlapTrigger","xPosition","yPosition","backdropClass","menuPanelUid","_MatMenuBase","_ngZone","_defaultOptions","_xPosition","_yPosition","_directDescendantItems","_tabSubscription","_classList","_panelAnimationState","_animationDone","overlayPanelClass","_overlapTrigger","_hasBackdrop","hasBackdrop","panelId","setPositionClasses","panelClass","classes","previousPanelClass","_previousPanelClass","_updateDirectDescendants","items","focusedItem","itemChanges","_item","_handleKeydown","parentMenu","direction","setFocusOrigin","focusFirstItem","lazyContent","onStable","_focusFirstItem","setFirstItemActive","first","parentElement","resetActiveItem","setElevation","depth","elevation","_baseElevation","newElevation","_elevationPrefix","customElevation","Object","keys","startsWith","_previousElevation","posX","posY","_startAnimation","_resetAnimation","_onAnimationDone","_isAnimating","_onAnimationStart","scrollTop","_allItems","NgZone","ariaLabel","ariaLabelledby","ariaDescribedby","templateRef","MatMenu","ngZone","NgClass","MAT_MENU_SCROLL_STRATEGY","MAT_MENU_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER","MENU_PANEL_TOP_PADDING","passiveEventListenerOptions","passive","_MatMenuTriggerBase","_overlay","scrollStrategy","_menuItemInstance","_dir","_overlayRef","_menuOpen","_closingActionsSubscription","_hoverSubscription","_menuCloseSubscription","_handleTouchStart","_openedBy","restoreFocus","menuOpened","onMenuOpen","menuClosed","onMenuClose","_scrollStrategy","_parentMaterialMenu","addEventListener","triggersSubmenu","_deprecatedMatMenuTriggerFor","menu","v","_menu","reason","_destroyMenu","_checkMenu","_handleHover","removeEventListener","menuOpen","dir","toggleMenu","closeMenu","openMenu","overlayRef","_createOverlay","overlayConfig","getConfig","_setPosition","positionStrategy","_getPortal","menuData","_menuClosingActions","_initMenu","updatePosition","_setIsMenuOpen","_setMenuElevation","isOpen","_getOverlayConfig","_subscribeToPositions","create","keydownEvents","position","flexibleConnectedTo","withLockedPosition","withGrowAfterOpen","withTransformOriginOn","positionChanges","change","connectionPair","overlayX","overlayY","originX","originFallbackX","overlayFallbackY","originY","originFallbackY","overlayFallbackX","offsetY","withPositions","backdrop","backdropClick","detachments","parentClose","hover","active","_handleMousedown","button","Directionality","MatMenuTrigger","MatMenuModule","i7","CdkConnectedOverlay","i8","mixinErrorState","_countGroupLabelsBeforeOption","_getOptionScrollPosition","MAT_OPTION_PARENT_COMPONENT","MatOption","MAT_OPTGROUP","MatOptionModule","i6","MAT_FORM_FIELD","MatFormFieldControl","MatFormFieldModule","i5","ActiveDescendantKeyManager","coerceNumberProperty","i4","Validators","defer","query","animateChild","matSelectAnimations","transformPanelWrap","optional","transformPanel","minWidth","getMatSelectDynamicMultipleError","getMatSelectNonArrayValueError","getMatSelectNonFunctionValueError","nextUniqueId","SELECT_PANEL_MAX_HEIGHT","SELECT_PANEL_PADDING_X","SELECT_PANEL_INDENT_PADDING_X","SELECT_ITEM_HEIGHT_EM","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_VIEWPORT_PADDING","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MatSelectChange","_MatSelectMixinBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","MAT_SELECT_TRIGGER","MatSelectTrigger","_MatSelectBase","_viewportRuler","_parentFormField","scrollStrategyFactory","_liveAnnouncer","_b","_c","_panelOpen","_compareWith","o1","o2","_uid","_triggerAriaLabelledBy","_destroy","_valueId","_panelDoneAnimatingStream","_overlayPanelClass","controlType","_disableOptionCentering","disableOptionCentering","optionSelectionChanges","onSelectionChange","openedChange","_openedStream","o","_closedStream","valueChange","valueAccessor","typeaheadDebounceInterval","_typeaheadDebounceInterval","_scrollStrategyFactory","focused","placeholder","_placeholder","stateChanges","required","_d","_required","control","hasValidator","_selectionModel","_initializeSelection","Array","isArray","_setSelectionByValue","_id","_panelDoneAnimating","panelOpen","_initKeyManager","_resetOptions","ngDoCheck","newAriaLabelledby","_getTriggerAriaLabelledby","updateErrorState","_canOpen","withHorizontalOrientation","_highlightCorrectOption","_isRtl","triggerValue","empty","viewValue","reverse","_handleOpenKeydown","_handleClosedKeydown","isArrowKey","isOpenKey","altKey","previouslySelectedOption","selectedOption","announce","_selectViaInteraction","ctrlKey","hasDeselectedOptions","opt","previouslyFocusedIndex","_onFocus","_onBlur","_onAttached","_overlayDir","positionChange","detectChanges","_positioningSettled","_getPanelTheme","isEmpty","setInactiveStyles","currentValue","_selectValue","_sortValues","error","console","warn","withVerticalOrientation","_scrollOptionIntoView","changedOrDestroyed","_onSelect","_propagateChanges","sort","a","b","sortComparator","fallbackValue","valueToEmit","_getChangeEvent","_getPanelAriaLabelledby","labelId","getLabelId","labelExpression","_getAriaActiveDescendant","setDescribedByIds","ids","_ariaDescribedby","onContainerClick","shouldLabelFloat","ViewportRuler","ErrorStateMatcher","NgForm","FormGroupDirective","NgControl","LiveAnnouncer","MatFormField","errorStateMatcher","MatSelect","_scrollTop","_triggerFontSize","_transformOrigin","_offsetY","_positions","_calculateOverlayScroll","selectedIndex","scrollBuffer","maxScroll","itemHeight","_getItemHeight","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","max","_triggerRect","getBoundingClientRect","getComputedStyle","fontSize","_calculateOverlayPosition","overlayElement","labelCount","optionGroups","_calculateOverlayOffsetX","offsetX","overlayRect","viewportSize","getViewportSize","isRtl","paddingWidth","group","leftOverflow","left","rightOverflow","right","width","round","_calculateOverlayOffsetY","optionHeightAdjustment","maxOptionsDisplayed","floor","optionOffsetFromPanelTop","firstDisplayedIndex","_getItemCount","selectedDisplayIndex","partialItemHeight","_checkOverlayWithinViewport","topSpaceAvailable","top","bottomSpaceAvailable","bottom","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","panelHeight","scrollContainerHeight","selectedOptionOffset","CdkOverlayOrigin","NgSwitch","NgSwitchCase","NgSwitchDefault","customTrigger","MatSelectModule","PlatformModule","CdkScrollable","fromEvent","mapTo","debounceTime","matDrawerAnimations","transformDrawer","throwMatDuplicatedDrawerError","MAT_DRAWER_DEFAULT_AUTOSIZE","MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY","MAT_DRAWER_CONTAINER","MatDrawerContent","_container","scrollDispatcher","_contentMarginChanges","MatDrawerContainer","ScrollDispatcher","MatDrawer","_focusTrapFactory","_platform","_interactivityChecker","_doc","_elementFocusedBeforeDrawerWasOpened","_enableAnimations","_position","_mode","_disableClose","_opened","_animationStarted","_animationEnd","_animationState","openedStart","e","closedStart","onPositionChanged","_modeChanged","_takeFocus","_isFocusWithinDrawer","_restoreFocus","_openedVia","runOutsideAngular","disableClose","run","mode","_updateFocusTrapState","autoFocus","_autoFocus","_forceFocus","isFocusable","_focusByCssSelector","elementToFocus","_focusTrap","focusInitialElementWhenReady","hasMovedFocus","focusOrigin","blur","activeEl","ngAfterContentChecked","isBrowser","openedVia","_closeViaBackdropClick","_setOpen","_getWidth","offsetWidth","enabled","FocusTrapFactory","Platform","InteractivityChecker","viewportRuler","defaultAutosize","_drawers","_doCheckSubject","_contentMargins","_validateDrawers","updateContentMargins","_autosize","start","_start","end","_end","autosize","_backdropOverride","scrollable","_userContent","_content","_allDrawers","drawer","_watchDrawerToggle","_watchDrawerPosition","_watchDrawerMode","_isDrawerOpen","_left","_right","_isPushed","_setContainerClass","onMicrotaskEmpty","isAdd","_onBackdropClicked","_closeModalDrawersViaBackdrop","_canHaveBackdrop","_isShowingBackdrop","MatSidenavContent","changeDetectorRef","container","MatSidenavContainer","MatSidenav","_fixedInViewport","_fixedTopGap","_fixedBottomGap","fixedInViewport","fixedTopGap","fixedBottomGap","MatSidenavModule","A11yModule","ObserversModule","i7$1","CdkPortal","MAT_RIPPLE_GLOBAL_OPTIONS","RippleRenderer","timer","_MAT_INK_BAR_POSITIONER","_MAT_INK_BAR_POSITIONER_FACTORY","method","offsetLeft","MatInkBar","_inkBarPositioner","alignToElement","requestAnimationFrame","_setStyles","hide","positions","inkBar","MAT_TAB_CONTENT","MatTabContent","MAT_TAB_LABEL","MAT_TAB","MatTabLabel","viewContainerRef","_closestTab","_MatTabBase","MAT_TAB_GROUP","MatTab","_closestTabGroup","textLabel","_contentPortal","isActive","templateLabel","_templateLabel","_setTemplateLabelInput","content","hasOwnProperty","_explicitContent","_implicitContent","Default","read","static","matTabsAnimations","translateTab","minHeight","MatTabBodyPortal","componentFactoryResolver","_host","_centeringSub","_leavingSub","_beforeCentering","_isCenterPosition","isCentering","hasAttached","_afterLeavingCenter","MatTabBody","_MatTabBodyBase","_dirChangeSubscription","_translateTabComplete","_onCentering","_onCentered","animationDuration","_computePositionAnimationState","_positionIndex","_computePositionFromOrigin","_onTranslateTabStarted","clientHeight","_getLayoutDirection","_portalHost","MAT_TABS_CONFIG","_MatTabLabelWrapperBase","MatTabLabelWrapper","getOffsetLeft","getOffsetWidth","EXAGGERATED_OVERSCROLL","HEADER_SCROLL_DELAY","HEADER_SCROLL_INTERVAL","MatPaginatedTabHeader","_scrollDistance","_selectedIndexChanged","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","disablePagination","_selectedIndex","selectFocusedIndex","indexFocused","_stopInterval","_previousPaginator","_handlePaginatorPress","_nextPaginator","dirChange","resize","realign","updatePagination","_alignInkBarToSelectedTab","_items","newFocusIndex","_setTabFocus","_tabLabelCount","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","focusIndex","_itemSelected","_onContentChanges","_currentTextContent","_checkPaginationEnabled","tab","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","_tabList","TRIDENT","EDGE","_scrollTo","_scrollHeader","viewLength","scrollAmount","_handlePaginatorClick","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","_tabListInner","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","lengthOfTabList","selectedItem","selectedLabelWrapper","_inkBar","mouseEvent","maxScrollDistance","distance","_MatTabHeaderBase","platform","animationMode","_disableRipple","MatTabHeader","CdkObserveContent","MatTabChangeEvent","_MatTabGroupMixinBase","_MatTabGroupBase","defaultConfig","_tabs","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","dynamicHeight","contentTabIndex","_dynamicHeight","_animationDuration","test","_contentTabIndex","backgroundColor","_backgroundColor","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","wrapper","_tabBodyWrapper","_subscribeToAllTabChanges","_subscribeToTabLabels","tabs","_allTabs","realignInkBar","_tabHeader","focusTab","_focusChanged","_getTabLabelId","_getTabContentId","_setTabBodyWrapperHeight","tabHeight","offsetHeight","_removeTabBodyWrapperHeight","tabHeader","idx","_tabFocusChanged","MatTabGroup","NgForOf","CdkMonitorFocus","_MatTabNavBase","updateActiveLink","MatTabNav","MatTabLink","_MatTabLinkMixinBase","_MatTabLinkBase","_tabNavBar","globalRippleOptions","_isActive","rippleConfig","animation","enterDuration","exitDuration","rippleDisabled","tabNavBar","focusMonitor","_tabLinkRipple","setupTriggerEvents","_removeTriggerEvents","MatTabsModule","_MatToolbarBase","MatToolbarRow","MatToolbar","_checkToolbarMixedModes","_toolbarRows","isCombinedUsage","from","node","COMMENT_NODE","throwToolbarMixedModesError","MatToolbarModule","HostBinding","HostListener","Pipe","FileInput","_files","delimiter","_fileNames","f","files","fileNames","FileInputBase","FileInputMixinBase","FileInputComponent","fm","_renderer","autofilled","accept","describedBy","fileInput","plh","valuePlaceholder","dis","target","tagName","obj","setProperty","fileList","fileArray","click","Renderer2","NGX_MAT_FILE_INPUT_CONFIG","ByteFormatPipe","unit","sizeUnit","formatBytes","bytes","decimals","B","charAt","k","dm","sizes","log","parseFloat","pow","toFixed","ɵpipe","MaterialFileInputModule","FileValidator","maxContentSize","reduce","acc","condition","actualSize","maxSize"],"sourceRoot":"webpack:///"}