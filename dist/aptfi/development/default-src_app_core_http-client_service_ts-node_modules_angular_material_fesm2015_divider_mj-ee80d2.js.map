{"version":3,"file":"default-src_app_core_http-client_service_ts-node_modules_angular_material_fesm2015_divider_mj-ee80d2.js","mappings":"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","sources":["./src/app/core/http-client.service.ts","./node_modules/@angular/cdk/fesm2015/text-field.mjs","./node_modules/@angular/material/fesm2015/divider.mjs","./node_modules/@angular/material/fesm2015/form-field.mjs","./node_modules/@angular/material/fesm2015/input.mjs"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngxs/store';\nimport { AppState } from '../app.state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpClientService {\n  headers!: HttpHeaders;\n\n  constructor(private http: HttpClient, private store: Store) {}\n\n  get(\n    path: string,\n    options?: {\n      headers?:\n        | HttpHeaders\n        | {\n            [header: string]: string | string[];\n          };\n      observe?: 'body';\n      params?:\n        | HttpParams\n        | {\n            [param: string]: string | string[];\n          };\n      reportProgress?: boolean;\n      responseType?: 'json';\n      withCredentials?: boolean;\n    }\n  ): Observable<any> {\n    return this.http.get<any>(path, options);\n  }\n\n  download(url: string, options: any): Observable<any> {\n    const headers = new HttpHeaders();\n    this.createAuthorizationHeader(headers);\n    options.headers = headers;\n    return this.http.get(url, options);\n  }\n\n  post(path: string, data: object): Observable<any> {\n    return this.http.post<any>(path, data);\n  }\n\n  put(path: string, data: object): Observable<any> {\n    return this.http.put<any>(path, data);\n  }\n\n  postProgress(\n    path: string,\n    data: object,\n    options: {\n      headers?: HttpHeaders;\n      observe: 'events';\n      reportProgress: true;\n    } = {\n      observe: 'events',\n      reportProgress: true,\n    }\n  ) {\n    return this.http.post(path, data, options);\n  }\n\n  delete(\n    path: string,\n    options?: {\n      headers?:\n        | HttpHeaders\n        | {\n            [header: string]: string | string[];\n          };\n      observe?: 'body';\n      params?:\n        | HttpParams\n        | {\n            [param: string]: string | string[];\n          };\n      reportProgress?: boolean;\n      responseType?: 'json';\n      withCredentials?: boolean;\n    }\n  ): Observable<any> {\n    return this.http.delete<any>(path, options);\n  }\n\n  createAuthorizationHeader(headers: HttpHeaders) {\n    const appState = this.store.selectSnapshot(AppState);\n\n    if (appState.session?.accessToken) {\n      headers.append('Authorization', appState.session.accessToken);\n    } else {\n    }\n  }\n}\n","import * as i1 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions, PlatformModule } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Directive, Output, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options to pass to the animationstart listener. */\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject;\n        }\n        const result = new Subject();\n        const cssClass = 'cdk-text-field-autofilled';\n        const listener = ((event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: true }));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: false }));\n            }\n        });\n        this._ngZone.runOutsideAngular(() => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        });\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            },\n        });\n        return result;\n    }\n    stopMonitoring(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    ngOnDestroy() {\n        this._monitoredElements.forEach((_info, element) => this.stopMonitoring(element));\n    }\n}\nAutofillMonitor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AutofillMonitor, deps: [{ token: i1.Platform }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nAutofillMonitor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AutofillMonitor, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AutofillMonitor, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }, { type: i0.NgZone }]; } });\n/** A directive that can be used to monitor the autofill state of an input. */\nclass CdkAutofill {\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /** Emits when the autofill state of the element changes. */\n        this.cdkAutofill = new EventEmitter();\n    }\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe(event => this.cdkAutofill.emit(event));\n    }\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkAutofill, deps: [{ token: i0.ElementRef }, { token: AutofillMonitor }], target: i0.ɵɵFactoryTarget.Directive });\nCdkAutofill.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkAutofill, selector: \"[cdkAutofill]\", outputs: { cdkAutofill: \"cdkAutofill\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkAutofill, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkAutofill]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: AutofillMonitor }]; }, propDecorators: { cdkAutofill: [{\n                type: Output\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Directive to automatically resize a textarea to fit its content. */\nclass CdkTextareaAutosize {\n    constructor(_elementRef, _platform, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._isViewInited = false;\n        /** Handles `focus` and `blur` events. */\n        this._handleFocusEvent = (event) => {\n            this._hasFocus = event.type === 'focus';\n        };\n        this._document = document;\n        this._textareaElement = this._elementRef.nativeElement;\n    }\n    /** Minimum amount of rows in the textarea. */\n    get minRows() {\n        return this._minRows;\n    }\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /** Maximum amount of rows in the textarea. */\n    get maxRows() {\n        return this._maxRows;\n    }\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /** Whether autosizing is enabled or not */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    get placeholder() {\n        return this._textareaElement.placeholder;\n    }\n    set placeholder(value) {\n        this._cachedPlaceholderHeight = undefined;\n        this._textareaElement.placeholder = value;\n        this._cacheTextareaPlaceholderHeight();\n    }\n    /** Sets the minimum height of the textarea as determined by minRows. */\n    _setMinHeight() {\n        const minHeight = this.minRows && this._cachedLineHeight ? `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /** Sets the maximum height of the textarea as determined by maxRows. */\n    _setMaxHeight() {\n        const maxHeight = this.maxRows && this._cachedLineHeight ? `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe(() => this.resizeToFitContent(true));\n                this._textareaElement.addEventListener('focus', this._handleFocusEvent);\n                this._textareaElement.addEventListener('blur', this._handleFocusEvent);\n            });\n            this._isViewInited = true;\n            this.resizeToFitContent(true);\n        }\n    }\n    ngOnDestroy() {\n        this._textareaElement.removeEventListener('focus', this._handleFocusEvent);\n        this._textareaElement.removeEventListener('blur', this._handleFocusEvent);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        let textareaClone = this._textareaElement.cloneNode(false);\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        this._textareaElement.parentNode.appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        textareaClone.remove();\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    _measureScrollHeight() {\n        const element = this._textareaElement;\n        const previousMargin = element.style.marginBottom || '';\n        const isFirefox = this._platform.FIREFOX;\n        const needsMarginFiller = isFirefox && this._hasFocus;\n        const measuringClass = isFirefox\n            ? 'cdk-textarea-autosize-measuring-firefox'\n            : 'cdk-textarea-autosize-measuring';\n        // In some cases the page might move around while we're measuring the `textarea` on Firefox. We\n        // work around it by assigning a temporary margin with the same height as the `textarea` so that\n        // it occupies the same amount of space. See #23233.\n        if (needsMarginFiller) {\n            element.style.marginBottom = `${element.clientHeight}px`;\n        }\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        element.classList.add(measuringClass);\n        // The measuring class includes a 2px padding to workaround an issue with Chrome,\n        // so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        const scrollHeight = element.scrollHeight - 4;\n        element.classList.remove(measuringClass);\n        if (needsMarginFiller) {\n            element.style.marginBottom = previousMargin;\n        }\n        return scrollHeight;\n    }\n    _cacheTextareaPlaceholderHeight() {\n        if (!this._isViewInited || this._cachedPlaceholderHeight != undefined) {\n            return;\n        }\n        if (!this.placeholder) {\n            this._cachedPlaceholderHeight = 0;\n            return;\n        }\n        const value = this._textareaElement.value;\n        this._textareaElement.value = this._textareaElement.placeholder;\n        this._cachedPlaceholderHeight = this._measureScrollHeight();\n        this._textareaElement.value = value;\n    }\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        this._cacheTextareaPlaceholderHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        const textarea = this._elementRef.nativeElement;\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        const scrollHeight = this._measureScrollHeight();\n        const height = Math.max(scrollHeight, this._cachedPlaceholderHeight || 0);\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        this._ngZone.runOutsideAngular(() => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame(() => this._scrollToCaretPosition(textarea));\n            }\n            else {\n                setTimeout(() => this._scrollToCaretPosition(textarea));\n            }\n        });\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && this._hasFocus) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkTextareaAutosize, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: i0.NgZone }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkTextareaAutosize.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkTextareaAutosize, selector: \"textarea[cdkTextareaAutosize]\", inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"], placeholder: \"placeholder\" }, host: { attributes: { \"rows\": \"1\" }, listeners: { \"input\": \"_noopInputHandler()\" }, classAttribute: \"cdk-textarea-autosize\" }, exportAs: [\"cdkTextareaAutosize\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkTextareaAutosize, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'textarea[cdkTextareaAutosize]',\n                    exportAs: 'cdkTextareaAutosize',\n                    host: {\n                        'class': 'cdk-textarea-autosize',\n                        // Textarea elements that have the directive applied should have a single row by default.\n                        // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                        'rows': '1',\n                        '(input)': '_noopInputHandler()',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    }, propDecorators: { minRows: [{\n                type: Input,\n                args: ['cdkAutosizeMinRows']\n            }], maxRows: [{\n                type: Input,\n                args: ['cdkAutosizeMaxRows']\n            }], enabled: [{\n                type: Input,\n                args: ['cdkTextareaAutosize']\n            }], placeholder: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TextFieldModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTextFieldModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TextFieldModule, declarations: [CdkAutofill, CdkTextareaAutosize], imports: [PlatformModule], exports: [CdkAutofill, CdkTextareaAutosize] });\nTextFieldModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TextFieldModule, imports: [[PlatformModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TextFieldModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [CdkAutofill, CdkTextareaAutosize],\n                    imports: [PlatformModule],\n                    exports: [CdkAutofill, CdkTextareaAutosize],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /** Whether the divider is vertically aligned. */\n    get vertical() {\n        return this._vertical;\n    }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** Whether the divider is an inset divider. */\n    get inset() {\n        return this._inset;\n    }\n    set inset(value) {\n        this._inset = coerceBooleanProperty(value);\n    }\n}\nMatDivider.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDivider, deps: [], target: i0.ɵɵFactoryTarget.Component });\nMatDivider.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDivider, selector: \"mat-divider\", inputs: { vertical: \"vertical\", inset: \"inset\" }, host: { attributes: { \"role\": \"separator\" }, properties: { \"attr.aria-orientation\": \"vertical ? \\\"vertical\\\" : \\\"horizontal\\\"\", \"class.mat-divider-vertical\": \"vertical\", \"class.mat-divider-horizontal\": \"!vertical\", \"class.mat-divider-inset\": \"inset\" }, classAttribute: \"mat-divider\" }, ngImport: i0, template: '', isInline: true, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDivider, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-divider', host: {\n                        'role': 'separator',\n                        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                        '[class.mat-divider-vertical]': 'vertical',\n                        '[class.mat-divider-horizontal]': '!vertical',\n                        '[class.mat-divider-inset]': 'inset',\n                        'class': 'mat-divider',\n                    }, template: '', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"] }]\n        }], propDecorators: { vertical: [{\n                type: Input\n            }], inset: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDividerModule {\n}\nMatDividerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDividerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatDividerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDividerModule, declarations: [MatDivider], imports: [MatCommonModule], exports: [MatDivider, MatCommonModule] });\nMatDividerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDividerModule, imports: [[MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDividerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatDivider, MatCommonModule],\n                    declarations: [MatDivider],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n","import * as i4 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Attribute, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i1 from '@angular/cdk/bidi';\nimport * as i2 from '@angular/cdk/platform';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$2 = 0;\n/**\n * Injection token that can be used to reference instances of `MatError`. It serves as\n * alternative token to the actual `MatError` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_ERROR = new InjectionToken('MatError');\n/** Single error message to be shown underneath the form field. */\nclass MatError {\n    constructor(ariaLive, elementRef) {\n        this.id = `mat-error-${nextUniqueId$2++}`;\n        // If no aria-live value is set add 'polite' as a default. This is preferred over setting\n        // role='alert' so that screen readers do not interrupt the current task to read this aloud.\n        if (!ariaLive) {\n            elementRef.nativeElement.setAttribute('aria-live', 'polite');\n        }\n    }\n}\nMatError.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatError, deps: [{ token: 'aria-live', attribute: true }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatError.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatError, selector: \"mat-error\", inputs: { id: \"id\" }, host: { attributes: { \"aria-atomic\": \"true\" }, properties: { \"attr.id\": \"id\" }, classAttribute: \"mat-error\" }, providers: [{ provide: MAT_ERROR, useExisting: MatError }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatError, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-error',\n                    host: {\n                        'class': 'mat-error',\n                        '[attr.id]': 'id',\n                        'aria-atomic': 'true',\n                    },\n                    providers: [{ provide: MAT_ERROR, useExisting: MatError }],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['aria-live']\n                    }] }, { type: i0.ElementRef }];\n    }, propDecorators: { id: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the MatFormField.\n * @docs-private\n */\nconst matFormFieldAnimations = {\n    /** Animation that transitions the form field's error and hint messages. */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-5px)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ]),\n};\n\n/** An interface which allows a control to work inside of a `MatFormField`. */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFormFieldControl, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatFormFieldControl.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatFormFieldControl, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFormFieldControl, decorators: [{\n            type: Directive\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/** @docs-private */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `MatHint`. It serves as\n * alternative token to the actual `MatHint` class which could cause unnecessary\n * retention of the class and its directive metadata.\n *\n * *Note*: This is not part of the public API as the MDC-based form-field will not\n * need a lightweight token for `MatHint` and we want to reduce breaking changes.\n */\nconst _MAT_HINT = new InjectionToken('MatHint');\n/** Hint text to be shown underneath the form field control. */\nclass MatHint {\n    constructor() {\n        /** Whether to align the hint label at the start or end of the line. */\n        this.align = 'start';\n        /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatHint, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatHint.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatHint, selector: \"mat-hint\", inputs: { align: \"align\", id: \"id\" }, host: { properties: { \"class.mat-form-field-hint-end\": \"align === \\\"end\\\"\", \"attr.id\": \"id\", \"attr.align\": \"null\" }, classAttribute: \"mat-hint\" }, providers: [{ provide: _MAT_HINT, useExisting: MatHint }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatHint, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-hint',\n                    host: {\n                        'class': 'mat-hint',\n                        '[class.mat-form-field-hint-end]': 'align === \"end\"',\n                        '[attr.id]': 'id',\n                        // Remove align attribute to prevent it from interfering with layout.\n                        '[attr.align]': 'null',\n                    },\n                    providers: [{ provide: _MAT_HINT, useExisting: MatHint }],\n                }]\n        }], propDecorators: { align: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The floating label for a `mat-form-field`. */\nclass MatLabel {\n}\nMatLabel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatLabel, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatLabel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatLabel, selector: \"mat-label\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-label',\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * @breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatPlaceholder, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatPlaceholder.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatPlaceholder, selector: \"mat-placeholder\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatPlaceholder, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-placeholder',\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_PREFIX = new InjectionToken('MatPrefix');\n/** Prefix to be placed in front of the form field. */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatPrefix, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatPrefix.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatPrefix, selector: \"[matPrefix]\", providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatPrefix, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matPrefix]',\n                    providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SUFFIX = new InjectionToken('MatSuffix');\n/** Suffix to be placed at the end of the form field. */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSuffix, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatSuffix.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatSuffix, selector: \"[matSuffix]\", providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSuffix, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matSuffix]',\n                    providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }],\n                }]\n        }] });\n\nlet nextUniqueId = 0;\nconst floatingLabelScale = 0.75;\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * @docs-private\n */\nconst _MatFormFieldBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/** Container for form controls that applies Material Design styling and behavior. */\nclass MatFormField extends _MatFormFieldBase {\n    constructor(elementRef, _changeDetectorRef, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /** Whether the outline gap needs to be calculated next time the zone has stabilized. */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /** Override for the logic that disables the label animation in certain cases. */\n        this._showAlwaysAnimate = false;\n        /** State of the mat-hint and mat-error animations. */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId++}`;\n        // Unique id for the label element.\n        this._labelId = `mat-form-field-label-${nextUniqueId++}`;\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = _defaults && _defaults.appearance ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker =\n            _defaults && _defaults.hideRequiredMarker != null ? _defaults.hideRequiredMarker : false;\n    }\n    /** The form-field appearance style. */\n    get appearance() {\n        return this._appearance;\n    }\n    set appearance(value) {\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /** Whether the required marker should be hidden. */\n    get hideRequiredMarker() {\n        return this._hideRequiredMarker;\n    }\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /** Whether the floating label should always float or not. */\n    _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /** Whether the label can float or not. */\n    _canLabelFloat() {\n        return this.floatLabel !== 'never';\n    }\n    /** Text for the form field hint. */\n    get hintLabel() {\n        return this._hintLabel;\n    }\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * Gets the id of the label element. If no label is present, returns `null`.\n     */\n    getLabelId() {\n        return this._hasFloatingLabel() ? this._labelId : null;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    ngAfterContentInit() {\n        this._validateControlChild();\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith(null)).subscribe(() => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            });\n        });\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        });\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular(() => {\n                        requestAnimationFrame(() => this.updateOutlineGap());\n                    });\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            });\n        }\n    }\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop) {\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    _hasPlaceholder() {\n        return !!((this._control && this._control.placeholder) || this._placeholderChild);\n    }\n    _hasLabel() {\n        return !!(this._labelChildNonStatic || this._labelChildStatic);\n    }\n    _shouldLabelFloat() {\n        return (this._canLabelFloat() &&\n            ((this._control && this._control.shouldLabelFloat) || this._shouldAlwaysFloat()));\n    }\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return ((this.appearance === 'legacy' && !this._hasLabel()) ||\n            (this._hasLabel() && !this._shouldLabelFloat()));\n    }\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || (this.appearance === 'legacy' && this._hasPlaceholder());\n    }\n    /** Determines whether to display hints or errors. */\n    _getDisplayedMessages() {\n        return this._errorChildren && this._errorChildren.length > 0 && this._control.errorState\n            ? 'error'\n            : 'hint';\n    }\n    /** Animates the placeholder up and locks it in position. */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat()) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend')\n                    .pipe(take(1))\n                    .subscribe(() => {\n                    this._showAlwaysAnimate = false;\n                });\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder &&\n            this._placeholderChild &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /** Does any extra processing that is required when handling the hints. */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     */\n    _validateHints() {\n        if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            let startHint;\n            let endHint;\n            this._hintChildren.forEach((hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            });\n        }\n    }\n    /** Gets the default float label state. */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            let ids = [];\n            // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n            if (this._control.userAriaDescribedBy &&\n                typeof this._control.userAriaDescribedBy === 'string') {\n                ids.push(...this._control.userAriaDescribedBy.split(' '));\n            }\n            if (this._getDisplayedMessages() === 'hint') {\n                const startHint = this._hintChildren\n                    ? this._hintChildren.find(hint => hint.align === 'start')\n                    : null;\n                const endHint = this._hintChildren\n                    ? this._hintChildren.find(hint => hint.align === 'end')\n                    : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids.push(...this._errorChildren.map(error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /** Throws an error if the form field's control is missing. */\n    _validateControlChild() {\n        if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     */\n    updateOutlineGap() {\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' ||\n            !labelEl ||\n            !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        let startWidth = 0;\n        let gapWidth = 0;\n        const container = this._connectionContainerRef.nativeElement;\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            const containerStart = this._getStartEnd(containerRect);\n            const labelChildren = labelEl.children;\n            const labelStart = this._getStartEnd(labelChildren[0].getBoundingClientRect());\n            let labelWidth = 0;\n            for (let i = 0; i < labelChildren.length; i++) {\n                labelWidth += labelChildren[i].offsetWidth;\n            }\n            startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable = this._outlineGapCalculationNeededImmediately =\n            false;\n    }\n    /** Gets the start end of the rect considering the current directionality. */\n    _getStartEnd(rect) {\n        return this._dir && this._dir.value === 'rtl' ? rect.right : rect.left;\n    }\n    /** Checks whether the form field is attached to the DOM. */\n    _isAttachedToDOM() {\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return document.documentElement.contains(element);\n    }\n}\nMatFormField.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFormField, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.Directionality, optional: true }, { token: MAT_FORM_FIELD_DEFAULT_OPTIONS, optional: true }, { token: i2.Platform }, { token: i0.NgZone }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatFormField.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatFormField, selector: \"mat-form-field\", inputs: { color: \"color\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\", floatLabel: \"floatLabel\" }, host: { properties: { \"class.mat-form-field-appearance-standard\": \"appearance == \\\"standard\\\"\", \"class.mat-form-field-appearance-fill\": \"appearance == \\\"fill\\\"\", \"class.mat-form-field-appearance-outline\": \"appearance == \\\"outline\\\"\", \"class.mat-form-field-appearance-legacy\": \"appearance == \\\"legacy\\\"\", \"class.mat-form-field-invalid\": \"_control.errorState\", \"class.mat-form-field-can-float\": \"_canLabelFloat()\", \"class.mat-form-field-should-float\": \"_shouldLabelFloat()\", \"class.mat-form-field-has-label\": \"_hasFloatingLabel()\", \"class.mat-form-field-hide-placeholder\": \"_hideControlPlaceholder()\", \"class.mat-form-field-disabled\": \"_control.disabled\", \"class.mat-form-field-autofilled\": \"_control.autofilled\", \"class.mat-focused\": \"_control.focused\", \"class.ng-untouched\": \"_shouldForward(\\\"untouched\\\")\", \"class.ng-touched\": \"_shouldForward(\\\"touched\\\")\", \"class.ng-pristine\": \"_shouldForward(\\\"pristine\\\")\", \"class.ng-dirty\": \"_shouldForward(\\\"dirty\\\")\", \"class.ng-valid\": \"_shouldForward(\\\"valid\\\")\", \"class.ng-invalid\": \"_shouldForward(\\\"invalid\\\")\", \"class.ng-pending\": \"_shouldForward(\\\"pending\\\")\", \"class._mat-animation-noopable\": \"!_animationsEnabled\" }, classAttribute: \"mat-form-field\" }, providers: [{ provide: MAT_FORM_FIELD, useExisting: MatFormField }], queries: [{ propertyName: \"_controlNonStatic\", first: true, predicate: MatFormFieldControl, descendants: true }, { propertyName: \"_controlStatic\", first: true, predicate: MatFormFieldControl, descendants: true, static: true }, { propertyName: \"_labelChildNonStatic\", first: true, predicate: MatLabel, descendants: true }, { propertyName: \"_labelChildStatic\", first: true, predicate: MatLabel, descendants: true, static: true }, { propertyName: \"_placeholderChild\", first: true, predicate: MatPlaceholder, descendants: true }, { propertyName: \"_errorChildren\", predicate: MAT_ERROR, descendants: true }, { propertyName: \"_hintChildren\", predicate: _MAT_HINT, descendants: true }, { propertyName: \"_prefixChildren\", predicate: MAT_PREFIX, descendants: true }, { propertyName: \"_suffixChildren\", predicate: MAT_SUFFIX, descendants: true }], viewQueries: [{ propertyName: \"_connectionContainerRef\", first: true, predicate: [\"connectionContainer\"], descendants: true, static: true }, { propertyName: \"_inputContainerRef\", first: true, predicate: [\"inputContainer\"], descendants: true }, { propertyName: \"_label\", first: true, predicate: [\"label\"], descendants: true }], exportAs: [\"matFormField\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div\\n      class=\\\"mat-form-field-prefix\\\"\\n      *ngIf=\\\"_prefixChildren.length\\\"\\n      (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n      [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\"\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-form-field-flex{outline:dashed 3px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element:not([type=password])::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px)}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{border:3px dashed}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }, { type: i3.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i3.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }], animations: [matFormFieldAnimations.transitionMessages], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFormField, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-form-field', exportAs: 'matFormField', animations: [matFormFieldAnimations.transitionMessages], host: {\n                        'class': 'mat-form-field',\n                        '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                        '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                        '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                        '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                        '[class.mat-form-field-invalid]': '_control.errorState',\n                        '[class.mat-form-field-can-float]': '_canLabelFloat()',\n                        '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                        '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                        '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                        '[class.mat-form-field-disabled]': '_control.disabled',\n                        '[class.mat-form-field-autofilled]': '_control.autofilled',\n                        '[class.mat-focused]': '_control.focused',\n                        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                        '[class.ng-touched]': '_shouldForward(\"touched\")',\n                        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                        '[class.ng-valid]': '_shouldForward(\"valid\")',\n                        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                        '[class.ng-pending]': '_shouldForward(\"pending\")',\n                        '[class._mat-animation-noopable]': '!_animationsEnabled',\n                    }, inputs: ['color'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MAT_FORM_FIELD, useExisting: MatFormField }], template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div\\n      class=\\\"mat-form-field-prefix\\\"\\n      *ngIf=\\\"_prefixChildren.length\\\"\\n      (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n      [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\"\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-form-field-flex{outline:dashed 3px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element:not([type=password])::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px)}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{border:3px dashed}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n                    }] }, { type: i2.Platform }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { appearance: [{\n                type: Input\n            }], hideRequiredMarker: [{\n                type: Input\n            }], hintLabel: [{\n                type: Input\n            }], floatLabel: [{\n                type: Input\n            }], _connectionContainerRef: [{\n                type: ViewChild,\n                args: ['connectionContainer', { static: true }]\n            }], _inputContainerRef: [{\n                type: ViewChild,\n                args: ['inputContainer']\n            }], _label: [{\n                type: ViewChild,\n                args: ['label']\n            }], _controlNonStatic: [{\n                type: ContentChild,\n                args: [MatFormFieldControl]\n            }], _controlStatic: [{\n                type: ContentChild,\n                args: [MatFormFieldControl, { static: true }]\n            }], _labelChildNonStatic: [{\n                type: ContentChild,\n                args: [MatLabel]\n            }], _labelChildStatic: [{\n                type: ContentChild,\n                args: [MatLabel, { static: true }]\n            }], _placeholderChild: [{\n                type: ContentChild,\n                args: [MatPlaceholder]\n            }], _errorChildren: [{\n                type: ContentChildren,\n                args: [MAT_ERROR, { descendants: true }]\n            }], _hintChildren: [{\n                type: ContentChildren,\n                args: [_MAT_HINT, { descendants: true }]\n            }], _prefixChildren: [{\n                type: ContentChildren,\n                args: [MAT_PREFIX, { descendants: true }]\n            }], _suffixChildren: [{\n                type: ContentChildren,\n                args: [MAT_SUFFIX, { descendants: true }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFormFieldModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatFormFieldModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFormFieldModule, declarations: [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix], imports: [CommonModule, MatCommonModule, ObserversModule], exports: [MatCommonModule,\n        MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix] });\nMatFormFieldModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFormFieldModule, imports: [[CommonModule, MatCommonModule, ObserversModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFormFieldModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix],\n                    imports: [CommonModule, MatCommonModule, ObserversModule],\n                    exports: [\n                        MatCommonModule,\n                        MatError,\n                        MatFormField,\n                        MatHint,\n                        MatLabel,\n                        MatPlaceholder,\n                        MatPrefix,\n                        MatSuffix,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_ERROR, MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MAT_PREFIX, MAT_SUFFIX, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, _MAT_HINT, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/cdk/platform';\nimport { getSupportedInputTypes } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Optional, Self, Inject, Input, NgModule } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport * as i3 from '@angular/material/core';\nimport { mixinErrorState, MatCommonModule, ErrorStateMatcher } from '@angular/material/core';\nimport * as i5 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\nimport * as i4 from '@angular/cdk/text-field';\nimport { TextFieldModule } from '@angular/cdk/text-field';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit',\n];\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/** @docs-private */\nconst _MatInputBase = mixinErrorState(class {\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /** @docs-private */\n    ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n});\n/** Directive that allows a native input to work inside a `MatFormField`. */\nclass MatInput extends _MatInputBase {\n    constructor(_elementRef, _platform, ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone, \n    // TODO: Remove this once the legacy appearance has been removed. We only need\n    // to inject the form-field for determining whether the placeholder has been promoted.\n    _formField) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._autofillMonitor = _autofillMonitor;\n        this._formField = _formField;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week',\n        ].filter(t => getSupportedInputTypes().has(t));\n        const element = this._elementRef.nativeElement;\n        const nodeName = element.nodeName.toLowerCase();\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular(() => {\n                _elementRef.nativeElement.addEventListener('keyup', (event) => {\n                    const el = event.target;\n                    // Note: We specifically check for 0, rather than `!el.selectionStart`, because the two\n                    // indicate different things. If the value is 0, it means that the caret is at the start\n                    // of the input, whereas a value of `null` means that the input doesn't support\n                    // manipulating the selection range. Inputs that don't support setting the selection range\n                    // will throw an error so we want to avoid calling `setSelectionRange` on them. See:\n                    // https://html.spec.whatwg.org/multipage/input.html#do-not-apply\n                    if (!el.value && el.selectionStart === 0 && el.selectionEnd === 0) {\n                        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                        // `1, 1` fixes it for the first time that you type text and\n                        // then hold delete. Toggling to `1, 1` and then back to\n                        // `0, 0` seems to completely fix it.\n                        el.setSelectionRange(1, 1);\n                        el.setSelectionRange(0, 0);\n                    }\n                });\n            });\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = nodeName === 'select';\n        this._isTextarea = nodeName === 'textarea';\n        this._isInFormField = !!_formField;\n        if (this._isNativeSelect) {\n            this.controlType = element.multiple\n                ? 'mat-native-select-multiple'\n                : 'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() {\n        return this._id;\n    }\n    set id(value) {\n        this._id = value || this._uid;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() {\n        var _a, _b, _c, _d;\n        return (_d = (_a = this._required) !== null && _a !== void 0 ? _a : (_c = (_b = this.ngControl) === null || _b === void 0 ? void 0 : _b.control) === null || _c === void 0 ? void 0 : _c.hasValidator(Validators.required)) !== null && _d !== void 0 ? _d : false;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Input type of the element. */\n    get type() {\n        return this._type;\n    }\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() {\n        return this._inputValueAccessor.value;\n    }\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /** Whether the element is readonly. */\n    get readonly() {\n        return this._readonly;\n    }\n    set readonly(value) {\n        this._readonly = coerceBooleanProperty(value);\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            });\n        }\n    }\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n        // We need to dirty-check and set the placeholder attribute ourselves, because whether it's\n        // present or not depends on a query which is prone to \"changed after checked\" errors.\n        this._dirtyCheckPlaceholder();\n    }\n    /** Focuses the input. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /** Does some manual dirty checking on the native input `placeholder` attribute. */\n    _dirtyCheckPlaceholder() {\n        var _a, _b;\n        // If we're hiding the native placeholder, it should also be cleared from the DOM, otherwise\n        // screen readers will read it out twice: once from the label and once from the attribute.\n        // TODO: can be removed once we get rid of the `legacy` style for the form field, because it's\n        // the only one that supports promoting the placeholder to a label.\n        const placeholder = ((_b = (_a = this._formField) === null || _a === void 0 ? void 0 : _a._hideControlPlaceholder) === null || _b === void 0 ? void 0 : _b.call(_a)) ? null : this.placeholder;\n        if (placeholder !== this._previousPlaceholder) {\n            const element = this._elementRef.nativeElement;\n            this._previousPlaceholder = placeholder;\n            placeholder\n                ? element.setAttribute('placeholder', placeholder)\n                : element.removeAttribute('placeholder');\n        }\n    }\n    /** Does some manual dirty checking on the native input `value` property. */\n    _dirtyCheckNativeValue() {\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /** Make sure the input is a supported type. */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /** Checks whether the input type is one of the types that are never empty. */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /** Checks whether the input is invalid based on the native validation. */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        let validity = this._elementRef.nativeElement.validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return (!this._isNeverEmpty() &&\n            !this._elementRef.nativeElement.value &&\n            !this._isBadInput() &&\n            !this.autofilled);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            const selectElement = this._elementRef.nativeElement;\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return (this.focused ||\n                selectElement.multiple ||\n                !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label));\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        if (ids.length) {\n            this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            this._elementRef.nativeElement.removeAttribute('aria-describedby');\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n    /** Whether the form control is a native select that is displayed inline. */\n    _isInlineSelect() {\n        const element = this._elementRef.nativeElement;\n        return this._isNativeSelect && (element.multiple || element.size > 1);\n    }\n}\nMatInput.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatInput, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: i2.NgControl, optional: true, self: true }, { token: i2.NgForm, optional: true }, { token: i2.FormGroupDirective, optional: true }, { token: i3.ErrorStateMatcher }, { token: MAT_INPUT_VALUE_ACCESSOR, optional: true, self: true }, { token: i4.AutofillMonitor }, { token: i0.NgZone }, { token: MAT_FORM_FIELD, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatInput.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatInput, selector: \"input[matInput], textarea[matInput], select[matNativeControl],\\n      input[matNativeControl], textarea[matNativeControl]\", inputs: { disabled: \"disabled\", id: \"id\", placeholder: \"placeholder\", required: \"required\", type: \"type\", errorStateMatcher: \"errorStateMatcher\", userAriaDescribedBy: [\"aria-describedby\", \"userAriaDescribedBy\"], value: \"value\", readonly: \"readonly\" }, host: { listeners: { \"focus\": \"_focusChanged(true)\", \"blur\": \"_focusChanged(false)\", \"input\": \"_onInput()\" }, properties: { \"class.mat-input-server\": \"_isServer\", \"attr.id\": \"id\", \"attr.data-placeholder\": \"placeholder\", \"disabled\": \"disabled\", \"required\": \"required\", \"attr.readonly\": \"readonly && !_isNativeSelect || null\", \"class.mat-native-select-inline\": \"_isInlineSelect()\", \"attr.aria-invalid\": \"(empty && required) ? null : errorState\", \"attr.aria-required\": \"required\" }, classAttribute: \"mat-input-element mat-form-field-autofill-control\" }, providers: [{ provide: MatFormFieldControl, useExisting: MatInput }], exportAs: [\"matInput\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatInput, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                    exportAs: 'matInput',\n                    host: {\n                        /**\n                         * @breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                         */\n                        'class': 'mat-input-element mat-form-field-autofill-control',\n                        '[class.mat-input-server]': '_isServer',\n                        // Native input properties that are overwritten by Angular inputs need to be synced with\n                        // the native input element. Otherwise property bindings for those don't work.\n                        '[attr.id]': 'id',\n                        // At the time of writing, we have a lot of customer tests that look up the input based on its\n                        // placeholder. Since we sometimes omit the placeholder attribute from the DOM to prevent screen\n                        // readers from reading it twice, we have to keep it somewhere in the DOM for the lookup.\n                        '[attr.data-placeholder]': 'placeholder',\n                        '[disabled]': 'disabled',\n                        '[required]': 'required',\n                        '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                        '[class.mat-native-select-inline]': '_isInlineSelect()',\n                        // Only mark the input as invalid for assistive technology if it has a value since the\n                        // state usually overlaps with `aria-required` when the input is empty and can be redundant.\n                        '[attr.aria-invalid]': '(empty && required) ? null : errorState',\n                        '[attr.aria-required]': 'required',\n                        '(focus)': '_focusChanged(true)',\n                        '(blur)': '_focusChanged(false)',\n                        '(input)': '_onInput()',\n                    },\n                    providers: [{ provide: MatFormFieldControl, useExisting: MatInput }],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: i2.NgControl, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }] }, { type: i2.NgForm, decorators: [{\n                        type: Optional\n                    }] }, { type: i2.FormGroupDirective, decorators: [{\n                        type: Optional\n                    }] }, { type: i3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }, {\n                        type: Inject,\n                        args: [MAT_INPUT_VALUE_ACCESSOR]\n                    }] }, { type: i4.AutofillMonitor }, { type: i0.NgZone }, { type: i5.MatFormField, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_FORM_FIELD]\n                    }] }];\n    }, propDecorators: { disabled: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], errorStateMatcher: [{\n                type: Input\n            }], userAriaDescribedBy: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], value: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatInputModule {\n}\nMatInputModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatInputModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatInputModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatInputModule, declarations: [MatInput], imports: [TextFieldModule, MatFormFieldModule, MatCommonModule], exports: [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule,\n        MatInput] });\nMatInputModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatInputModule, providers: [ErrorStateMatcher], imports: [[TextFieldModule, MatFormFieldModule, MatCommonModule], TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatInputModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [MatInput],\n                    imports: [TextFieldModule, MatFormFieldModule, MatCommonModule],\n                    exports: [\n                        TextFieldModule,\n                        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                        // be used together with `MatFormField`.\n                        MatFormFieldModule,\n                        MatInput,\n                    ],\n                    providers: [ErrorStateMatcher],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, getMatInputUnsupportedTypeError };\n"],"names":["i1","normalizePassiveListenerOptions","PlatformModule","i0","Injectable","EventEmitter","Directive","Output","Optional","Inject","Input","NgModule","coerceElement","coerceNumberProperty","coerceBooleanProperty","EMPTY","Subject","fromEvent","auditTime","takeUntil","DOCUMENT","listenerOptions","passive","AutofillMonitor","constructor","_platform","_ngZone","_monitoredElements","Map","monitor","elementOrRef","isBrowser","element","info","get","subject","result","cssClass","listener","event","animationName","classList","contains","add","run","next","target","isAutofilled","remove","runOutsideAngular","addEventListener","set","unlisten","removeEventListener","stopMonitoring","complete","delete","ngOnDestroy","forEach","_info","ɵfac","Platform","NgZone","ɵprov","type","args","providedIn","CdkAutofill","_elementRef","_autofillMonitor","cdkAutofill","ngOnInit","subscribe","emit","ElementRef","ɵdir","selector","CdkTextareaAutosize","document","_destroyed","_enabled","_previousMinRows","_isViewInited","_handleFocusEvent","_hasFocus","_document","_textareaElement","nativeElement","minRows","_minRows","value","_setMinHeight","maxRows","_maxRows","_setMaxHeight","enabled","resizeToFitContent","reset","placeholder","_cachedPlaceholderHeight","undefined","_cacheTextareaPlaceholderHeight","minHeight","_cachedLineHeight","style","maxHeight","ngAfterViewInit","_initialHeight","height","window","_getWindow","pipe","_cacheTextareaLineHeight","textareaClone","cloneNode","rows","position","visibility","border","padding","overflow","parentNode","appendChild","clientHeight","_measureScrollHeight","previousMargin","marginBottom","isFirefox","FIREFOX","needsMarginFiller","measuringClass","scrollHeight","ngDoCheck","force","textarea","_previousValue","Math","max","requestAnimationFrame","_scrollToCaretPosition","setTimeout","_noopInputHandler","_getDocument","doc","defaultView","selectionStart","selectionEnd","isStopped","setSelectionRange","exportAs","host","decorators","TextFieldModule","ɵmod","ɵinj","declarations","imports","exports","Component","ViewEncapsulation","ChangeDetectionStrategy","MatCommonModule","MatDivider","_vertical","_inset","vertical","inset","ɵcmp","template","encapsulation","None","changeDetection","OnPush","styles","MatDividerModule","i4","ObserversModule","i3","CommonModule","InjectionToken","Attribute","ViewChild","ContentChild","ContentChildren","mixinColor","merge","startWith","take","trigger","state","transition","animate","ANIMATION_MODULE_TYPE","i2","nextUniqueId$2","MAT_ERROR","MatError","ariaLive","elementRef","id","setAttribute","provide","useExisting","providers","matFormFieldAnimations","transitionMessages","opacity","transform","MatFormFieldControl","getMatFormFieldPlaceholderConflictError","Error","getMatFormFieldDuplicatedHintError","align","getMatFormFieldMissingControlError","nextUniqueId$1","_MAT_HINT","MatHint","MatLabel","MatPlaceholder","MAT_PREFIX","MatPrefix","MAT_SUFFIX","MatSuffix","nextUniqueId","floatingLabelScale","outlineGapPadding","_MatFormFieldBase","MAT_FORM_FIELD_DEFAULT_OPTIONS","MAT_FORM_FIELD","MatFormField","_changeDetectorRef","_dir","_defaults","_animationMode","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_showAlwaysAnimate","_subscriptAnimationState","_hintLabel","_hintLabelId","_labelId","floatLabel","_getDefaultFloatLabelState","_animationsEnabled","appearance","_hideRequiredMarker","hideRequiredMarker","_appearance","oldValue","_shouldAlwaysFloat","_canLabelFloat","hintLabel","_processHints","_floatLabel","markForCheck","_control","_explicitFormFieldControl","_controlNonStatic","_controlStatic","getLabelId","_hasFloatingLabel","getConnectedOverlayOrigin","_connectionContainerRef","ngAfterContentInit","_validateControlChild","control","controlType","stateChanges","_validatePlaceholders","_syncDescribedByIds","ngControl","valueChanges","onStable","updateOutlineGap","_prefixChildren","changes","_suffixChildren","_hintChildren","_errorChildren","change","ngAfterContentChecked","detectChanges","_shouldForward","prop","_hasPlaceholder","_placeholderChild","_hasLabel","_labelChildNonStatic","_labelChildStatic","_shouldLabelFloat","shouldLabelFloat","_hideControlPlaceholder","_getDisplayedMessages","length","errorState","_animateAndLockLabel","_label","ngDevMode","_validateHints","startHint","endHint","hint","ids","userAriaDescribedBy","push","split","find","map","error","setDescribedByIds","labelEl","children","textContent","trim","_isAttachedToDOM","startWidth","gapWidth","container","startEls","querySelectorAll","gapEls","containerRect","getBoundingClientRect","width","containerStart","_getStartEnd","labelChildren","labelStart","labelWidth","i","offsetWidth","abs","rect","right","left","getRootNode","rootNode","documentElement","ChangeDetectorRef","Directionality","NgIf","NgSwitch","NgSwitchCase","CdkObserveContent","animations","inputs","static","_inputContainerRef","descendants","MatFormFieldModule","getSupportedInputTypes","Self","Validators","mixinErrorState","ErrorStateMatcher","i5","getMatInputUnsupportedTypeError","MAT_INPUT_VALUE_ACCESSOR","MAT_INPUT_INVALID_TYPES","_MatInputBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","MatInput","inputValueAccessor","ngZone","_formField","_uid","focused","autofilled","_disabled","_type","_readonly","_neverEmptyInputTypes","filter","t","has","nodeName","toLowerCase","_inputValueAccessor","_previousNativeValue","IOS","el","_isServer","_isNativeSelect","_isTextarea","_isInFormField","multiple","disabled","_id","required","_a","_b","_c","_d","_required","hasValidator","_validateType","readonly","ngOnChanges","updateErrorState","_dirtyCheckNativeValue","_dirtyCheckPlaceholder","focus","options","_focusChanged","isFocused","_onInput","call","_previousPlaceholder","removeAttribute","newValue","indexOf","_isNeverEmpty","_isBadInput","validity","badInput","empty","selectElement","firstOption","selectedIndex","label","join","onContainerClick","_isInlineSelect","size","NgControl","NgForm","FormGroupDirective","errorStateMatcher","MatInputModule"],"sourceRoot":"webpack:///"}