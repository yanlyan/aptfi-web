{"version":3,"sources":["./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/login.module.ts","./src/app/login/login.service.ts"],"names":[],"mappings":"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","file":"src_app_login_login_module_ts.ee54a2ed391ec4e09069.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngxs/store';\nimport { ReCaptchaService } from 'angular-recaptcha3';\nimport { SetSessionState } from '../app.state';\nimport { LoginService } from './login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  loading = false;\n\n  constructor(\n    private loginService: LoginService,\n    private readonly store: Store,\n    private router: Router,\n    private recaptchaService: ReCaptchaService\n  ) {\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, [Validators.required]),\n    });\n  }\n\n  ngOnInit(): void {}\n\n  async onSubmit() {\n    if (this.loginForm.valid) {\n      this.loading = true;\n      const token = await this.recaptchaService.execute({ action: 'login' });\n\n      this.loginService.login(this.loginForm.value.email, this.loginForm.value.password, token).subscribe(\n        (response) => {\n          this.store.dispatch(\n            new SetSessionState({\n              accessToken: response.access_token,\n              refreshToken: response.refresh_token,\n              role: response.user.role,\n            })\n          );\n          this.loading = false;\n          switch (response.user.role.id) {\n            case 1:\n              this.router.navigate(['admin']);\n              break;\n            case 2:\n              this.router.navigate(['profil']);\n              break;\n            case 3:\n              this.router.navigate(['pengurus']);\n              break;\n\n            default:\n              break;\n          }\n        },\n        () => {\n          this.loading = false;\n        }\n      );\n    }\n  }\n\n  goToRegister() {\n    this.router.navigate(['daftar']);\n  }\n}\n","<div\n  fxLayout=\"column\"\n  fxLayoutGap=\"32px\"\n  fxLayoutAlign=\"start center\"\n  style=\"height: 100%; background-color: #ddd; padding-top: 64px\"\n>\n  <div style=\"text-align: center\">\n    <img style=\"width: 70%\" src=\"assets/image/logo2.png\" alt=\"\" />\n  </div>\n  <mat-card>\n    <mat-card-header fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <mat-card-title style=\"margin: 24px 0px\">Masuk ke Sistem Keanggotaan APTFI</mat-card-title>\n    </mat-card-header>\n    <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center stretch\">\n      <form\n        [formGroup]=\"loginForm\"\n        (submit)=\"onSubmit()\"\n        fxLayout=\"column\"\n        fxLayoutAlign=\"start stretch\"\n        fxLayoutGap=\"8px\"\n        style=\"margin: 0px 16px\"\n      >\n        <mat-form-field>\n          <input matInput placeholder=\"Email\" formControlName=\"email\" type=\"email\" />\n          <mat-error *ngIf=\"!!loginForm.get('email')?.hasError('required')\">Email harus diisi</mat-error>\n          <mat-error *ngIf=\"!!loginForm.get('email')?.hasError('email')\">Email tidak valid</mat-error>\n        </mat-form-field>\n        <mat-form-field>\n          <input matInput placeholder=\"Password\" formControlName=\"password\" type=\"password\" />\n          <mat-error>Password harus diisi</mat-error>\n        </mat-form-field>\n        <div>\n          <div style=\"margin-top: 20px; padding-bottom: 20px\" fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n            <button *ngIf=\"!loading\" mat-raised-button color=\"primary\" type=\"submit\" fxFlex=\"33\">Login</button>\n            <div *ngIf=\"loading\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"8px\">\n              <mat-spinner color=\"primary\" [diameter]=\"20\"></mat-spinner>\n              <label for=\"\">Loading</label>\n            </div>\n          </div>\n          <recaptcha [size]=\"'invisible'\" [hide]=\"true\"> </recaptcha>\n          <mat-divider></mat-divider>\n        </div>\n      </form>\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" style=\"margin-top: 24px; width: 100%\">\n        <div>\n          <a routerLink=\"/forgot-password\">Lupa password?</a>\n        </div>\n        <div>\n          <a routerLink=\"/register\">Daftar Akun</a>\n        </div>\n      </div>\n    </mat-card-content>\n  </mat-card>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { LoginGuard } from './login.guard';\nimport { ReCaptchaModule } from 'angular-recaptcha3';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent,\n    canActivate: [LoginGuard],\n  },\n];\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    MatCardModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    FlexLayoutModule,\n    MatDividerModule,\n    ReactiveFormsModule,\n    MatProgressSpinnerModule,\n    ReCaptchaModule,\n  ],\n  exports: [LoginComponent],\n})\nexport class LoginModule {}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClientService } from '../core/http-client.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n  constructor(private httpClient: HttpClientService) {}\n\n  login(email: string, password: string, token: string) {\n    return this.httpClient.post(`${environment.api}/login`, {\n      email,\n      password,\n      recaptcha: token\n    });\n  }\n}\n"],"sourceRoot":"webpack:///"}