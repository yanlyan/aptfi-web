{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.state.ts","./src/app/core/http-interceptor.ts","./src/app/shared/confirm-dialog/confirm-dialog.component.ts","./src/app/shared/confirm-dialog/confirm-dialog.component.html","./src/app/states/loading.state.ts","./src/app/user-view/member.state.ts","./src/app/user-view/user.state.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () => import('./user-view/user-view.module').then((m) => m.UserViewModule),\n  },\n  {\n    path: 'login',\n    loadChildren: () => import('./login/login.module').then((m) => m.LoginModule),\n  },\n  {\n    path: 'register',\n    loadChildren: () => import('./register/register.module').then((m) => m.RegisterModule),\n  },\n  {\n    path: 'forgot-password',\n    loadChildren: () => import('./forgot-password/forgot-pasword.module').then((m) => m.ForgotPasswordModule),\n  },\n  {\n    path: 'reset-password/:token',\n    loadChildren: () => import('./reset-password/reset-password.module').then((m) => m.ResetPasswordModule),\n  },\n  {\n    path: 'pengurus',\n    loadChildren: () => import('./pengurus-view/pengurus-view.module').then((m) => m.PengurusViewModule),\n  },\n  {\n    path: 'admin',\n    loadChildren: () => import('./admin-view/admin-view.module').then((m) => m.AdminViewModule),\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: false,\n      anchorScrolling: 'enabled',\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'Asosiasi Perguruan Tinggi Farmasi Indonesia';\n  ngOnInit(): void {}\n}\n","<router-outlet> </router-outlet>\n","import { LOCALE_ID, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { NgxsStoragePluginModule } from '@ngxs/storage-plugin';\n\nimport { NgxsModule, Store } from '@ngxs/store';\nimport { AppState } from './app.state';\n\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MyHttpInterceptor } from './core/http-interceptor';\nimport { UserState } from './user-view/user.state';\nimport { registerLocaleData } from '@angular/common';\nimport localeId from '@angular/common/locales/id';\nimport { ReCaptchaModule } from 'angular-recaptcha3';\nimport { LoadingState } from './states/loading.state';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MemberState } from './user-view/member.state';\nimport { ConfirmDialogComponent } from './shared/confirm-dialog/confirm-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nregisterLocaleData(localeId, 'id');\n\nexport function tokenGetter() {\n  return '';\n}\n\n@NgModule({\n  declarations: [AppComponent, ConfirmDialogComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatButtonModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      registrationStrategy: 'registerWhenStable:30000',\n    }),\n    LayoutModule,\n    NgxsModule.forRoot([AppState, UserState, MemberState, LoadingState], {\n      developmentMode: !environment.production,\n    }),\n    JwtModule.forRoot({\n      config: {\n        tokenGetter,\n      },\n    }),\n    NgxsStoragePluginModule.forRoot({\n      key: ['app'],\n    }),\n    ReCaptchaModule.forRoot({\n      invisible: {\n        sitekey: environment.recaptchaSiteKey,\n      },\n      normal: {\n        sitekey: environment.recaptchaSiteKey,\n      },\n      language: 'id',\n    }),\n    MatProgressSpinnerModule,\n    FlexLayoutModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: MyHttpInterceptor,\n      multi: true,\n      deps: [Store, MatSnackBar],\n    },\n    { provide: LOCALE_ID, useValue: 'id-ID' },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { State, Action, StateContext } from '@ngxs/store';\nimport { Injectable } from '@angular/core';\nimport { Role } from './models/role.model';\n\nexport class SetSessionState {\n  static readonly type = '[App] Set Session';\n  constructor(\n    public state: {\n      accessToken: string;\n      refreshToken: string;\n      role: Role;\n    }\n  ) {}\n}\n\nexport interface AppStateModel {\n  isOnline: boolean;\n  server: boolean;\n  loginRedirect: any;\n  session: {\n    accessToken: string;\n    refreshToken: string;\n    role: Role;\n  };\n}\n\n@State<AppStateModel>({\n  name: 'app',\n  defaults: {\n    isOnline: true,\n    server: true,\n    loginRedirect: null,\n    session: {\n      accessToken: '',\n      refreshToken: '',\n      role: null,\n    },\n  },\n})\n@Injectable({\n  providedIn: 'root',\n})\nexport class AppState {\n  @Action(SetSessionState)\n  SetOnlineState(ctx: StateContext<AppStateModel>, action: SetSessionState) {\n    const state = ctx.getState();\n    ctx.setState({\n      ...state,\n      session: action.state,\n    });\n  }\n}\n","import {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpErrorResponse,\n  HttpHeaders,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable, throwError } from 'rxjs';\nimport { Store } from '@ngxs/store';\nimport { AppStateModel, AppState } from '../app.state';\nimport { map, catchError } from 'rxjs/operators';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable()\nexport class MyHttpInterceptor implements HttpInterceptor {\n  constructor(private readonly store: Store, private readonly snackbar: MatSnackBar) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const appState: AppStateModel = this.store.selectSnapshot(AppState);\n    const token = appState.session ? appState.session.accessToken : null;\n    if (token) {\n      let tokenizedRequest = req;\n      const headers = new HttpHeaders({\n        Authorization: 'Bearer ' + token,\n      });\n      tokenizedRequest = req.clone({\n        headers,\n      });\n      return next.handle(tokenizedRequest).pipe(\n        map((event: HttpEvent<any>) => {\n          return event;\n        }),\n        catchError((error) => {\n          this.snackbar.open(`Terjadi Kesalahan : ${error.error.message}`, 'Tutup', {\n            panelClass: ['snackbar-warn'],\n            duration: 10000,\n          });\n          return throwError(error);\n        })\n      );\n    } else {\n      return next.handle(req).pipe(\n        map((event: HttpEvent<any>) => {\n          return event;\n        }),\n        catchError((error: HttpErrorResponse) => {\n          this.snackbar.open(`Terjadi Kesalahan : ${error.error.message}`, 'Tutup', {\n            panelClass: ['snackbar-warn'],\n            duration: 10000,\n          });\n          return throwError(error);\n        })\n      );\n    }\n  }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.scss'],\n})\nexport class ConfirmDialogComponent implements OnInit {\n  constructor(public dialogRef: MatDialogRef<ConfirmDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {}\n  ngOnInit(): void {}\n}\n","<h2 mat-dialog-title>Konfirmasi</h2>\n<div mat-dialog-content>\n  <p>Apakah anda yakin ?</p>\n</div>\n<div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"space-around end\" style=\"margin-bottom: 0px; padding: 0\">\n  <button mat-flat-button (click)=\"this.dialogRef.close(false)\" color=\"primary\" cdkFocusInitial>Tidak</button>\n  <button mat-flat-button (click)=\"this.dialogRef.close(true)\" color=\"accent\">Ya, saya yakin</button>\n</div>\n","import { State, Action, StateContext } from '@ngxs/store';\nimport { Injectable } from '@angular/core';\n\nexport class SetLoadingState {\n  static readonly type = '[Loading] Set Loading';\n  constructor(public state: boolean) {}\n}\n\nexport interface LoadingStateModel {\n  loading: boolean;\n}\n\n@State<LoadingStateModel>({\n  name: 'loading',\n  defaults: {\n    loading: false,\n  },\n})\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoadingState {\n  @Action(SetLoadingState)\n  SetLoadingState(ctx: StateContext<LoadingStateModel>, action: SetLoadingState) {\n    const state = ctx.getState();\n    ctx.setState({\n      ...state,\n      loading: action.state,\n    });\n  }\n}\n","import { State, Action, StateContext } from '@ngxs/store';\nimport { Injectable } from '@angular/core';\nimport { MemberSimple } from '../models/member-simple.model';\n\nexport class SetMemberState {\n  static readonly type = '[App] Set Member State';\n  constructor(public state: MemberSimple) {}\n}\nexport class SetRegisterStatus {\n  static readonly type = '[App] Set Register Status State';\n  constructor(public state: number) {}\n}\n\nexport interface MemberStateModel {\n  member: MemberSimple;\n}\n\n@State<MemberStateModel>({\n  name: 'Member',\n  defaults: {\n    member: null,\n  },\n})\n@Injectable({\n  providedIn: 'root',\n})\nexport class MemberState {\n  @Action(SetMemberState)\n  SetMemberState(ctx: StateContext<MemberStateModel>, action: SetMemberState) {\n    const state = ctx.getState();\n    ctx.setState({\n      ...state,\n      member: action.state,\n    });\n  }\n\n  @Action(SetRegisterStatus)\n  SetRegisterStatus(ctx: StateContext<MemberStateModel>, action: SetRegisterStatus) {\n    const state = ctx.getState();\n    ctx.setState({\n      ...state,\n      member: { ...state.member, registerLastStatus: action.state },\n    });\n  }\n}\n","import { State, Action, StateContext } from '@ngxs/store';\nimport { Injectable } from '@angular/core';\nimport { User } from '../models/user.model';\n\nexport class SetUserState {\n  static readonly type = '[App] Set User State';\n  constructor(public state: User) {}\n}\nexport class SetRegisterStatus {\n  static readonly type = '[App] Set Register Status State';\n  constructor(public state: number) {}\n}\n\nexport interface UserStateModel {\n  user: User;\n}\n\n@State<UserStateModel>({\n  name: 'user',\n  defaults: {\n    user: null,\n  },\n})\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserState {\n  @Action(SetUserState)\n  SetUserState(ctx: StateContext<UserStateModel>, action: SetUserState) {\n    const state = ctx.getState();\n    ctx.setState({\n      ...state,\n      user: action.state,\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api: 'http://localhost:8000/api',\n  recaptchaSiteKey: '6LfaP9obAAAAAMKwhjelySEWJSezrxdiqJK6Vs_i',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}