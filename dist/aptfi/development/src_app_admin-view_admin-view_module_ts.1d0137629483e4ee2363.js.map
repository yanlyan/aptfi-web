{"version":3,"sources":["./src/app/admin-view/admin-navigation/admin-navigation.component.ts","./src/app/admin-view/admin-navigation/admin-navigation.component.html","./src/app/admin-view/admin-view.component.ts","./src/app/admin-view/admin-view.component.html","./src/app/admin-view/admin-view.guard.ts","./src/app/admin-view/admin-view.module.ts"],"names":[],"mappings":"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","file":"src_app_admin-view_admin-view_module_ts.1d0137629483e4ee2363.js","sourcesContent":["import { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { SetSessionState } from 'src/app/app.state';\nimport { UserState, UserStateModel } from 'src/app/user-view/user.state';\nimport { LoadingStateModel, LoadingState } from '../../states/loading.state';\n\n@Component({\n  selector: 'app-admin-navigation',\n  templateUrl: './admin-navigation.component.html',\n  styleUrls: ['./admin-navigation.component.scss'],\n})\nexport class AdminNavigationComponent implements OnInit {\n  state$: Observable<UserStateModel>;\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map((result) => result.matches),\n    shareReplay()\n  );\n\n  masterOpened: boolean = false;\n\n  loadingState$: Observable<LoadingStateModel> = this.store.select(LoadingState);\n\n  constructor(private breakpointObserver: BreakpointObserver, private store: Store, private router: Router) {}\n\n  ngOnInit() {\n    this.router.events.subscribe((e) => {\n      if (e instanceof NavigationEnd) {\n        const scrollto = document.querySelector('.mat-sidenav-content');\n        if (scrollto) {\n          document.querySelector('.mat-sidenav-content').scrollTo({\n            top: 0,\n            behavior: 'smooth',\n          });\n        }\n      }\n    });\n    const masterMenu = ['/admin/users', '/admin/roles'];\n    for (const am of masterMenu) {\n      if (this.router.url.includes(am)) {\n        this.masterOpened = true;\n      }\n    }\n    this.state$ = this.store.select(UserState);\n  }\n  onOpened(name: string) {\n    if (name === 'master') {\n      this.masterOpened = true;\n    }\n  }\n  logout() {\n    this.store.dispatch(\n      new SetSessionState({\n        accessToken: '',\n        refreshToken: '',\n        role: null,\n      })\n    );\n    this.router.navigate(['/login']);\n  }\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav\n    #drawer\n    class=\"sidenav\"\n    fixedInViewport\n    [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n    [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n    [opened]=\"(isHandset$ | async) === false\"\n  >\n    <mat-toolbar color=\"primary\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"8px\">\n      <img src=\"assets/image/logo.png\" style=\"width: 42px\" alt=\"\" />\n      <div>\n        <label>Admin APTFI</label>\n      </div>\n    </mat-toolbar>\n    <mat-accordion class=\"nav-accordion\" multi [displayMode]=\"'flat'\">\n      <mat-expansion-panel [(expanded)]=\"masterOpened\" (opened)=\"onOpened('master')\">\n        <mat-expansion-panel-header>Master Data</mat-expansion-panel-header>\n        <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" class=\"list-item\">\n          <a routerLink=\"/admin/users\" [routerLinkActive]=\"'active'\">User</a>\n        </div>\n      </mat-expansion-panel>\n    </mat-accordion>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\"\n      >\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" style=\"width: 100%\">\n        <span style=\"padding-left: 16px\"></span>\n        <div\n          fxLayout=\"row\"\n          fxLayoutAlign=\"space-between center\"\n          fxLayoutGap=\"16px\"\n          [matMenuTriggerFor]=\"menu\"\n          class=\"pointer\"\n        >\n          <div fxLayout=\"column\" fxLayoutAlign=\"center start\">\n            <label style=\"line-height: 24px; font-size: 16px\">{{ (state$ | async).user?.name }}</label>\n            <label style=\"font-size: 12px; line-height: 12px\">Admin</label>\n          </div>\n          <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"8px\">\n            <div style=\"width: 40px\">\n              <img style=\"width: 100%; border-radius: 50%\" src=\"assets/image/profile.png\" alt=\"\" />\n            </div>\n            <mat-icon aria-label=\"Side nav toggle icon\">expand_more</mat-icon>\n          </div>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n          <button (click)=\"logout()\" mat-menu-item>\n            <mat-icon>logout</mat-icon>\n            <span>Keluar</span>\n          </button>\n        </mat-menu>\n      </div>\n    </mat-toolbar>\n    <!-- Add Content Here -->\n    <div\n      *ngIf=\"(loadingState$ | async).loading\"\n      style=\"\n        position: absolute;\n        top: 0;\n        width: 100%;\n        height: 100%;\n        z-index: 1000;\n        max-height: 100%;\n        background-color: rgba(255, 255, 255, 0.9);\n      \"\n    >\n      <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"10px\" style=\"padding-top: 24px\">\n        <div\n          style=\"background: #fff; padding: 12px 16px; border-radius: 5px\"\n          fxLayout=\"row\"\n          fxLayoutAlign=\"space-around center\"\n          fxLayoutGap=\"8px\"\n          class=\"mat-elevation-z8\"\n        >\n          <mat-spinner color=\"accent\" [diameter]=\"20\"> </mat-spinner>\n          <label for=\"\">Loading</label>\n        </div>\n      </div>\n    </div>\n\n    <div\n      style=\"\n        background-color: #fff;\n        border: 1px #ddd solid;\n        margin: 24px;\n        padding: 24px;\n        border-radius: 5px;\n        min-height: 100vh;\n      \"\n    >\n      <router-outlet></router-outlet>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-view',\n  templateUrl: './admin-view.component.html',\n  styleUrls: ['./admin-view.component.scss']\n})\nexport class AdminViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-admin-navigation></app-admin-navigation>\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Store } from '@ngxs/store';\nimport { Observable, of } from 'rxjs';\nimport { finalize, map, mergeMap, tap } from 'rxjs/operators';\nimport { AppState } from '../app.state';\nimport { SetLoadingState } from '../states/loading.state';\nimport { UserService } from '../user-view/user.service';\nimport { SetUserState, UserState, UserStateModel } from '../user-view/user.state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminViewGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private readonly store: Store,\n    private jwtService: JwtHelperService,\n    private userService: UserService\n  ) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.store.selectOnce(AppState).pipe(\n      tap(() => this.store.dispatch(new SetLoadingState(true))),\n      mergeMap((appState) => {\n        if (appState.session.accessToken === '') {\n          this.router.navigate(['login']);\n          return of(false);\n        }\n        switch (appState.session.role.id) {\n          case 2:\n            this.router.navigate(['profil']);\n            return of(false);\n          case 3:\n            this.router.navigate(['pengurus/anggota']);\n            return of(false);\n\n          default:\n            break;\n        }\n        const userState: UserStateModel = this.store.selectSnapshot(UserState);\n        if (!userState.user) {\n          const decodedToken = this.jwtService.decodeToken(appState.session.accessToken);\n          return this.userService.getById(decodedToken.sub).pipe(\n            map((response: any) => {\n              this.store.dispatch(new SetUserState(response.user));\n            })\n          );\n        }\n        return of(userState);\n      }),\n      map((userState: any) => {\n        if (userState === false) {\n          return false;\n        }\n        return true;\n      }),\n      finalize(() => this.store.dispatch(new SetLoadingState(false)))\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdminViewComponent } from './admin-view.component';\nimport { AdminViewGuard } from './admin-view.guard';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminNavigationComponent } from './admin-navigation/admin-navigation.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminViewComponent,\n    canActivate: [AdminViewGuard],\n    children: [\n      {\n        path: '',\n        redirectTo: 'users',\n      },\n      {\n        path: 'users',\n        loadChildren: () => import('./admin-user/admin-user.module').then((m) => m.AdminUserModule),\n      },\n    ],\n  },\n];\n\n@NgModule({\n  declarations: [AdminViewComponent, AdminNavigationComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    MaterialFileInputModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    FlexLayoutModule,\n    MatMenuModule,\n    MatExpansionModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatProgressSpinnerModule,\n    MatInputModule,\n    MatTabsModule,\n    MatTableModule,\n  ],\n})\nexport class AdminViewModule {}\n"],"sourceRoot":"webpack:///"}