{"version":3,"file":"default-node_modules_angular_material_fesm2015_chips_mjs-node_modules_angular_material_fesm20-0f8eb4.js","mappings":"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","sources":["./node_modules/@angular/material/fesm2015/chips.mjs","./node_modules/@angular/material/fesm2015/paginator.mjs","./node_modules/@angular/material/fesm2015/sort.mjs","./node_modules/@angular/material/fesm2015/tooltip.mjs"],"sourcesContent":["import { SPACE, BACKSPACE, DELETE, TAB, hasModifierKey, ENTER } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, EventEmitter, Optional, Inject, Attribute, ContentChild, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, Self, ContentChildren, NgModule } from '@angular/core';\nimport * as i3 from '@angular/material/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, RippleRenderer, MAT_RIPPLE_GLOBAL_OPTIONS, mixinErrorState, MatCommonModule, ErrorStateMatcher } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DOCUMENT } from '@angular/common';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, merge } from 'rxjs';\nimport { take, takeUntil, startWith } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport * as i2 from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport * as i1$1 from '@angular/cdk/bidi';\n\n/** Event object emitted by MatChip when selected or deselected. */\nclass MatChipSelectionChange {\n    constructor(\n    /** Reference to the chip that emitted the event. */\n    source, \n    /** Whether the chip that emitted the event is selected. */\n    selected, \n    /** Whether the selection change was a result of a user interaction. */\n    isUserInput = false) {\n        this.source = source;\n        this.selected = selected;\n        this.isUserInput = isUserInput;\n    }\n}\n/**\n * Injection token that can be used to reference instances of `MatChipRemove`. It serves as\n * alternative token to the actual `MatChipRemove` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_REMOVE = new InjectionToken('MatChipRemove');\n/**\n * Injection token that can be used to reference instances of `MatChipAvatar`. It serves as\n * alternative token to the actual `MatChipAvatar` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_AVATAR = new InjectionToken('MatChipAvatar');\n/**\n * Injection token that can be used to reference instances of `MatChipTrailingIcon`. It serves as\n * alternative token to the actual `MatChipTrailingIcon` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_TRAILING_ICON = new InjectionToken('MatChipTrailingIcon');\n// Boilerplate for applying mixins to MatChip.\n/** @docs-private */\nclass MatChipBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatChipMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(MatChipBase), 'primary'), -1);\n/**\n * Dummy directive to add CSS class to chip avatar.\n * @docs-private\n */\nclass MatChipAvatar {\n}\nMatChipAvatar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatChipAvatar, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatChipAvatar.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatChipAvatar, selector: \"mat-chip-avatar, [matChipAvatar]\", host: { classAttribute: \"mat-chip-avatar\" }, providers: [{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatChipAvatar, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-chip-avatar, [matChipAvatar]',\n                    host: { 'class': 'mat-chip-avatar' },\n                    providers: [{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }],\n                }]\n        }] });\n/**\n * Dummy directive to add CSS class to chip trailing icon.\n * @docs-private\n */\nclass MatChipTrailingIcon {\n}\nMatChipTrailingIcon.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatChipTrailingIcon, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatChipTrailingIcon.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatChipTrailingIcon, selector: \"mat-chip-trailing-icon, [matChipTrailingIcon]\", host: { classAttribute: \"mat-chip-trailing-icon\" }, providers: [{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatChipTrailingIcon, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n                    host: { 'class': 'mat-chip-trailing-icon' },\n                    providers: [{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }],\n                }]\n        }] });\n/**\n * Material design styled Chip component. Used inside the MatChipList component.\n */\nclass MatChip extends _MatChipMixinBase {\n    constructor(elementRef, _ngZone, platform, globalRippleOptions, _changeDetectorRef, _document, animationMode, tabIndex) {\n        super(elementRef);\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Whether the chip has focus. */\n        this._hasFocus = false;\n        /** Whether the chip list is selectable */\n        this.chipListSelectable = true;\n        /** Whether the chip list is in multi-selection mode. */\n        this._chipListMultiple = false;\n        /** Whether the chip list as a whole is disabled. */\n        this._chipListDisabled = false;\n        this._selected = false;\n        this._selectable = true;\n        this._disabled = false;\n        this._removable = true;\n        /** Emits when the chip is focused. */\n        this._onFocus = new Subject();\n        /** Emits when the chip is blured. */\n        this._onBlur = new Subject();\n        /** Emitted when the chip is selected or deselected. */\n        this.selectionChange = new EventEmitter();\n        /** Emitted when the chip is destroyed. */\n        this.destroyed = new EventEmitter();\n        /** Emitted when a chip is to be removed. */\n        this.removed = new EventEmitter();\n        this._addHostClassName();\n        // Dynamically create the ripple target, append it within the chip, and use it as the\n        // chip's ripple target. Adding the class '.mat-chip-ripple' ensures that it will have\n        // the proper styles.\n        this._chipRippleTarget = _document.createElement('div');\n        this._chipRippleTarget.classList.add('mat-chip-ripple');\n        this._elementRef.nativeElement.appendChild(this._chipRippleTarget);\n        this._chipRipple = new RippleRenderer(this, _ngZone, this._chipRippleTarget, platform);\n        this._chipRipple.setupTriggerEvents(elementRef);\n        this.rippleConfig = globalRippleOptions || {};\n        this._animationsDisabled = animationMode === 'NoopAnimations';\n        this.tabIndex = tabIndex != null ? parseInt(tabIndex) || -1 : -1;\n    }\n    /**\n     * Whether ripples are disabled on interaction\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return (this.disabled ||\n            this.disableRipple ||\n            this._animationsDisabled ||\n            !!this.rippleConfig.disabled);\n    }\n    /** Whether the chip is selected. */\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        const coercedValue = coerceBooleanProperty(value);\n        if (coercedValue !== this._selected) {\n            this._selected = coercedValue;\n            this._dispatchSelectionChange();\n        }\n    }\n    /** The value of the chip. Defaults to the content inside `<mat-chip>` tags. */\n    get value() {\n        return this._value !== undefined ? this._value : this._elementRef.nativeElement.textContent;\n    }\n    set value(value) {\n        this._value = value;\n    }\n    /**\n     * Whether or not the chip is selectable. When a chip is not selectable,\n     * changes to its selected state are always ignored. By default a chip is\n     * selectable, and it becomes non-selectable if its parent chip list is\n     * not selectable.\n     */\n    get selectable() {\n        return this._selectable && this.chipListSelectable;\n    }\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n    }\n    /** Whether the chip is disabled. */\n    get disabled() {\n        return this._chipListDisabled || this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Determines whether or not the chip displays the remove styling and emits (removed) events.\n     */\n    get removable() {\n        return this._removable;\n    }\n    set removable(value) {\n        this._removable = coerceBooleanProperty(value);\n    }\n    /** The ARIA selected applied to the chip. */\n    get ariaSelected() {\n        // Remove the `aria-selected` when the chip is deselected in single-selection mode, because\n        // it adds noise to NVDA users where \"not selected\" will be read out for each chip.\n        return this.selectable && (this._chipListMultiple || this.selected)\n            ? this.selected.toString()\n            : null;\n    }\n    _addHostClassName() {\n        const basicChipAttrName = 'mat-basic-chip';\n        const element = this._elementRef.nativeElement;\n        if (element.hasAttribute(basicChipAttrName) ||\n            element.tagName.toLowerCase() === basicChipAttrName) {\n            element.classList.add(basicChipAttrName);\n            return;\n        }\n        else {\n            element.classList.add('mat-standard-chip');\n        }\n    }\n    ngOnDestroy() {\n        this.destroyed.emit({ chip: this });\n        this._chipRipple._removeTriggerEvents();\n    }\n    /** Selects the chip. */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Deselects the chip. */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._dispatchSelectionChange();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Select this chip and emit selected event */\n    selectViaInteraction() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange(true);\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Toggles the current selected state of this chip. */\n    toggleSelected(isUserInput = false) {\n        this._selected = !this.selected;\n        this._dispatchSelectionChange(isUserInput);\n        this._changeDetectorRef.markForCheck();\n        return this.selected;\n    }\n    /** Allows for programmatic focusing of the chip. */\n    focus() {\n        if (!this._hasFocus) {\n            this._elementRef.nativeElement.focus();\n            this._onFocus.next({ chip: this });\n        }\n        this._hasFocus = true;\n    }\n    /**\n     * Allows for programmatic removal of the chip. Called by the MatChipList when the DELETE or\n     * BACKSPACE keys are pressed.\n     *\n     * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n     */\n    remove() {\n        if (this.removable) {\n            this.removed.emit({ chip: this });\n        }\n    }\n    /** Handles click events on the chip. */\n    _handleClick(event) {\n        if (this.disabled) {\n            event.preventDefault();\n        }\n        else {\n            event.stopPropagation();\n        }\n    }\n    /** Handle custom key presses. */\n    _handleKeydown(event) {\n        if (this.disabled) {\n            return;\n        }\n        switch (event.keyCode) {\n            case DELETE:\n            case BACKSPACE:\n                // If we are removable, remove the focused chip\n                this.remove();\n                // Always prevent so page navigation does not occur\n                event.preventDefault();\n                break;\n            case SPACE:\n                // If we are selectable, toggle the focused chip\n                if (this.selectable) {\n                    this.toggleSelected(true);\n                }\n                // Always prevent space from scrolling the page since the list has focus\n                event.preventDefault();\n                break;\n        }\n    }\n    _blur() {\n        // When animations are enabled, Angular may end up removing the chip from the DOM a little\n        // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n        // that moves focus not the next item. To work around the issue, we defer marking the chip\n        // as not focused until the next time the zone stabilizes.\n        this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n            this._ngZone.run(() => {\n                this._hasFocus = false;\n                this._onBlur.next({ chip: this });\n            });\n        });\n    }\n    _dispatchSelectionChange(isUserInput = false) {\n        this.selectionChange.emit({\n            source: this,\n            isUserInput,\n            selected: this._selected,\n        });\n    }\n}\nMatChip.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatChip, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i1.Platform }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: i0.ChangeDetectorRef }, { token: DOCUMENT }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatChip.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatChip, selector: \"mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]\", inputs: { color: \"color\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", selected: \"selected\", value: \"value\", selectable: \"selectable\", disabled: \"disabled\", removable: \"removable\" }, outputs: { selectionChange: \"selectionChange\", destroyed: \"destroyed\", removed: \"removed\" }, host: { attributes: { \"role\": \"option\" }, listeners: { \"click\": \"_handleClick($event)\", \"keydown\": \"_handleKeydown($event)\", \"focus\": \"focus()\", \"blur\": \"_blur()\" }, properties: { \"attr.tabindex\": \"disabled ? null : tabIndex\", \"class.mat-chip-selected\": \"selected\", \"class.mat-chip-with-avatar\": \"avatar\", \"class.mat-chip-with-trailing-icon\": \"trailingIcon || removeIcon\", \"class.mat-chip-disabled\": \"disabled\", \"class._mat-animation-noopable\": \"_animationsDisabled\", \"attr.disabled\": \"disabled || null\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-selected\": \"ariaSelected\" }, classAttribute: \"mat-chip mat-focus-indicator\" }, queries: [{ propertyName: \"avatar\", first: true, predicate: MAT_CHIP_AVATAR, descendants: true }, { propertyName: \"trailingIcon\", first: true, predicate: MAT_CHIP_TRAILING_ICON, descendants: true }, { propertyName: \"removeIcon\", first: true, predicate: MAT_CHIP_REMOVE, descendants: true }], exportAs: [\"matChip\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatChip, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]`,\n                    inputs: ['color', 'disableRipple', 'tabIndex'],\n                    exportAs: 'matChip',\n                    host: {\n                        'class': 'mat-chip mat-focus-indicator',\n                        '[attr.tabindex]': 'disabled ? null : tabIndex',\n                        'role': 'option',\n                        '[class.mat-chip-selected]': 'selected',\n                        '[class.mat-chip-with-avatar]': 'avatar',\n                        '[class.mat-chip-with-trailing-icon]': 'trailingIcon || removeIcon',\n                        '[class.mat-chip-disabled]': 'disabled',\n                        '[class._mat-animation-noopable]': '_animationsDisabled',\n                        '[attr.disabled]': 'disabled || null',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-selected]': 'ariaSelected',\n                        '(click)': '_handleClick($event)',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(focus)': 'focus()',\n                        '(blur)': '_blur()',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i1.Platform }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                    }] }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['tabindex']\n                    }] }];\n    }, propDecorators: { avatar: [{\n                type: ContentChild,\n                args: [MAT_CHIP_AVATAR]\n            }], trailingIcon: [{\n                type: ContentChild,\n                args: [MAT_CHIP_TRAILING_ICON]\n            }], removeIcon: [{\n                type: ContentChild,\n                args: [MAT_CHIP_REMOVE]\n            }], selected: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], selectable: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], removable: [{\n                type: Input\n            }], selectionChange: [{\n                type: Output\n            }], destroyed: [{\n                type: Output\n            }], removed: [{\n                type: Output\n            }] } });\n/**\n * Applies proper (click) support and adds styling for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n *     `<mat-chip>\n *       <mat-icon matChipRemove>cancel</mat-icon>\n *     </mat-chip>`\n *\n * You *may* use a custom icon, but you may need to override the `mat-chip-remove` positioning\n * styles to properly center the icon within the chip.\n */\nclass MatChipRemove {\n    constructor(_parentChip, elementRef) {\n        this._parentChip = _parentChip;\n        if (elementRef.nativeElement.nodeName === 'BUTTON') {\n            elementRef.nativeElement.setAttribute('type', 'button');\n        }\n    }\n    /** Calls the parent chip's public `remove()` method if applicable. */\n    _handleClick(event) {\n        const parentChip = this._parentChip;\n        if (parentChip.removable && !parentChip.disabled) {\n            parentChip.remove();\n        }\n        // We need to stop event propagation because otherwise the event will bubble up to the\n        // form field and cause the `onContainerClick` method to be invoked. This method would then\n        // reset the focused chip that has been focused after chip removal. Usually the parent\n        // the parent click listener of the `MatChip` would prevent propagation, but it can happen\n        // that the chip is being removed before the event bubbles up.\n        event.stopPropagation();\n    }\n}\nMatChipRemove.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatChipRemove, deps: [{ token: MatChip }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatChipRemove.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatChipRemove, selector: \"[matChipRemove]\", host: { listeners: { \"click\": \"_handleClick($event)\" }, classAttribute: \"mat-chip-remove mat-chip-trailing-icon\" }, providers: [{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatChipRemove, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matChipRemove]',\n                    host: {\n                        'class': 'mat-chip-remove mat-chip-trailing-icon',\n                        '(click)': '_handleClick($event)',\n                    },\n                    providers: [{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }],\n                }]\n        }], ctorParameters: function () { return [{ type: MatChip }, { type: i0.ElementRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for the chips module. */\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids.\nlet nextUniqueId$1 = 0;\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of an `<mat-chip-list>`.\n */\nclass MatChipInput {\n    constructor(_elementRef, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._defaultOptions = _defaultOptions;\n        /** Whether the control is focused. */\n        this.focused = false;\n        this._addOnBlur = false;\n        /**\n         * The list of key codes that will trigger a chipEnd event.\n         *\n         * Defaults to `[ENTER]`.\n         */\n        this.separatorKeyCodes = this._defaultOptions.separatorKeyCodes;\n        /** Emitted when a chip is to be added. */\n        this.chipEnd = new EventEmitter();\n        /** The input's placeholder text. */\n        this.placeholder = '';\n        /** Unique id for the input. */\n        this.id = `mat-chip-list-input-${nextUniqueId$1++}`;\n        this._disabled = false;\n        this.inputElement = this._elementRef.nativeElement;\n    }\n    /** Register input for chip list */\n    set chipList(value) {\n        if (value) {\n            this._chipList = value;\n            this._chipList.registerInput(this);\n        }\n    }\n    /**\n     * Whether or not the chipEnd event will be emitted when the input is blurred.\n     */\n    get addOnBlur() {\n        return this._addOnBlur;\n    }\n    set addOnBlur(value) {\n        this._addOnBlur = coerceBooleanProperty(value);\n    }\n    /** Whether the input is disabled. */\n    get disabled() {\n        return this._disabled || (this._chipList && this._chipList.disabled);\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /** Whether the input is empty. */\n    get empty() {\n        return !this.inputElement.value;\n    }\n    ngOnChanges() {\n        this._chipList.stateChanges.next();\n    }\n    ngOnDestroy() {\n        this.chipEnd.complete();\n    }\n    ngAfterContentInit() {\n        this._focusLastChipOnBackspace = this.empty;\n    }\n    /** Utility method to make host definition/tests more clear. */\n    _keydown(event) {\n        if (event) {\n            // Allow the user's focus to escape when they're tabbing forward. Note that we don't\n            // want to do this when going backwards, because focus should go back to the first chip.\n            if (event.keyCode === TAB && !hasModifierKey(event, 'shiftKey')) {\n                this._chipList._allowFocusEscape();\n            }\n            // To prevent the user from accidentally deleting chips when pressing BACKSPACE continuously,\n            // We focus the last chip on backspace only after the user has released the backspace button,\n            // and the input is empty (see behaviour in _keyup)\n            if (event.keyCode === BACKSPACE && this._focusLastChipOnBackspace) {\n                this._chipList._keyManager.setLastItemActive();\n                event.preventDefault();\n                return;\n            }\n            else {\n                this._focusLastChipOnBackspace = false;\n            }\n        }\n        this._emitChipEnd(event);\n    }\n    /**\n     * Pass events to the keyboard manager. Available here for tests.\n     */\n    _keyup(event) {\n        // Allow user to move focus to chips next time he presses backspace\n        if (!this._focusLastChipOnBackspace && event.keyCode === BACKSPACE && this.empty) {\n            this._focusLastChipOnBackspace = true;\n            event.preventDefault();\n        }\n    }\n    /** Checks to see if the blur should emit the (chipEnd) event. */\n    _blur() {\n        if (this.addOnBlur) {\n            this._emitChipEnd();\n        }\n        this.focused = false;\n        // Blur the chip list if it is not focused\n        if (!this._chipList.focused) {\n            this._chipList._blur();\n        }\n        this._chipList.stateChanges.next();\n    }\n    _focus() {\n        this.focused = true;\n        this._focusLastChipOnBackspace = this.empty;\n        this._chipList.stateChanges.next();\n    }\n    /** Checks to see if the (chipEnd) event needs to be emitted. */\n    _emitChipEnd(event) {\n        if (!this.inputElement.value && !!event) {\n            this._chipList._keydown(event);\n        }\n        if (!event || this._isSeparatorKey(event)) {\n            this.chipEnd.emit({\n                input: this.inputElement,\n                value: this.inputElement.value,\n                chipInput: this,\n            });\n            event === null || event === void 0 ? void 0 : event.preventDefault();\n        }\n    }\n    _onInput() {\n        // Let chip list know whenever the value changes.\n        this._chipList.stateChanges.next();\n    }\n    /** Focuses the input. */\n    focus(options) {\n        this.inputElement.focus(options);\n    }\n    /** Clears the input */\n    clear() {\n        this.inputElement.value = '';\n        this._focusLastChipOnBackspace = true;\n    }\n    /** Checks whether a keycode is one of the configured separators. */\n    _isSeparatorKey(event) {\n        return !hasModifierKey(event) && new Set(this.separatorKeyCodes).has(event.keyCode);\n    }\n}\nMatChipInput.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatChipInput, deps: [{ token: i0.ElementRef }, { token: MAT_CHIPS_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Directive });\nMatChipInput.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatChipInput, selector: \"input[matChipInputFor]\", inputs: { chipList: [\"matChipInputFor\", \"chipList\"], addOnBlur: [\"matChipInputAddOnBlur\", \"addOnBlur\"], separatorKeyCodes: [\"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"], placeholder: \"placeholder\", id: \"id\", disabled: \"disabled\" }, outputs: { chipEnd: \"matChipInputTokenEnd\" }, host: { listeners: { \"keydown\": \"_keydown($event)\", \"keyup\": \"_keyup($event)\", \"blur\": \"_blur()\", \"focus\": \"_focus()\", \"input\": \"_onInput()\" }, properties: { \"id\": \"id\", \"attr.disabled\": \"disabled || null\", \"attr.placeholder\": \"placeholder || null\", \"attr.aria-invalid\": \"_chipList && _chipList.ngControl ? _chipList.ngControl.invalid : null\", \"attr.aria-required\": \"_chipList && _chipList.required || null\" }, classAttribute: \"mat-chip-input mat-input-element\" }, exportAs: [\"matChipInput\", \"matChipInputFor\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatChipInput, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[matChipInputFor]',\n                    exportAs: 'matChipInput, matChipInputFor',\n                    host: {\n                        'class': 'mat-chip-input mat-input-element',\n                        '(keydown)': '_keydown($event)',\n                        '(keyup)': '_keyup($event)',\n                        '(blur)': '_blur()',\n                        '(focus)': '_focus()',\n                        '(input)': '_onInput()',\n                        '[id]': 'id',\n                        '[attr.disabled]': 'disabled || null',\n                        '[attr.placeholder]': 'placeholder || null',\n                        '[attr.aria-invalid]': '_chipList && _chipList.ngControl ? _chipList.ngControl.invalid : null',\n                        '[attr.aria-required]': '_chipList && _chipList.required || null',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_CHIPS_DEFAULT_OPTIONS]\n                    }] }];\n    }, propDecorators: { chipList: [{\n                type: Input,\n                args: ['matChipInputFor']\n            }], addOnBlur: [{\n                type: Input,\n                args: ['matChipInputAddOnBlur']\n            }], separatorKeyCodes: [{\n                type: Input,\n                args: ['matChipInputSeparatorKeyCodes']\n            }], chipEnd: [{\n                type: Output,\n                args: ['matChipInputTokenEnd']\n            }], placeholder: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatChipList.\n/** @docs-private */\nconst _MatChipListBase = mixinErrorState(class {\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /** @docs-private */\n    ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n});\n// Increasing integer for generating unique ids for chip-list components.\nlet nextUniqueId = 0;\n/** Change event object that is emitted when the chip list value has changed. */\nclass MatChipListChange {\n    constructor(\n    /** Chip list that emitted the event. */\n    source, \n    /** Value of the chip list when the event was emitted. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * A material design chips component (named ChipList for its similarity to the List component).\n */\nclass MatChipList extends _MatChipListBase {\n    constructor(_elementRef, _changeDetectorRef, _dir, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, ngControl) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.controlType = 'mat-chip-list';\n        /**\n         * When a chip is destroyed, we store the index of the destroyed chip until the chips\n         * query list notifies about the update. This is necessary because we cannot determine an\n         * appropriate chip that should receive focus until the array of chips updated completely.\n         */\n        this._lastDestroyedChipIndex = null;\n        /** Subject that emits when the component has been destroyed. */\n        this._destroyed = new Subject();\n        /** Uid of the chip list */\n        this._uid = `mat-chip-list-${nextUniqueId++}`;\n        /** Tab index for the chip list. */\n        this._tabIndex = 0;\n        /**\n         * User defined tab index.\n         * When it is not null, use user defined tab index. Otherwise use _tabIndex\n         */\n        this._userTabIndex = null;\n        /** Function when touched */\n        this._onTouched = () => { };\n        /** Function when changed */\n        this._onChange = () => { };\n        this._multiple = false;\n        this._compareWith = (o1, o2) => o1 === o2;\n        this._disabled = false;\n        /** Orientation of the chip list. */\n        this.ariaOrientation = 'horizontal';\n        this._selectable = true;\n        /** Event emitted when the selected chip list value has been changed by the user. */\n        this.change = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            this.ngControl.valueAccessor = this;\n        }\n    }\n    /** The array of selected chips inside chip list. */\n    get selected() {\n        var _a, _b;\n        return this.multiple ? ((_a = this._selectionModel) === null || _a === void 0 ? void 0 : _a.selected) || [] : (_b = this._selectionModel) === null || _b === void 0 ? void 0 : _b.selected[0];\n    }\n    /** The ARIA role applied to the chip list. */\n    get role() {\n        return this.empty ? null : 'listbox';\n    }\n    /** Whether the user should be allowed to select multiple chips. */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * A function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() {\n        return this._compareWith;\n    }\n    set compareWith(fn) {\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        this.writeValue(value);\n        this._value = value;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() {\n        return this._chipInput ? this._chipInput.id : this._uid;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() {\n        var _a, _b, _c, _d;\n        return (_d = (_a = this._required) !== null && _a !== void 0 ? _a : (_c = (_b = this.ngControl) === null || _b === void 0 ? void 0 : _b.control) === null || _c === void 0 ? void 0 : _c.hasValidator(Validators.required)) !== null && _d !== void 0 ? _d : false;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get placeholder() {\n        return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n    }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /** Whether any chips or the matChipInput inside of this chip-list has focus. */\n    get focused() {\n        return (this._chipInput && this._chipInput.focused) || this._hasFocusedChip();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return (!this._chipInput || this._chipInput.empty) && (!this.chips || this.chips.length === 0);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        return !this.empty || this.focused;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n        return this.ngControl ? !!this.ngControl.disabled : this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * Whether or not this chip list is selectable. When a chip list is not selectable,\n     * the selected states for all the chips inside the chip list are always ignored.\n     */\n    get selectable() {\n        return this._selectable;\n    }\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n        if (this.chips) {\n            this.chips.forEach(chip => (chip.chipListSelectable = this._selectable));\n        }\n    }\n    set tabIndex(value) {\n        this._userTabIndex = value;\n        this._tabIndex = value;\n    }\n    /** Combined stream of all of the child chips' selection change events. */\n    get chipSelectionChanges() {\n        return merge(...this.chips.map(chip => chip.selectionChange));\n    }\n    /** Combined stream of all of the child chips' focus change events. */\n    get chipFocusChanges() {\n        return merge(...this.chips.map(chip => chip._onFocus));\n    }\n    /** Combined stream of all of the child chips' blur change events. */\n    get chipBlurChanges() {\n        return merge(...this.chips.map(chip => chip._onBlur));\n    }\n    /** Combined stream of all of the child chips' remove change events. */\n    get chipRemoveChanges() {\n        return merge(...this.chips.map(chip => chip.destroyed));\n    }\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager(this.chips)\n            .withWrap()\n            .withVerticalOrientation()\n            .withHomeAndEnd()\n            .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr');\n        if (this._dir) {\n            this._dir.change\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(dir => this._keyManager.withHorizontalOrientation(dir));\n        }\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._allowFocusEscape();\n        });\n        // When the list changes, re-subscribe\n        this.chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            if (this.disabled) {\n                // Since this happens after the content has been\n                // checked, we need to defer it to the next tick.\n                Promise.resolve().then(() => {\n                    this._syncChipsState();\n                });\n            }\n            this._resetChips();\n            // Reset chips selected/deselected status\n            this._initializeSelection();\n            // Check to see if we need to update our tab index\n            this._updateTabIndex();\n            // Check to see if we have a destroyed chip and need to refocus\n            this._updateFocusForDestroyedChips();\n            this.stateChanges.next();\n        });\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n        this.stateChanges.next();\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n            if (this.ngControl.disabled !== this._disabled) {\n                this.disabled = !!this.ngControl.disabled;\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.stateChanges.complete();\n        this._dropSubscriptions();\n    }\n    /** Associates an HTML input element with this chip list. */\n    registerInput(inputElement) {\n        this._chipInput = inputElement;\n        // We use this attribute to match the chip list to its input in test harnesses.\n        // Set the attribute directly here to avoid \"changed after checked\" errors.\n        this._elementRef.nativeElement.setAttribute('data-mat-chip-input', inputElement.id);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        if (this.chips) {\n            this._setSelectionByValue(value, false);\n        }\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick(event) {\n        if (!this._originatesFromChip(event)) {\n            this.focus();\n        }\n    }\n    /**\n     * Focuses the first non-disabled chip in this chip list, or the associated input when there\n     * are no eligible chips.\n     */\n    focus(options) {\n        if (this.disabled) {\n            return;\n        }\n        // TODO: ARIA says this should focus the first `selected` chip if any are selected.\n        // Focus on first element if there's no chipInput inside chip-list\n        if (this._chipInput && this._chipInput.focused) {\n            // do nothing\n        }\n        else if (this.chips.length > 0) {\n            this._keyManager.setFirstItemActive();\n            this.stateChanges.next();\n        }\n        else {\n            this._focusInput(options);\n            this.stateChanges.next();\n        }\n    }\n    /** Attempt to focus an input if we have one. */\n    _focusInput(options) {\n        if (this._chipInput) {\n            this._chipInput.focus(options);\n        }\n    }\n    /**\n     * Pass events to the keyboard manager. Available here for tests.\n     */\n    _keydown(event) {\n        const target = event.target;\n        if (target && target.classList.contains('mat-chip')) {\n            this._keyManager.onKeydown(event);\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Check the tab index as you should not be allowed to focus an empty list.\n     */\n    _updateTabIndex() {\n        // If we have 0 chips, we should not allow keyboard focus\n        this._tabIndex = this._userTabIndex || (this.chips.length === 0 ? -1 : 0);\n    }\n    /**\n     * If the amount of chips changed, we need to update the\n     * key manager state and focus the next closest chip.\n     */\n    _updateFocusForDestroyedChips() {\n        // Move focus to the closest chip. If no other chips remain, focus the chip-list itself.\n        if (this._lastDestroyedChipIndex != null) {\n            if (this.chips.length) {\n                const newChipIndex = Math.min(this._lastDestroyedChipIndex, this.chips.length - 1);\n                this._keyManager.setActiveItem(newChipIndex);\n            }\n            else {\n                this.focus();\n            }\n        }\n        this._lastDestroyedChipIndex = null;\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of chips.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.chips.length;\n    }\n    _setSelectionByValue(value, isUserInput = true) {\n        this._clearSelection();\n        this.chips.forEach(chip => chip.deselect());\n        if (Array.isArray(value)) {\n            value.forEach(currentValue => this._selectValue(currentValue, isUserInput));\n            this._sortValues();\n        }\n        else {\n            const correspondingChip = this._selectValue(value, isUserInput);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what chip the user interacted with last.\n            if (correspondingChip) {\n                if (isUserInput) {\n                    this._keyManager.setActiveItem(correspondingChip);\n                }\n            }\n        }\n    }\n    /**\n     * Finds and selects the chip based on its value.\n     * @returns Chip that has the corresponding value.\n     */\n    _selectValue(value, isUserInput = true) {\n        const correspondingChip = this.chips.find(chip => {\n            return chip.value != null && this._compareWith(chip.value, value);\n        });\n        if (correspondingChip) {\n            isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n            this._selectionModel.select(correspondingChip);\n        }\n        return correspondingChip;\n    }\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            if (this.ngControl || this._value) {\n                this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value, false);\n                this.stateChanges.next();\n            }\n        });\n    }\n    /**\n     * Deselects every chip in the list.\n     * @param skip Chip that should not be deselected.\n     */\n    _clearSelection(skip) {\n        this._selectionModel.clear();\n        this.chips.forEach(chip => {\n            if (chip !== skip) {\n                chip.deselect();\n            }\n        });\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the model values, ensuring that they keep the same\n     * order that they have in the panel.\n     */\n    _sortValues() {\n        if (this._multiple) {\n            this._selectionModel.clear();\n            this.chips.forEach(chip => {\n                if (chip.selected) {\n                    this._selectionModel.select(chip);\n                }\n            });\n            this.stateChanges.next();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n        let valueToEmit = null;\n        if (Array.isArray(this.selected)) {\n            valueToEmit = this.selected.map(chip => chip.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.change.emit(new MatChipListChange(this, valueToEmit));\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** When blurred, mark the field as touched when focus moved outside the chip list. */\n    _blur() {\n        if (!this._hasFocusedChip()) {\n            this._keyManager.setActiveItem(-1);\n        }\n        if (!this.disabled) {\n            if (this._chipInput) {\n                // If there's a chip input, we should check whether the focus moved to chip input.\n                // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n                // to chip input, do nothing.\n                // Timeout is needed to wait for the focus() event trigger on chip input.\n                setTimeout(() => {\n                    if (!this.focused) {\n                        this._markAsTouched();\n                    }\n                });\n            }\n            else {\n                // If there's no chip input, then mark the field as touched.\n                this._markAsTouched();\n            }\n        }\n    }\n    /** Mark the field as touched */\n    _markAsTouched() {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Removes the `tabindex` from the chip list and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the list from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n        if (this._tabIndex !== -1) {\n            this._tabIndex = -1;\n            setTimeout(() => {\n                this._tabIndex = this._userTabIndex || 0;\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    _resetChips() {\n        this._dropSubscriptions();\n        this._listenToChipsFocus();\n        this._listenToChipsSelection();\n        this._listenToChipsRemoved();\n    }\n    _dropSubscriptions() {\n        if (this._chipFocusSubscription) {\n            this._chipFocusSubscription.unsubscribe();\n            this._chipFocusSubscription = null;\n        }\n        if (this._chipBlurSubscription) {\n            this._chipBlurSubscription.unsubscribe();\n            this._chipBlurSubscription = null;\n        }\n        if (this._chipSelectionSubscription) {\n            this._chipSelectionSubscription.unsubscribe();\n            this._chipSelectionSubscription = null;\n        }\n        if (this._chipRemoveSubscription) {\n            this._chipRemoveSubscription.unsubscribe();\n            this._chipRemoveSubscription = null;\n        }\n    }\n    /** Listens to user-generated selection events on each chip. */\n    _listenToChipsSelection() {\n        this._chipSelectionSubscription = this.chipSelectionChanges.subscribe(event => {\n            event.source.selected\n                ? this._selectionModel.select(event.source)\n                : this._selectionModel.deselect(event.source);\n            // For single selection chip list, make sure the deselected value is unselected.\n            if (!this.multiple) {\n                this.chips.forEach(chip => {\n                    if (!this._selectionModel.isSelected(chip) && chip.selected) {\n                        chip.deselect();\n                    }\n                });\n            }\n            if (event.isUserInput) {\n                this._propagateChanges();\n            }\n        });\n    }\n    /** Listens to user-generated selection events on each chip. */\n    _listenToChipsFocus() {\n        this._chipFocusSubscription = this.chipFocusChanges.subscribe(event => {\n            let chipIndex = this.chips.toArray().indexOf(event.chip);\n            if (this._isValidIndex(chipIndex)) {\n                this._keyManager.updateActiveItem(chipIndex);\n            }\n            this.stateChanges.next();\n        });\n        this._chipBlurSubscription = this.chipBlurChanges.subscribe(() => {\n            this._blur();\n            this.stateChanges.next();\n        });\n    }\n    _listenToChipsRemoved() {\n        this._chipRemoveSubscription = this.chipRemoveChanges.subscribe(event => {\n            const chip = event.chip;\n            const chipIndex = this.chips.toArray().indexOf(event.chip);\n            // In case the chip that will be removed is currently focused, we temporarily store\n            // the index in order to be able to determine an appropriate sibling chip that will\n            // receive focus.\n            if (this._isValidIndex(chipIndex) && chip._hasFocus) {\n                this._lastDestroyedChipIndex = chipIndex;\n            }\n        });\n    }\n    /** Checks whether an event comes from inside a chip element. */\n    _originatesFromChip(event) {\n        let currentElement = event.target;\n        while (currentElement && currentElement !== this._elementRef.nativeElement) {\n            if (currentElement.classList.contains('mat-chip')) {\n                return true;\n            }\n            currentElement = currentElement.parentElement;\n        }\n        return false;\n    }\n    /** Checks whether any of the chips is focused. */\n    _hasFocusedChip() {\n        return this.chips && this.chips.some(chip => chip._hasFocus);\n    }\n    /** Syncs the list's state with the individual chips. */\n    _syncChipsState() {\n        if (this.chips) {\n            this.chips.forEach(chip => {\n                chip._chipListDisabled = this._disabled;\n                chip._chipListMultiple = this.multiple;\n            });\n        }\n    }\n}\nMatChipList.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatChipList, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.Directionality, optional: true }, { token: i2.NgForm, optional: true }, { token: i2.FormGroupDirective, optional: true }, { token: i3.ErrorStateMatcher }, { token: i2.NgControl, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Component });\nMatChipList.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatChipList, selector: \"mat-chip-list\", inputs: { errorStateMatcher: \"errorStateMatcher\", multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", required: \"required\", placeholder: \"placeholder\", disabled: \"disabled\", ariaOrientation: [\"aria-orientation\", \"ariaOrientation\"], selectable: \"selectable\", tabIndex: \"tabIndex\" }, outputs: { change: \"change\", valueChange: \"valueChange\" }, host: { listeners: { \"focus\": \"focus()\", \"blur\": \"_blur()\", \"keydown\": \"_keydown($event)\" }, properties: { \"attr.tabindex\": \"disabled ? null : _tabIndex\", \"attr.aria-describedby\": \"_ariaDescribedby || null\", \"attr.aria-required\": \"role ? required : null\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-invalid\": \"errorState\", \"attr.aria-multiselectable\": \"multiple\", \"attr.role\": \"role\", \"class.mat-chip-list-disabled\": \"disabled\", \"class.mat-chip-list-invalid\": \"errorState\", \"class.mat-chip-list-required\": \"required\", \"attr.aria-orientation\": \"ariaOrientation\", \"id\": \"_uid\" }, classAttribute: \"mat-chip-list\" }, providers: [{ provide: MatFormFieldControl, useExisting: MatChipList }], queries: [{ propertyName: \"chips\", predicate: MatChip, descendants: true }], exportAs: [\"matChipList\"], usesInheritance: true, ngImport: i0, template: `<div class=\"mat-chip-list-wrapper\"><ng-content></ng-content></div>`, isInline: true, styles: [\".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove{border:none;-webkit-appearance:none;-moz-appearance:none;padding:0;background:none}.mat-standard-chip .mat-chip-remove.mat-icon,.mat-standard-chip .mat-chip-remove .mat-icon{width:18px;height:18px;font-size:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.cdk-high-contrast-active .mat-standard-chip.mat-chip-selected{outline-width:3px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatChipList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-chip-list', template: `<div class=\"mat-chip-list-wrapper\"><ng-content></ng-content></div>`, exportAs: 'matChipList', host: {\n                        '[attr.tabindex]': 'disabled ? null : _tabIndex',\n                        '[attr.aria-describedby]': '_ariaDescribedby || null',\n                        '[attr.aria-required]': 'role ? required : null',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-invalid]': 'errorState',\n                        '[attr.aria-multiselectable]': 'multiple',\n                        '[attr.role]': 'role',\n                        '[class.mat-chip-list-disabled]': 'disabled',\n                        '[class.mat-chip-list-invalid]': 'errorState',\n                        '[class.mat-chip-list-required]': 'required',\n                        '[attr.aria-orientation]': 'ariaOrientation',\n                        'class': 'mat-chip-list',\n                        '(focus)': 'focus()',\n                        '(blur)': '_blur()',\n                        '(keydown)': '_keydown($event)',\n                        '[id]': '_uid',\n                    }, providers: [{ provide: MatFormFieldControl, useExisting: MatChipList }], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove{border:none;-webkit-appearance:none;-moz-appearance:none;padding:0;background:none}.mat-standard-chip .mat-chip-remove.mat-icon,.mat-standard-chip .mat-chip-remove .mat-icon{width:18px;height:18px;font-size:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.cdk-high-contrast-active .mat-standard-chip.mat-chip-selected{outline-width:3px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i2.NgForm, decorators: [{\n                        type: Optional\n                    }] }, { type: i2.FormGroupDirective, decorators: [{\n                        type: Optional\n                    }] }, { type: i3.ErrorStateMatcher }, { type: i2.NgControl, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }] }];\n    }, propDecorators: { errorStateMatcher: [{\n                type: Input\n            }], multiple: [{\n                type: Input\n            }], compareWith: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], ariaOrientation: [{\n                type: Input,\n                args: ['aria-orientation']\n            }], selectable: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], valueChange: [{\n                type: Output\n            }], chips: [{\n                type: ContentChildren,\n                args: [MatChip, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst CHIP_DECLARATIONS = [\n    MatChipList,\n    MatChip,\n    MatChipInput,\n    MatChipRemove,\n    MatChipAvatar,\n    MatChipTrailingIcon,\n];\nclass MatChipsModule {\n}\nMatChipsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatChipsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatChipsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatChipsModule, declarations: [MatChipList,\n        MatChip,\n        MatChipInput,\n        MatChipRemove,\n        MatChipAvatar,\n        MatChipTrailingIcon], imports: [MatCommonModule], exports: [MatChipList,\n        MatChip,\n        MatChipInput,\n        MatChipRemove,\n        MatChipAvatar,\n        MatChipTrailingIcon] });\nMatChipsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatChipsModule, providers: [\n        ErrorStateMatcher,\n        {\n            provide: MAT_CHIPS_DEFAULT_OPTIONS,\n            useValue: {\n                separatorKeyCodes: [ENTER],\n            },\n        },\n    ], imports: [[MatCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatChipsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: CHIP_DECLARATIONS,\n                    declarations: CHIP_DECLARATIONS,\n                    providers: [\n                        ErrorStateMatcher,\n                        {\n                            provide: MAT_CHIPS_DEFAULT_OPTIONS,\n                            useValue: {\n                                separatorKeyCodes: [ENTER],\n                            },\n                        },\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHIPS_DEFAULT_OPTIONS, MAT_CHIP_AVATAR, MAT_CHIP_REMOVE, MAT_CHIP_TRAILING_ICON, MatChip, MatChipAvatar, MatChipInput, MatChipList, MatChipListChange, MatChipRemove, MatChipSelectionChange, MatChipTrailingIcon, MatChipsModule };\n","import * as i6 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Optional, SkipSelf, InjectionToken, EventEmitter, Directive, Input, Output, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, NgModule } from '@angular/core';\nimport * as i4 from '@angular/material/core';\nimport { mixinDisabled, mixinInitialized, MatCommonModule } from '@angular/material/core';\nimport * as i5 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i3 from '@angular/material/select';\nimport { MatSelectModule } from '@angular/material/select';\nimport * as i7 from '@angular/material/tooltip';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport * as i2 from '@angular/material/form-field';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nclass MatPaginatorIntl {\n    constructor() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the page size selector. */\n        this.itemsPerPageLabel = 'Items per page:';\n        /** A label for the button that increments the current page. */\n        this.nextPageLabel = 'Next page';\n        /** A label for the button that decrements the current page. */\n        this.previousPageLabel = 'Previous page';\n        /** A label for the button that moves to the first page. */\n        this.firstPageLabel = 'First page';\n        /** A label for the button that moves to the last page. */\n        this.lastPageLabel = 'Last page';\n        /** A label for the range of items within the current page and the length of the whole list. */\n        this.getRangeLabel = (page, pageSize, length) => {\n            if (length == 0 || pageSize == 0) {\n                return `0 of ${length}`;\n            }\n            length = Math.max(length, 0);\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n            return `${startIndex + 1} – ${endIndex} of ${length}`;\n        };\n    }\n}\nMatPaginatorIntl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatPaginatorIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nMatPaginatorIntl.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatPaginatorIntl, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatPaginatorIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/** @docs-private */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\n/** Injection token that can be used to provide the default options for the paginator module. */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to _MatPaginatorBase.\n/** @docs-private */\nconst _MatPaginatorMixinBase = mixinDisabled(mixinInitialized(class {\n}));\n/**\n * Base class with all of the `MatPaginator` functionality.\n * @docs-private\n */\nclass _MatPaginatorBase extends _MatPaginatorMixinBase {\n    constructor(_intl, _changeDetectorRef, defaults) {\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._pageIndex = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        this._hidePageSize = false;\n        this._showFirstLastButtons = false;\n        /** Event emitted when the paginator changes the page size or page index. */\n        this.page = new EventEmitter();\n        this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n        if (defaults) {\n            const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons } = defaults;\n            if (pageSize != null) {\n                this._pageSize = pageSize;\n            }\n            if (pageSizeOptions != null) {\n                this._pageSizeOptions = pageSizeOptions;\n            }\n            if (hidePageSize != null) {\n                this._hidePageSize = hidePageSize;\n            }\n            if (showFirstLastButtons != null) {\n                this._showFirstLastButtons = showFirstLastButtons;\n            }\n        }\n    }\n    /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n    get pageIndex() {\n        return this._pageIndex;\n    }\n    set pageIndex(value) {\n        this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The length of the total number of items that are being paginated. Defaulted to 0. */\n    get length() {\n        return this._length;\n    }\n    set length(value) {\n        this._length = coerceNumberProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Number of items to display on a page. By default set to 50. */\n    get pageSize() {\n        return this._pageSize;\n    }\n    set pageSize(value) {\n        this._pageSize = Math.max(coerceNumberProperty(value), 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** The set of provided page size options to display to the user. */\n    get pageSizeOptions() {\n        return this._pageSizeOptions;\n    }\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map(p => coerceNumberProperty(p));\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** Whether to hide the page size selection UI from the user. */\n    get hidePageSize() {\n        return this._hidePageSize;\n    }\n    set hidePageSize(value) {\n        this._hidePageSize = coerceBooleanProperty(value);\n    }\n    /** Whether to show the first/last buttons UI to the user. */\n    get showFirstLastButtons() {\n        return this._showFirstLastButtons;\n    }\n    set showFirstLastButtons(value) {\n        this._showFirstLastButtons = coerceBooleanProperty(value);\n    }\n    ngOnInit() {\n        this._initialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._markInitialized();\n    }\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n    }\n    /** Advances to the next page if it exists. */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.pageIndex + 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move back to the previous page if it exists. */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.pageIndex - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the first page if not already there. */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the last page if not already there. */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Whether there is a previous page. */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /** Whether there is a next page. */\n    hasNextPage() {\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /** Calculate the number of pages */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        const startIndex = this.pageIndex * this.pageSize;\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Checks whether the buttons for going forwards should be disabled. */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /** Checks whether the buttons for going backwards should be disabled. */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._initialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize =\n                this.pageSizeOptions.length != 0 ? this.pageSizeOptions[0] : DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((a, b) => a - b);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length,\n        });\n    }\n}\n_MatPaginatorBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatPaginatorBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive });\n_MatPaginatorBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _MatPaginatorBase, inputs: { color: \"color\", pageIndex: \"pageIndex\", length: \"length\", pageSize: \"pageSize\", pageSizeOptions: \"pageSizeOptions\", hidePageSize: \"hidePageSize\", showFirstLastButtons: \"showFirstLastButtons\" }, outputs: { page: \"page\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatPaginatorBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: MatPaginatorIntl }, { type: i0.ChangeDetectorRef }, { type: undefined }]; }, propDecorators: { color: [{\n                type: Input\n            }], pageIndex: [{\n                type: Input\n            }], length: [{\n                type: Input\n            }], pageSize: [{\n                type: Input\n            }], pageSizeOptions: [{\n                type: Input\n            }], hidePageSize: [{\n                type: Input\n            }], showFirstLastButtons: [{\n                type: Input\n            }], page: [{\n                type: Output\n            }] } });\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator extends _MatPaginatorBase {\n    constructor(intl, changeDetectorRef, defaults) {\n        super(intl, changeDetectorRef, defaults);\n        if (defaults && defaults.formFieldAppearance != null) {\n            this._formFieldAppearance = defaults.formFieldAppearance;\n        }\n    }\n}\nMatPaginator.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatPaginator, deps: [{ token: MatPaginatorIntl }, { token: i0.ChangeDetectorRef }, { token: MAT_PAGINATOR_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatPaginator.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatPaginator, selector: \"mat-paginator\", inputs: { disabled: \"disabled\" }, host: { attributes: { \"role\": \"group\" }, classAttribute: \"mat-paginator\" }, exportAs: [\"matPaginator\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-paginator-outer-container\\\">\\n  <div class=\\\"mat-paginator-container\\\">\\n    <div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-paginator-page-size-label\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [appearance]=\\\"_formFieldAppearance!\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [aria-label]=\\\"_intl.itemsPerPageLabel\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\">\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-paginator-range-actions\\\">\\n      <div class=\\\"mat-paginator-range-label\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-paginator-icon{fill:CanvasText}\\n\"], components: [{ type: i2.MatFormField, selector: \"mat-form-field\", inputs: [\"color\", \"appearance\", \"hideRequiredMarker\", \"hintLabel\", \"floatLabel\"], exportAs: [\"matFormField\"] }, { type: i3.MatSelect, selector: \"mat-select\", inputs: [\"disabled\", \"disableRipple\", \"tabIndex\"], exportAs: [\"matSelect\"] }, { type: i4.MatOption, selector: \"mat-option\", exportAs: [\"matOption\"] }, { type: i5.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }], directives: [{ type: i6.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i6.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i7.MatTooltip, selector: \"[matTooltip]\", exportAs: [\"matTooltip\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatPaginator, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-paginator', exportAs: 'matPaginator', inputs: ['disabled'], host: {\n                        'class': 'mat-paginator',\n                        'role': 'group',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"mat-paginator-outer-container\\\">\\n  <div class=\\\"mat-paginator-container\\\">\\n    <div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-paginator-page-size-label\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [appearance]=\\\"_formFieldAppearance!\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [aria-label]=\\\"_intl.itemsPerPageLabel\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\">\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-paginator-range-actions\\\">\\n      <div class=\\\"mat-paginator-range-label\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-paginator-icon{fill:CanvasText}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: MatPaginatorIntl }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_PAGINATOR_DEFAULT_OPTIONS]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatPaginatorModule {\n}\nMatPaginatorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatPaginatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatPaginatorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatPaginatorModule, declarations: [MatPaginator], imports: [CommonModule, MatButtonModule, MatSelectModule, MatTooltipModule, MatCommonModule], exports: [MatPaginator] });\nMatPaginatorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatPaginatorModule, providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [[CommonModule, MatButtonModule, MatSelectModule, MatTooltipModule, MatCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatPaginatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatButtonModule, MatSelectModule, MatTooltipModule, MatCommonModule],\n                    exports: [MatPaginator],\n                    declarations: [MatPaginator],\n                    providers: [MAT_PAGINATOR_INTL_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent, _MatPaginatorBase };\n","import * as i0 from '@angular/core';\nimport { Injectable, Optional, SkipSelf, InjectionToken, EventEmitter, Directive, Inject, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { AnimationDurations, AnimationCurves, mixinInitialized, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { Subject, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes, query, animateChild } from '@angular/animations';\nimport * as i3 from '@angular/cdk/a11y';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' + AnimationCurves.STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * @docs-private\n */\nconst matSortAnimations = {\n    /** Animation that moves the sort indicator. */\n    indicator: trigger('indicator', [\n        state('active-asc, asc', style({ transform: 'translateY(0px)' })),\n        // 10px is the height of the sort indicator, minus the width of the pointers\n        state('active-desc, desc', style({ transform: 'translateY(10px)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that rotates the left pointer of the indicator based on the sorting direction. */\n    leftPointer: trigger('leftPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(-45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that rotates the right pointer of the indicator based on the sorting direction. */\n    rightPointer: trigger('rightPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(-45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that controls the arrow opacity. */\n    arrowOpacity: trigger('arrowOpacity', [\n        state('desc-to-active, asc-to-active, active', style({ opacity: 1 })),\n        state('desc-to-hint, asc-to-hint, hint', style({ opacity: 0.54 })),\n        state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', style({ opacity: 0 })),\n        // Transition between all states except for immediate transitions\n        transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n        transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /**\n     * Animation for the translation of the arrow as a whole. States are separated into two\n     * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n     * peek, and active. The other states define a specific animation (source-to-destination)\n     * and are determined as a function of their prev user-perceived state and what the next state\n     * should be.\n     */\n    arrowPosition: trigger('arrowPosition', [\n        // Hidden Above => Hint Center\n        transition('* => desc-to-hint, * => desc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(-25%)' }), style({ transform: 'translateY(0)' })]))),\n        // Hint Center => Hidden Below\n        transition('* => hint-to-desc, * => active-to-desc', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(0)' }), style({ transform: 'translateY(25%)' })]))),\n        // Hidden Below => Hint Center\n        transition('* => asc-to-hint, * => asc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(25%)' }), style({ transform: 'translateY(0)' })]))),\n        // Hint Center => Hidden Above\n        transition('* => hint-to-asc, * => active-to-asc', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(0)' }), style({ transform: 'translateY(-25%)' })]))),\n        state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', style({ transform: 'translateY(0)' })),\n        state('hint-to-desc, active-to-desc, desc', style({ transform: 'translateY(-25%)' })),\n        state('hint-to-asc, active-to-asc, asc', style({ transform: 'translateY(25%)' })),\n    ]),\n    /** Necessary trigger that calls animate on children animations. */\n    allowChildren: trigger('allowChildren', [\n        transition('* <=> *', [query('@*', animateChild(), { optional: true })]),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getSortDuplicateSortableIdError(id) {\n    return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/** @docs-private */\nfunction getSortHeaderNotContainedWithinSortError() {\n    return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/** @docs-private */\nfunction getSortHeaderMissingIdError() {\n    return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/** @docs-private */\nfunction getSortInvalidDirectionError(direction) {\n    return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nclass MatSortHeaderIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n    }\n}\nMatSortHeaderIntl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSortHeaderIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nMatSortHeaderIntl.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSortHeaderIntl, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSortHeaderIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatSortHeaderIntl();\n}\n/** @docs-private */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: MatSortHeaderIntl,\n    deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n    useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-sort`. */\nconst MAT_SORT_DEFAULT_OPTIONS = new InjectionToken('MAT_SORT_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to MatSort.\n/** @docs-private */\nconst _MatSortBase = mixinInitialized(mixinDisabled(class {\n}));\n/** Container for MatSortables to manage the sort state and provide default sort parameters. */\nclass MatSort extends _MatSortBase {\n    constructor(_defaultOptions) {\n        super();\n        this._defaultOptions = _defaultOptions;\n        /** Collection of all registered sortables that this directive manages. */\n        this.sortables = new Map();\n        /** Used to notify any child components listening to state changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The direction to set when an MatSortable is initially sorted.\n         * May be overriden by the MatSortable's sort start.\n         */\n        this.start = 'asc';\n        this._direction = '';\n        /** Event emitted when the user changes either the active sort or sort direction. */\n        this.sortChange = new EventEmitter();\n    }\n    /** The sort direction of the currently active MatSortable. */\n    get direction() {\n        return this._direction;\n    }\n    set direction(direction) {\n        if (direction &&\n            direction !== 'asc' &&\n            direction !== 'desc' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortInvalidDirectionError(direction);\n        }\n        this._direction = direction;\n    }\n    /**\n     * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n     * May be overriden by the MatSortable's disable clear input.\n     */\n    get disableClear() {\n        return this._disableClear;\n    }\n    set disableClear(v) {\n        this._disableClear = coerceBooleanProperty(v);\n    }\n    /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     */\n    register(sortable) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!sortable.id) {\n                throw getSortHeaderMissingIdError();\n            }\n            if (this.sortables.has(sortable.id)) {\n                throw getSortDuplicateSortableIdError(sortable.id);\n            }\n        }\n        this.sortables.set(sortable.id, sortable);\n    }\n    /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     */\n    deregister(sortable) {\n        this.sortables.delete(sortable.id);\n    }\n    /** Sets the active sort id and determines the new sort direction. */\n    sort(sortable) {\n        if (this.active != sortable.id) {\n            this.active = sortable.id;\n            this.direction = sortable.start ? sortable.start : this.start;\n        }\n        else {\n            this.direction = this.getNextSortDirection(sortable);\n        }\n        this.sortChange.emit({ active: this.active, direction: this.direction });\n    }\n    /** Returns the next sort direction of the active sortable, checking for potential overrides. */\n    getNextSortDirection(sortable) {\n        var _a, _b, _c;\n        if (!sortable) {\n            return '';\n        }\n        // Get the sort direction cycle with the potential sortable overrides.\n        const disableClear = (_b = (_a = sortable === null || sortable === void 0 ? void 0 : sortable.disableClear) !== null && _a !== void 0 ? _a : this.disableClear) !== null && _b !== void 0 ? _b : !!((_c = this._defaultOptions) === null || _c === void 0 ? void 0 : _c.disableClear);\n        let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n        // Get and return the next direction in the cycle\n        let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n        if (nextDirectionIndex >= sortDirectionCycle.length) {\n            nextDirectionIndex = 0;\n        }\n        return sortDirectionCycle[nextDirectionIndex];\n    }\n    ngOnInit() {\n        this._markInitialized();\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatSort.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSort, deps: [{ token: MAT_SORT_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatSort.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatSort, selector: \"[matSort]\", inputs: { disabled: [\"matSortDisabled\", \"disabled\"], active: [\"matSortActive\", \"active\"], start: [\"matSortStart\", \"start\"], direction: [\"matSortDirection\", \"direction\"], disableClear: [\"matSortDisableClear\", \"disableClear\"] }, outputs: { sortChange: \"matSortChange\" }, host: { classAttribute: \"mat-sort\" }, exportAs: [\"matSort\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSort, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matSort]',\n                    exportAs: 'matSort',\n                    host: { 'class': 'mat-sort' },\n                    inputs: ['disabled: matSortDisabled'],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_SORT_DEFAULT_OPTIONS]\n                    }] }];\n    }, propDecorators: { active: [{\n                type: Input,\n                args: ['matSortActive']\n            }], start: [{\n                type: Input,\n                args: ['matSortStart']\n            }], direction: [{\n                type: Input,\n                args: ['matSortDirection']\n            }], disableClear: [{\n                type: Input,\n                args: ['matSortDisableClear']\n            }], sortChange: [{\n                type: Output,\n                args: ['matSortChange']\n            }] } });\n/** Returns the sort direction cycle to use given the provided parameters of order and clear. */\nfunction getSortDirectionCycle(start, disableClear) {\n    let sortOrder = ['asc', 'desc'];\n    if (start == 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n    return sortOrder;\n}\n\n// Boilerplate for applying mixins to the sort header.\n/** @docs-private */\nconst _MatSortHeaderBase = mixinDisabled(class {\n});\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nclass MatSortHeader extends _MatSortHeaderBase {\n    constructor(\n    /**\n     * @deprecated `_intl` parameter isn't being used anymore and it'll be removed.\n     * @breaking-change 13.0.0\n     */\n    _intl, _changeDetectorRef, \n    // `MatSort` is not optionally injected, but just asserted manually w/ better error.\n    // tslint:disable-next-line: lightweight-tokens\n    _sort, _columnDef, _focusMonitor, _elementRef, \n    /** @breaking-change 14.0.0 _ariaDescriber will be required. */\n    _ariaDescriber) {\n        // Note that we use a string token for the `_columnDef`, because the value is provided both by\n        // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n        // and we want to avoid having the sort header depending on the CDK table because\n        // of this single reference.\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._sort = _sort;\n        this._columnDef = _columnDef;\n        this._focusMonitor = _focusMonitor;\n        this._elementRef = _elementRef;\n        this._ariaDescriber = _ariaDescriber;\n        /**\n         * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n         * provide an affordance that the header is sortable by showing on focus and hover.\n         */\n        this._showIndicatorHint = false;\n        /**\n         * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\n         * position through the animation. If animations are currently disabled, the fromState is removed\n         * so that there is no animation displayed.\n         */\n        this._viewState = {};\n        /** The direction the arrow should be facing according to the current state. */\n        this._arrowDirection = '';\n        /**\n         * Whether the view state animation should show the transition between the `from` and `to` states.\n         */\n        this._disableViewStateAnimation = false;\n        /** Sets the position of the arrow that displays when sorted. */\n        this.arrowPosition = 'after';\n        // Default the action description to \"Sort\" because it's better than nothing.\n        // Without a description, the button's label comes from the sort header text content,\n        // which doesn't give any indication that it performs a sorting operation.\n        this._sortActionDescription = 'Sort';\n        if (!_sort && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortHeaderNotContainedWithinSortError();\n        }\n        this._handleStateChanges();\n    }\n    /**\n     * Description applied to MatSortHeader's button element with aria-describedby. This text should\n     * describe the action that will occur when the user clicks the sort header.\n     */\n    get sortActionDescription() {\n        return this._sortActionDescription;\n    }\n    set sortActionDescription(value) {\n        this._updateSortActionDescription(value);\n    }\n    /** Overrides the disable clear value of the containing MatSort for this MatSortable. */\n    get disableClear() {\n        return this._disableClear;\n    }\n    set disableClear(v) {\n        this._disableClear = coerceBooleanProperty(v);\n    }\n    ngOnInit() {\n        if (!this.id && this._columnDef) {\n            this.id = this._columnDef.name;\n        }\n        // Initialize the direction of the arrow and set the view state to be immediately that state.\n        this._updateArrowDirection();\n        this._setAnimationTransitionState({\n            toState: this._isSorted() ? 'active' : this._arrowDirection,\n        });\n        this._sort.register(this);\n        this._sortButton = this._elementRef.nativeElement.querySelector('[role=\"button\"]');\n        this._updateSortActionDescription(this._sortActionDescription);\n    }\n    ngAfterViewInit() {\n        // We use the focus monitor because we also want to style\n        // things differently based on the focus origin.\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n            const newState = !!origin;\n            if (newState !== this._showIndicatorHint) {\n                this._setIndicatorHintVisible(newState);\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._sort.deregister(this);\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n     * user showing what the active sort will become. If set to false, the arrow will fade away.\n     */\n    _setIndicatorHintVisible(visible) {\n        // No-op if the sort header is disabled - should not make the hint visible.\n        if (this._isDisabled() && visible) {\n            return;\n        }\n        this._showIndicatorHint = visible;\n        if (!this._isSorted()) {\n            this._updateArrowDirection();\n            if (this._showIndicatorHint) {\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'hint' });\n            }\n            else {\n                this._setAnimationTransitionState({ fromState: 'hint', toState: this._arrowDirection });\n            }\n        }\n    }\n    /**\n     * Sets the animation transition view state for the arrow's position and opacity. If the\n     * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n     * no animation appears.\n     */\n    _setAnimationTransitionState(viewState) {\n        this._viewState = viewState || {};\n        // If the animation for arrow position state (opacity/translation) should be disabled,\n        // remove the fromState so that it jumps right to the toState.\n        if (this._disableViewStateAnimation) {\n            this._viewState = { toState: viewState.toState };\n        }\n    }\n    /** Triggers the sort on this sort header and removes the indicator hint. */\n    _toggleOnInteraction() {\n        this._sort.sort(this);\n        // Do not show the animation if the header was already shown in the right position.\n        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = true;\n        }\n    }\n    _handleClick() {\n        if (!this._isDisabled()) {\n            this._sort.sort(this);\n        }\n    }\n    _handleKeydown(event) {\n        if (!this._isDisabled() && (event.keyCode === SPACE || event.keyCode === ENTER)) {\n            event.preventDefault();\n            this._toggleOnInteraction();\n        }\n    }\n    /** Whether this MatSortHeader is currently sorted in either ascending or descending order. */\n    _isSorted() {\n        return (this._sort.active == this.id &&\n            (this._sort.direction === 'asc' || this._sort.direction === 'desc'));\n    }\n    /** Returns the animation state for the arrow direction (indicator and pointers). */\n    _getArrowDirectionState() {\n        return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n    }\n    /** Returns the arrow position state (opacity, translation). */\n    _getArrowViewState() {\n        const fromState = this._viewState.fromState;\n        return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n    }\n    /**\n     * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n     * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n     * active sorted direction. The reason this is updated through a function is because the direction\n     * should only be changed at specific times - when deactivated but the hint is displayed and when\n     * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n     * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n     * preserving its direction, even though the next sort direction is actually different and should\n     * only be changed once the arrow displays again (hint or activation).\n     */\n    _updateArrowDirection() {\n        this._arrowDirection = this._isSorted() ? this._sort.direction : this.start || this._sort.start;\n    }\n    _isDisabled() {\n        return this._sort.disabled || this.disabled;\n    }\n    /**\n     * Gets the aria-sort attribute that should be applied to this sort header. If this header\n     * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n     * says that the aria-sort property should only be present on one header at a time, so removing\n     * ensures this is true.\n     */\n    _getAriaSortAttribute() {\n        if (!this._isSorted()) {\n            return 'none';\n        }\n        return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n    }\n    /** Whether the arrow inside the sort header should be rendered. */\n    _renderArrow() {\n        return !this._isDisabled() || this._isSorted();\n    }\n    _updateSortActionDescription(newDescription) {\n        var _a, _b;\n        // We use AriaDescriber for the sort button instead of setting an `aria-label` because some\n        // screen readers (notably VoiceOver) will read both the column header *and* the button's label\n        // for every *cell* in the table, creating a lot of unnecessary noise.\n        // If _sortButton is undefined, the component hasn't been initialized yet so there's\n        // nothing to update in the DOM.\n        if (this._sortButton) {\n            // removeDescription will no-op if there is no existing message.\n            // TODO(jelbourn): remove optional chaining when AriaDescriber is required.\n            (_a = this._ariaDescriber) === null || _a === void 0 ? void 0 : _a.removeDescription(this._sortButton, this._sortActionDescription);\n            (_b = this._ariaDescriber) === null || _b === void 0 ? void 0 : _b.describe(this._sortButton, newDescription);\n        }\n        this._sortActionDescription = newDescription;\n    }\n    /** Handles changes in the sorting state. */\n    _handleStateChanges() {\n        this._rerenderSubscription = merge(this._sort.sortChange, this._sort._stateChanges, this._intl.changes).subscribe(() => {\n            if (this._isSorted()) {\n                this._updateArrowDirection();\n                // Do not show the animation if the header was already shown in the right position.\n                if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n                    this._disableViewStateAnimation = true;\n                }\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'active' });\n                this._showIndicatorHint = false;\n            }\n            // If this header was recently active and now no longer sorted, animate away the arrow.\n            if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n                this._disableViewStateAnimation = false;\n                this._setAnimationTransitionState({ fromState: 'active', toState: this._arrowDirection });\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n}\nMatSortHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSortHeader, deps: [{ token: MatSortHeaderIntl }, { token: i0.ChangeDetectorRef }, { token: MatSort, optional: true }, { token: 'MAT_SORT_HEADER_COLUMN_DEF', optional: true }, { token: i3.FocusMonitor }, { token: i0.ElementRef }, { token: i3.AriaDescriber, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatSortHeader.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatSortHeader, selector: \"[mat-sort-header]\", inputs: { disabled: \"disabled\", id: [\"mat-sort-header\", \"id\"], arrowPosition: \"arrowPosition\", start: \"start\", sortActionDescription: \"sortActionDescription\", disableClear: \"disableClear\" }, host: { listeners: { \"click\": \"_handleClick()\", \"keydown\": \"_handleKeydown($event)\", \"mouseenter\": \"_setIndicatorHintVisible(true)\", \"mouseleave\": \"_setIndicatorHintVisible(false)\" }, properties: { \"attr.aria-sort\": \"_getAriaSortAttribute()\", \"class.mat-sort-header-disabled\": \"_isDisabled()\" }, classAttribute: \"mat-sort-header\" }, exportAs: [\"matSortHeader\"], usesInheritance: true, ngImport: i0, template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition == 'before'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     role=\\\"button\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  <div class=\\\"mat-sort-header-arrow\\\"\\n       *ngIf=\\\"_renderArrow()\\\"\\n       [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n       [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n       [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n       (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n       (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n    <div class=\\\"mat-sort-header-stem\\\"></div>\\n    <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n      <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"], directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [\n        matSortAnimations.indicator,\n        matSortAnimations.leftPointer,\n        matSortAnimations.rightPointer,\n        matSortAnimations.arrowOpacity,\n        matSortAnimations.arrowPosition,\n        matSortAnimations.allowChildren,\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSortHeader, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-sort-header]', exportAs: 'matSortHeader', host: {\n                        'class': 'mat-sort-header',\n                        '(click)': '_handleClick()',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(mouseenter)': '_setIndicatorHintVisible(true)',\n                        '(mouseleave)': '_setIndicatorHintVisible(false)',\n                        '[attr.aria-sort]': '_getAriaSortAttribute()',\n                        '[class.mat-sort-header-disabled]': '_isDisabled()',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disabled'], animations: [\n                        matSortAnimations.indicator,\n                        matSortAnimations.leftPointer,\n                        matSortAnimations.rightPointer,\n                        matSortAnimations.arrowOpacity,\n                        matSortAnimations.arrowPosition,\n                        matSortAnimations.allowChildren,\n                    ], template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition == 'before'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     role=\\\"button\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  <div class=\\\"mat-sort-header-arrow\\\"\\n       *ngIf=\\\"_renderArrow()\\\"\\n       [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n       [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n       [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n       (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n       (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n    <div class=\\\"mat-sort-header-stem\\\"></div>\\n    <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n      <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: MatSortHeaderIntl }, { type: i0.ChangeDetectorRef }, { type: MatSort, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: ['MAT_SORT_HEADER_COLUMN_DEF']\n                    }, {\n                        type: Optional\n                    }] }, { type: i3.FocusMonitor }, { type: i0.ElementRef }, { type: i3.AriaDescriber, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { id: [{\n                type: Input,\n                args: ['mat-sort-header']\n            }], arrowPosition: [{\n                type: Input\n            }], start: [{\n                type: Input\n            }], sortActionDescription: [{\n                type: Input\n            }], disableClear: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSortModule {\n}\nMatSortModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSortModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatSortModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSortModule, declarations: [MatSort, MatSortHeader], imports: [CommonModule, MatCommonModule], exports: [MatSort, MatSortHeader] });\nMatSortModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSortModule, providers: [MAT_SORT_HEADER_INTL_PROVIDER], imports: [[CommonModule, MatCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSortModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatCommonModule],\n                    exports: [MatSort, MatSortHeader],\n                    declarations: [MatSort, MatSortHeader],\n                    providers: [MAT_SORT_HEADER_INTL_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SORT_DEFAULT_OPTIONS, MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule, matSortAnimations };\n","import * as i1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport * as i4 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i7 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Input, Optional, Component, ViewEncapsulation, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i2 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i6 from '@angular/cdk/layout';\nimport { Breakpoints } from '@angular/cdk/layout';\nimport * as i3 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Subject } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\nimport * as i5 from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by MatTooltip.\n * @docs-private\n */\nconst matTooltipAnimations = {\n    /** Animation that transitions a tooltip in and out. */\n    tooltipState: trigger('state', [\n        state('initial, void, hidden', style({ opacity: 0, transform: 'scale(0)' })),\n        state('visible', style({ transform: 'scale(1)' })),\n        transition('* => visible', animate('200ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(0)', offset: 0 }),\n            style({ opacity: 0.5, transform: 'scale(0.99)', offset: 0.5 }),\n            style({ opacity: 1, transform: 'scale(1)', offset: 1 }),\n        ]))),\n        transition('* => hidden', animate('100ms cubic-bezier(0, 0, 0.2, 1)', style({ opacity: 0 }))),\n    ]),\n};\n\n/** Time in ms to throttle repositioning after scroll events. */\nconst SCROLL_THROTTLE_MS = 20;\n/**\n * CSS class that will be attached to the overlay panel.\n * @deprecated\n * @breaking-change 13.0.0 remove this variable\n */\nconst TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\nconst PANEL_CLASS = 'tooltip-panel';\n/** Options used to bind passive event listeners. */\nconst passiveListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Time between the user putting the pointer on a tooltip\n * trigger and the long press event being fired.\n */\nconst LONGPRESS_DELAY = 500;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy');\n/** @docs-private */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\n}\n/** @docs-private */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n/** Injection token to be used to override the default options for `matTooltip`. */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n    providedIn: 'root',\n    factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500,\n    };\n}\nclass _MatTooltipBase {\n    constructor(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _platform, _ariaDescriber, _focusMonitor, scrollStrategy, _dir, _defaultOptions, _document) {\n        this._overlay = _overlay;\n        this._elementRef = _elementRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._ariaDescriber = _ariaDescriber;\n        this._focusMonitor = _focusMonitor;\n        this._dir = _dir;\n        this._defaultOptions = _defaultOptions;\n        this._position = 'below';\n        this._disabled = false;\n        this._viewInitialized = false;\n        this._pointerExitEventsInitialized = false;\n        this._viewportMargin = 8;\n        this._cssClassPrefix = 'mat';\n        this._showDelay = this._defaultOptions.showDelay;\n        this._hideDelay = this._defaultOptions.hideDelay;\n        /**\n         * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n         * uses a long press gesture to show and hide, however it can conflict with the native browser\n         * gestures. To work around the conflict, Angular Material disables native gestures on the\n         * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n         * elements). The different values for this option configure the touch event handling as follows:\n         * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n         *   browser gestures on particular elements. In particular, it allows text selection on inputs\n         *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n         * - `on` - Enables touch gestures for all elements and disables native\n         *   browser gestures with no exceptions.\n         * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n         *   showing on touch devices.\n         */\n        this.touchGestures = 'auto';\n        this._message = '';\n        /** Manually-bound passive event listeners. */\n        this._passiveListeners = [];\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /**\n         * Handles the keydown events on the host element.\n         * Needs to be an arrow function so that we can use it in addEventListener.\n         */\n        this._handleKeydown = (event) => {\n            if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                this._ngZone.run(() => this.hide(0));\n            }\n        };\n        this._scrollStrategy = scrollStrategy;\n        this._document = _document;\n        if (_defaultOptions) {\n            if (_defaultOptions.position) {\n                this.position = _defaultOptions.position;\n            }\n            if (_defaultOptions.touchGestures) {\n                this.touchGestures = _defaultOptions.touchGestures;\n            }\n        }\n        _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n            }\n        });\n        _ngZone.runOutsideAngular(() => {\n            _elementRef.nativeElement.addEventListener('keydown', this._handleKeydown);\n        });\n    }\n    /** Allows the user to define the position of the tooltip relative to the parent element */\n    get position() {\n        return this._position;\n    }\n    set position(value) {\n        var _a;\n        if (value !== this._position) {\n            this._position = value;\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n                (_a = this._tooltipInstance) === null || _a === void 0 ? void 0 : _a.show(0);\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    /** Disables the display of the tooltip. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // If tooltip is disabled, hide immediately.\n        if (this._disabled) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n        }\n    }\n    /** The default delay in ms before showing the tooltip after show is called */\n    get showDelay() {\n        return this._showDelay;\n    }\n    set showDelay(value) {\n        this._showDelay = coerceNumberProperty(value);\n    }\n    /** The default delay in ms before hiding the tooltip after hide is called */\n    get hideDelay() {\n        return this._hideDelay;\n    }\n    set hideDelay(value) {\n        this._hideDelay = coerceNumberProperty(value);\n    }\n    /** The message to be displayed in the tooltip */\n    get message() {\n        return this._message;\n    }\n    set message(value) {\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message, 'tooltip');\n        // If the message is not a string (e.g. number), convert it to a string and trim it.\n        // Must convert with `String(value)`, not `${value}`, otherwise Closure Compiler optimises\n        // away the string-conversion: https://github.com/angular/components/issues/20684\n        this._message = value != null ? String(value).trim() : '';\n        if (!this._message && this._isTooltipVisible()) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n            this._updateTooltipMessage();\n            this._ngZone.runOutsideAngular(() => {\n                // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n                // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n                // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n                // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n                Promise.resolve().then(() => {\n                    this._ariaDescriber.describe(this._elementRef.nativeElement, this.message, 'tooltip');\n                });\n            });\n        }\n    }\n    /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n    get tooltipClass() {\n        return this._tooltipClass;\n    }\n    set tooltipClass(value) {\n        this._tooltipClass = value;\n        if (this._tooltipInstance) {\n            this._setTooltipClass(this._tooltipClass);\n        }\n    }\n    ngAfterViewInit() {\n        // This needs to happen after view init so the initial values for all inputs have been set.\n        this._viewInitialized = true;\n        this._setupPointerEnterEventsIfNeeded();\n        this._focusMonitor\n            .monitor(this._elementRef)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(origin => {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                this._ngZone.run(() => this.hide(0));\n            }\n            else if (origin === 'keyboard') {\n                this._ngZone.run(() => this.show());\n            }\n        });\n    }\n    /**\n     * Dispose the tooltip when destroyed.\n     */\n    ngOnDestroy() {\n        const nativeElement = this._elementRef.nativeElement;\n        clearTimeout(this._touchstartTimeout);\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._tooltipInstance = null;\n        }\n        // Clean up the event listeners set in the constructor\n        nativeElement.removeEventListener('keydown', this._handleKeydown);\n        this._passiveListeners.forEach(([event, listener]) => {\n            nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n        });\n        this._passiveListeners.length = 0;\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._ariaDescriber.removeDescription(nativeElement, this.message, 'tooltip');\n        this._focusMonitor.stopMonitoring(nativeElement);\n    }\n    /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n    show(delay = this.showDelay) {\n        if (this.disabled ||\n            !this.message ||\n            (this._isTooltipVisible() &&\n                !this._tooltipInstance._showTimeoutId &&\n                !this._tooltipInstance._hideTimeoutId)) {\n            return;\n        }\n        const overlayRef = this._createOverlay();\n        this._detach();\n        this._portal =\n            this._portal || new ComponentPortal(this._tooltipComponent, this._viewContainerRef);\n        this._tooltipInstance = overlayRef.attach(this._portal).instance;\n        this._tooltipInstance\n            .afterHidden()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._setTooltipClass(this._tooltipClass);\n        this._updateTooltipMessage();\n        this._tooltipInstance.show(delay);\n    }\n    /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n    hide(delay = this.hideDelay) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.hide(delay);\n        }\n    }\n    /** Shows/hides the tooltip */\n    toggle() {\n        this._isTooltipVisible() ? this.hide() : this.show();\n    }\n    /** Returns true if the tooltip is currently visible to the user */\n    _isTooltipVisible() {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n    /** Create the overlay config and position strategy */\n    _createOverlay() {\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n        const scrollableAncestors = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this._overlay\n            .position()\n            .flexibleConnectedTo(this._elementRef)\n            .withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`)\n            .withFlexibleDimensions(false)\n            .withViewportMargin(this._viewportMargin)\n            .withScrollableContainers(scrollableAncestors);\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n            this._updateCurrentPositionClass(change.connectionPair);\n            if (this._tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide(0));\n                }\n            }\n        });\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: `${this._cssClassPrefix}-${PANEL_CLASS}`,\n            scrollStrategy: this._scrollStrategy(),\n        });\n        this._updatePosition(this._overlayRef);\n        this._overlayRef\n            .detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._overlayRef\n            .outsidePointerEvents()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => { var _a; return (_a = this._tooltipInstance) === null || _a === void 0 ? void 0 : _a._handleBodyInteraction(); });\n        return this._overlayRef;\n    }\n    /** Detaches the currently-attached tooltip. */\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._tooltipInstance = null;\n    }\n    /** Updates the position of the current tooltip. */\n    _updatePosition(overlayRef) {\n        const position = overlayRef.getConfig().positionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n        position.withPositions([\n            this._addOffset(Object.assign(Object.assign({}, origin.main), overlay.main)),\n            this._addOffset(Object.assign(Object.assign({}, origin.fallback), overlay.fallback)),\n        ]);\n    }\n    /** Adds the configured offset to a position. Used as a hook for child classes. */\n    _addOffset(position) {\n        return position;\n    }\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let originPosition;\n        if (position == 'above' || position == 'below') {\n            originPosition = { originX: 'center', originY: position == 'above' ? 'top' : 'bottom' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            originPosition = { originX: 'start', originY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            originPosition = { originX: 'end', originY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(originPosition.originX, originPosition.originY);\n        return {\n            main: originPosition,\n            fallback: { originX: x, originY: y },\n        };\n    }\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let overlayPosition;\n        if (position == 'above') {\n            overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        }\n        else if (position == 'below') {\n            overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n        return {\n            main: overlayPosition,\n            fallback: { overlayX: x, overlayY: y },\n        };\n    }\n    /** Updates the tooltip message and repositions the overlay according to the new message length */\n    _updateTooltipMessage() {\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n            this._tooltipInstance._markForCheck();\n            this._ngZone.onMicrotaskEmpty.pipe(take(1), takeUntil(this._destroyed)).subscribe(() => {\n                if (this._tooltipInstance) {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n    }\n    /** Updates the tooltip class */\n    _setTooltipClass(tooltipClass) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.tooltipClass = tooltipClass;\n            this._tooltipInstance._markForCheck();\n        }\n    }\n    /** Inverts an overlay position. */\n    _invertPosition(x, y) {\n        if (this.position === 'above' || this.position === 'below') {\n            if (y === 'top') {\n                y = 'bottom';\n            }\n            else if (y === 'bottom') {\n                y = 'top';\n            }\n        }\n        else {\n            if (x === 'end') {\n                x = 'start';\n            }\n            else if (x === 'start') {\n                x = 'end';\n            }\n        }\n        return { x, y };\n    }\n    /** Updates the class on the overlay panel based on the current position of the tooltip. */\n    _updateCurrentPositionClass(connectionPair) {\n        const { overlayY, originX, originY } = connectionPair;\n        let newPosition;\n        // If the overlay is in the middle along the Y axis,\n        // it means that it's either before or after.\n        if (overlayY === 'center') {\n            // Note that since this information is used for styling, we want to\n            // resolve `start` and `end` to their real values, otherwise consumers\n            // would have to remember to do it themselves on each consumption.\n            if (this._dir && this._dir.value === 'rtl') {\n                newPosition = originX === 'end' ? 'left' : 'right';\n            }\n            else {\n                newPosition = originX === 'start' ? 'left' : 'right';\n            }\n        }\n        else {\n            newPosition = overlayY === 'bottom' && originY === 'top' ? 'above' : 'below';\n        }\n        if (newPosition !== this._currentPosition) {\n            const overlayRef = this._overlayRef;\n            if (overlayRef) {\n                const classPrefix = `${this._cssClassPrefix}-${PANEL_CLASS}-`;\n                overlayRef.removePanelClass(classPrefix + this._currentPosition);\n                overlayRef.addPanelClass(classPrefix + newPosition);\n            }\n            this._currentPosition = newPosition;\n        }\n    }\n    /** Binds the pointer events to the tooltip trigger. */\n    _setupPointerEnterEventsIfNeeded() {\n        // Optimization: Defer hooking up events if there's no message or the tooltip is disabled.\n        if (this._disabled ||\n            !this.message ||\n            !this._viewInitialized ||\n            this._passiveListeners.length) {\n            return;\n        }\n        // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n        // first tap from firing its click event or can cause the tooltip to open for clicks.\n        if (this._platformSupportsMouseEvents()) {\n            this._passiveListeners.push([\n                'mouseenter',\n                () => {\n                    this._setupPointerExitEventsIfNeeded();\n                    this.show();\n                },\n            ]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            this._passiveListeners.push([\n                'touchstart',\n                () => {\n                    // Note that it's important that we don't `preventDefault` here,\n                    // because it can prevent click events from firing on the element.\n                    this._setupPointerExitEventsIfNeeded();\n                    clearTimeout(this._touchstartTimeout);\n                    this._touchstartTimeout = setTimeout(() => this.show(), LONGPRESS_DELAY);\n                },\n            ]);\n        }\n        this._addListeners(this._passiveListeners);\n    }\n    _setupPointerExitEventsIfNeeded() {\n        if (this._pointerExitEventsInitialized) {\n            return;\n        }\n        this._pointerExitEventsInitialized = true;\n        const exitListeners = [];\n        if (this._platformSupportsMouseEvents()) {\n            exitListeners.push(['mouseleave', () => this.hide()], ['wheel', event => this._wheelListener(event)]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            const touchendListener = () => {\n                clearTimeout(this._touchstartTimeout);\n                this.hide(this._defaultOptions.touchendHideDelay);\n            };\n            exitListeners.push(['touchend', touchendListener], ['touchcancel', touchendListener]);\n        }\n        this._addListeners(exitListeners);\n        this._passiveListeners.push(...exitListeners);\n    }\n    _addListeners(listeners) {\n        listeners.forEach(([event, listener]) => {\n            this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n        });\n    }\n    _platformSupportsMouseEvents() {\n        return !this._platform.IOS && !this._platform.ANDROID;\n    }\n    /** Listener for the `wheel` event on the element. */\n    _wheelListener(event) {\n        if (this._isTooltipVisible()) {\n            const elementUnderPointer = this._document.elementFromPoint(event.clientX, event.clientY);\n            const element = this._elementRef.nativeElement;\n            // On non-touch devices we depend on the `mouseleave` event to close the tooltip, but it\n            // won't fire if the user scrolls away using the wheel without moving their cursor. We\n            // work around it by finding the element under the user's cursor and closing the tooltip\n            // if it's not the trigger.\n            if (elementUnderPointer !== element && !element.contains(elementUnderPointer)) {\n                this.hide();\n            }\n        }\n    }\n    /** Disables the native browser gestures, based on how the tooltip has been configured. */\n    _disableNativeGesturesIfNecessary() {\n        const gestures = this.touchGestures;\n        if (gestures !== 'off') {\n            const element = this._elementRef.nativeElement;\n            const style = element.style;\n            // If gestures are set to `auto`, we don't disable text selection on inputs and\n            // textareas, because it prevents the user from typing into them on iOS Safari.\n            if (gestures === 'on' || (element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA')) {\n                style.userSelect =\n                    style.msUserSelect =\n                        style.webkitUserSelect =\n                            style.MozUserSelect =\n                                'none';\n            }\n            // If we have `auto` gestures and the element uses native HTML dragging,\n            // we don't set `-webkit-user-drag` because it prevents the native behavior.\n            if (gestures === 'on' || !element.draggable) {\n                style.webkitUserDrag = 'none';\n            }\n            style.touchAction = 'none';\n            style.webkitTapHighlightColor = 'transparent';\n        }\n    }\n}\n_MatTooltipBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatTooltipBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive });\n_MatTooltipBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _MatTooltipBase, inputs: { position: [\"matTooltipPosition\", \"position\"], disabled: [\"matTooltipDisabled\", \"disabled\"], showDelay: [\"matTooltipShowDelay\", \"showDelay\"], hideDelay: [\"matTooltipHideDelay\", \"hideDelay\"], touchGestures: [\"matTooltipTouchGestures\", \"touchGestures\"], message: [\"matTooltip\", \"message\"], tooltipClass: [\"matTooltipClass\", \"tooltipClass\"] }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatTooltipBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i1.Overlay }, { type: i0.ElementRef }, { type: i2.ScrollDispatcher }, { type: i0.ViewContainerRef }, { type: i0.NgZone }, { type: i3.Platform }, { type: i4.AriaDescriber }, { type: i4.FocusMonitor }, { type: undefined }, { type: i5.Directionality }, { type: undefined }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    }, propDecorators: { position: [{\n                type: Input,\n                args: ['matTooltipPosition']\n            }], disabled: [{\n                type: Input,\n                args: ['matTooltipDisabled']\n            }], showDelay: [{\n                type: Input,\n                args: ['matTooltipShowDelay']\n            }], hideDelay: [{\n                type: Input,\n                args: ['matTooltipHideDelay']\n            }], touchGestures: [{\n                type: Input,\n                args: ['matTooltipTouchGestures']\n            }], message: [{\n                type: Input,\n                args: ['matTooltip']\n            }], tooltipClass: [{\n                type: Input,\n                args: ['matTooltipClass']\n            }] } });\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nclass MatTooltip extends _MatTooltipBase {\n    constructor(overlay, elementRef, scrollDispatcher, viewContainerRef, ngZone, platform, ariaDescriber, focusMonitor, scrollStrategy, dir, defaultOptions, _document) {\n        super(overlay, elementRef, scrollDispatcher, viewContainerRef, ngZone, platform, ariaDescriber, focusMonitor, scrollStrategy, dir, defaultOptions, _document);\n        this._tooltipComponent = TooltipComponent;\n    }\n}\nMatTooltip.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTooltip, deps: [{ token: i1.Overlay }, { token: i0.ElementRef }, { token: i2.ScrollDispatcher }, { token: i0.ViewContainerRef }, { token: i0.NgZone }, { token: i3.Platform }, { token: i4.AriaDescriber }, { token: i4.FocusMonitor }, { token: MAT_TOOLTIP_SCROLL_STRATEGY }, { token: i5.Directionality, optional: true }, { token: MAT_TOOLTIP_DEFAULT_OPTIONS, optional: true }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\nMatTooltip.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatTooltip, selector: \"[matTooltip]\", host: { classAttribute: \"mat-tooltip-trigger\" }, exportAs: [\"matTooltip\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTooltip, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTooltip]',\n                    exportAs: 'matTooltip',\n                    host: {\n                        'class': 'mat-tooltip-trigger',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i1.Overlay }, { type: i0.ElementRef }, { type: i2.ScrollDispatcher }, { type: i0.ViewContainerRef }, { type: i0.NgZone }, { type: i3.Platform }, { type: i4.AriaDescriber }, { type: i4.FocusMonitor }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_TOOLTIP_SCROLL_STRATEGY]\n                    }] }, { type: i5.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_TOOLTIP_DEFAULT_OPTIONS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\nclass _TooltipComponentBase {\n    constructor(_changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Property watched by the animation framework to show or hide the tooltip */\n        this._visibility = 'initial';\n        /** Whether interactions on the page should close the tooltip */\n        this._closeOnInteraction = false;\n        /** Subject for notifying that the tooltip has been hidden from the view */\n        this._onHide = new Subject();\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param delay Amount of milliseconds to the delay showing the tooltip.\n     */\n    show(delay) {\n        // Cancel the delayed hide if it is scheduled\n        clearTimeout(this._hideTimeoutId);\n        // Body interactions should cancel the tooltip if there is a delay in showing.\n        this._closeOnInteraction = true;\n        this._showTimeoutId = setTimeout(() => {\n            this._visibility = 'visible';\n            this._showTimeoutId = undefined;\n            this._onShow();\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }, delay);\n    }\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param delay Amount of milliseconds to delay showing the tooltip.\n     */\n    hide(delay) {\n        // Cancel the delayed show if it is scheduled\n        clearTimeout(this._showTimeoutId);\n        this._hideTimeoutId = setTimeout(() => {\n            this._visibility = 'hidden';\n            this._hideTimeoutId = undefined;\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }, delay);\n    }\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden() {\n        return this._onHide;\n    }\n    /** Whether the tooltip is being displayed. */\n    isVisible() {\n        return this._visibility === 'visible';\n    }\n    ngOnDestroy() {\n        clearTimeout(this._showTimeoutId);\n        clearTimeout(this._hideTimeoutId);\n        this._onHide.complete();\n    }\n    _animationStart() {\n        this._closeOnInteraction = false;\n    }\n    _animationDone(event) {\n        const toState = event.toState;\n        if (toState === 'hidden' && !this.isVisible()) {\n            this._onHide.next();\n        }\n        if (toState === 'visible' || toState === 'hidden') {\n            this._closeOnInteraction = true;\n        }\n    }\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     */\n    _handleBodyInteraction() {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    }\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Callback for when the timeout in this.show() gets completed.\n     * This method is only needed by the mdc-tooltip, and so it is only implemented\n     * in the mdc-tooltip, not here.\n     */\n    _onShow() { }\n}\n_TooltipComponentBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _TooltipComponentBase, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\n_TooltipComponentBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _TooltipComponentBase, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _TooltipComponentBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; } });\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\nclass TooltipComponent extends _TooltipComponentBase {\n    constructor(changeDetectorRef, _breakpointObserver) {\n        super(changeDetectorRef);\n        this._breakpointObserver = _breakpointObserver;\n        /** Stream that emits whether the user has a handset-sized display.  */\n        this._isHandset = this._breakpointObserver.observe(Breakpoints.Handset);\n    }\n}\nTooltipComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i6.BreakpointObserver }], target: i0.ɵɵFactoryTarget.Component });\nTooltipComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TooltipComponent, selector: \"mat-tooltip-component\", host: { attributes: { \"aria-hidden\": \"true\" }, properties: { \"style.zoom\": \"_visibility === \\\"visible\\\" ? 1 : null\" } }, usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-tooltip\\\"\\n     [ngClass]=\\\"tooltipClass\\\"\\n     [class.mat-tooltip-handset]=\\\"(_isHandset | async)?.matches\\\"\\n     [@state]=\\\"_visibility\\\"\\n     (@state.start)=\\\"_animationStart()\\\"\\n     (@state.done)=\\\"_animationDone($event)\\\">{{message}}</div>\\n\", styles: [\".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\\n\"], directives: [{ type: i7.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], pipes: { \"async\": i7.AsyncPipe }, animations: [matTooltipAnimations.tooltipState], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tooltip-component', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [matTooltipAnimations.tooltipState], host: {\n                        // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n                        // won't be rendered if the animations are disabled or there is no web animations polyfill.\n                        '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\n                        'aria-hidden': 'true',\n                    }, template: \"<div class=\\\"mat-tooltip\\\"\\n     [ngClass]=\\\"tooltipClass\\\"\\n     [class.mat-tooltip-handset]=\\\"(_isHandset | async)?.matches\\\"\\n     [@state]=\\\"_visibility\\\"\\n     (@state.start)=\\\"_animationStart()\\\"\\n     (@state.done)=\\\"_animationDone($event)\\\">{{message}}</div>\\n\", styles: [\".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i6.BreakpointObserver }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTooltipModule {\n}\nMatTooltipModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatTooltipModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTooltipModule, declarations: [MatTooltip, TooltipComponent], imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule], exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule] });\nMatTooltipModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTooltipModule, providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[A11yModule, CommonModule, OverlayModule, MatCommonModule], MatCommonModule, CdkScrollableModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTooltipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule],\n                    exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule],\n                    declarations: [MatTooltip, TooltipComponent],\n                    providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TOOLTIP_DEFAULT_OPTIONS, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MatTooltip, MatTooltipModule, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, TooltipComponent, _MatTooltipBase, _TooltipComponentBase, getMatTooltipInvalidPositionError, matTooltipAnimations };\n"],"names":["SPACE","BACKSPACE","DELETE","TAB","hasModifierKey","ENTER","i0","InjectionToken","Directive","EventEmitter","Optional","Inject","Attribute","ContentChild","Input","Output","Component","ViewEncapsulation","ChangeDetectionStrategy","Self","ContentChildren","NgModule","i3","mixinTabIndex","mixinColor","mixinDisableRipple","RippleRenderer","MAT_RIPPLE_GLOBAL_OPTIONS","mixinErrorState","MatCommonModule","ErrorStateMatcher","coerceBooleanProperty","DOCUMENT","ANIMATION_MODULE_TYPE","Subject","merge","take","takeUntil","startWith","i1","FocusKeyManager","SelectionModel","i2","Validators","MatFormFieldControl","i1$1","MatChipSelectionChange","constructor","source","selected","isUserInput","MAT_CHIP_REMOVE","MAT_CHIP_AVATAR","MAT_CHIP_TRAILING_ICON","MatChipBase","_elementRef","_MatChipMixinBase","MatChipAvatar","ɵfac","ɵdir","provide","useExisting","type","args","selector","host","providers","MatChipTrailingIcon","MatChip","elementRef","_ngZone","platform","globalRippleOptions","_changeDetectorRef","_document","animationMode","tabIndex","_hasFocus","chipListSelectable","_chipListMultiple","_chipListDisabled","_selected","_selectable","_disabled","_removable","_onFocus","_onBlur","selectionChange","destroyed","removed","_addHostClassName","_chipRippleTarget","createElement","classList","add","nativeElement","appendChild","_chipRipple","setupTriggerEvents","rippleConfig","_animationsDisabled","parseInt","rippleDisabled","disabled","disableRipple","value","coercedValue","_dispatchSelectionChange","_value","undefined","textContent","selectable","removable","ariaSelected","toString","basicChipAttrName","element","hasAttribute","tagName","toLowerCase","ngOnDestroy","emit","chip","_removeTriggerEvents","select","markForCheck","deselect","selectViaInteraction","toggleSelected","focus","next","remove","_handleClick","event","preventDefault","stopPropagation","_handleKeydown","keyCode","_blur","onStable","pipe","subscribe","run","ElementRef","NgZone","Platform","ChangeDetectorRef","inputs","exportAs","decorators","avatar","trailingIcon","removeIcon","MatChipRemove","_parentChip","nodeName","setAttribute","parentChip","MAT_CHIPS_DEFAULT_OPTIONS","nextUniqueId$1","MatChipInput","_defaultOptions","focused","_addOnBlur","separatorKeyCodes","chipEnd","placeholder","id","inputElement","chipList","_chipList","registerInput","addOnBlur","empty","ngOnChanges","stateChanges","complete","ngAfterContentInit","_focusLastChipOnBackspace","_keydown","_allowFocusEscape","_keyManager","setLastItemActive","_emitChipEnd","_keyup","_focus","_isSeparatorKey","input","chipInput","_onInput","options","clear","Set","has","_MatChipListBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","nextUniqueId","MatChipListChange","MatChipList","_dir","controlType","_lastDestroyedChipIndex","_destroyed","_uid","_tabIndex","_userTabIndex","_onTouched","_onChange","_multiple","_compareWith","o1","o2","ariaOrientation","change","valueChange","valueAccessor","_a","_b","multiple","_selectionModel","role","_syncChipsState","compareWith","fn","_initializeSelection","writeValue","_chipInput","required","_c","_d","_required","control","hasValidator","_placeholder","_hasFocusedChip","chips","length","shouldLabelFloat","forEach","chipSelectionChanges","map","chipFocusChanges","chipBlurChanges","chipRemoveChanges","withWrap","withVerticalOrientation","withHomeAndEnd","withHorizontalOrientation","dir","tabOut","changes","Promise","resolve","then","_resetChips","_updateTabIndex","_updateFocusForDestroyedChips","ngOnInit","ngDoCheck","updateErrorState","_dropSubscriptions","setDescribedByIds","ids","_ariaDescribedby","join","_setSelectionByValue","registerOnChange","registerOnTouched","setDisabledState","isDisabled","onContainerClick","_originatesFromChip","setFirstItemActive","_focusInput","target","contains","onKeydown","newChipIndex","Math","min","setActiveItem","_isValidIndex","index","_clearSelection","Array","isArray","currentValue","_selectValue","_sortValues","correspondingChip","find","skip","_propagateChanges","fallbackValue","valueToEmit","setTimeout","_markAsTouched","_listenToChipsFocus","_listenToChipsSelection","_listenToChipsRemoved","_chipFocusSubscription","unsubscribe","_chipBlurSubscription","_chipSelectionSubscription","_chipRemoveSubscription","isSelected","chipIndex","toArray","indexOf","updateActiveItem","currentElement","parentElement","some","Directionality","NgForm","FormGroupDirective","NgControl","ɵcmp","template","encapsulation","None","changeDetection","OnPush","styles","errorStateMatcher","descendants","CHIP_DECLARATIONS","MatChipsModule","ɵmod","ɵinj","useValue","imports","exports","declarations","i6","CommonModule","Injectable","SkipSelf","i4","mixinDisabled","mixinInitialized","i5","MatButtonModule","MatSelectModule","i7","MatTooltipModule","coerceNumberProperty","MatPaginatorIntl","itemsPerPageLabel","nextPageLabel","previousPageLabel","firstPageLabel","lastPageLabel","getRangeLabel","page","pageSize","max","startIndex","endIndex","ɵprov","providedIn","MAT_PAGINATOR_INTL_PROVIDER_FACTORY","parentIntl","MAT_PAGINATOR_INTL_PROVIDER","deps","useFactory","DEFAULT_PAGE_SIZE","PageEvent","MAT_PAGINATOR_DEFAULT_OPTIONS","_MatPaginatorMixinBase","_MatPaginatorBase","_intl","defaults","_pageIndex","_length","_pageSizeOptions","_hidePageSize","_showFirstLastButtons","_intlChanges","pageSizeOptions","hidePageSize","showFirstLastButtons","_pageSize","pageIndex","_updateDisplayedPageSizeOptions","p","_initialized","_markInitialized","nextPage","hasNextPage","previousPageIndex","_emitPageEvent","previousPage","hasPreviousPage","firstPage","lastPage","getNumberOfPages","maxPageIndex","ceil","_changePageSize","floor","_nextButtonsDisabled","_previousButtonsDisabled","_displayedPageSizeOptions","slice","push","sort","a","b","color","MatPaginator","intl","changeDetectorRef","formFieldAppearance","_formFieldAppearance","NgIf","MatButton","MatTooltip","MatFormField","MatSelect","NgForOf","MatOption","MatPaginatorModule","AnimationDurations","AnimationCurves","trigger","state","style","transition","animate","keyframes","query","animateChild","SORT_ANIMATION_TRANSITION","ENTERING","STANDARD_CURVE","matSortAnimations","indicator","transform","leftPointer","rightPointer","arrowOpacity","opacity","arrowPosition","allowChildren","optional","getSortDuplicateSortableIdError","Error","getSortHeaderNotContainedWithinSortError","getSortHeaderMissingIdError","getSortInvalidDirectionError","direction","MatSortHeaderIntl","MAT_SORT_HEADER_INTL_PROVIDER_FACTORY","MAT_SORT_HEADER_INTL_PROVIDER","MAT_SORT_DEFAULT_OPTIONS","_MatSortBase","MatSort","sortables","Map","_stateChanges","start","_direction","sortChange","ngDevMode","disableClear","_disableClear","v","register","sortable","set","deregister","delete","active","getNextSortDirection","sortDirectionCycle","getSortDirectionCycle","nextDirectionIndex","sortOrder","reverse","_MatSortHeaderBase","MatSortHeader","_sort","_columnDef","_focusMonitor","_ariaDescriber","_showIndicatorHint","_viewState","_arrowDirection","_disableViewStateAnimation","_sortActionDescription","_handleStateChanges","sortActionDescription","_updateSortActionDescription","name","_updateArrowDirection","_setAnimationTransitionState","toState","_isSorted","_sortButton","querySelector","ngAfterViewInit","monitor","origin","newState","_setIndicatorHintVisible","stopMonitoring","_rerenderSubscription","visible","_isDisabled","fromState","viewState","_toggleOnInteraction","_getArrowDirectionState","_getArrowViewState","_getAriaSortAttribute","_renderArrow","newDescription","removeDescription","describe","FocusMonitor","AriaDescriber","animations","MatSortModule","Overlay","OverlayModule","A11yModule","CdkScrollableModule","ESCAPE","Breakpoints","normalizePassiveListenerOptions","ComponentPortal","matTooltipAnimations","tooltipState","offset","SCROLL_THROTTLE_MS","TOOLTIP_PANEL_CLASS","PANEL_CLASS","passiveListenerOptions","passive","LONGPRESS_DELAY","getMatTooltipInvalidPositionError","position","MAT_TOOLTIP_SCROLL_STRATEGY","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","scrollThrottle","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","MAT_TOOLTIP_DEFAULT_OPTIONS","factory","MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY","showDelay","hideDelay","touchendHideDelay","_MatTooltipBase","_overlay","_scrollDispatcher","_viewContainerRef","_platform","scrollStrategy","_position","_viewInitialized","_pointerExitEventsInitialized","_viewportMargin","_cssClassPrefix","_showDelay","_hideDelay","touchGestures","_message","_passiveListeners","_isTooltipVisible","hide","_scrollStrategy","_overlayRef","_updatePosition","runOutsideAngular","addEventListener","_tooltipInstance","show","updatePosition","_setupPointerEnterEventsIfNeeded","message","String","trim","_updateTooltipMessage","tooltipClass","_tooltipClass","_setTooltipClass","clearTimeout","_touchstartTimeout","dispose","removeEventListener","listener","delay","_showTimeoutId","_hideTimeoutId","overlayRef","_createOverlay","_detach","_portal","_tooltipComponent","attach","instance","afterHidden","toggle","isVisible","scrollableAncestors","getAncestorScrollContainers","strategy","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withScrollableContainers","positionChanges","_updateCurrentPositionClass","connectionPair","scrollableViewProperties","isOverlayClipped","create","positionStrategy","panelClass","detachments","outsidePointerEvents","_handleBodyInteraction","hasAttached","detach","getConfig","_getOrigin","_getOverlayPosition","withPositions","_addOffset","Object","assign","main","fallback","isLtr","originPosition","originX","originY","x","y","_invertPosition","overlayPosition","overlayX","overlayY","_markForCheck","onMicrotaskEmpty","newPosition","_currentPosition","classPrefix","removePanelClass","addPanelClass","_platformSupportsMouseEvents","_setupPointerExitEventsIfNeeded","_disableNativeGesturesIfNecessary","_addListeners","exitListeners","_wheelListener","touchendListener","listeners","IOS","ANDROID","elementUnderPointer","elementFromPoint","clientX","clientY","gestures","userSelect","msUserSelect","webkitUserSelect","MozUserSelect","draggable","webkitUserDrag","touchAction","webkitTapHighlightColor","ScrollDispatcher","ViewContainerRef","scrollDispatcher","viewContainerRef","ngZone","ariaDescriber","focusMonitor","defaultOptions","TooltipComponent","_TooltipComponentBase","_visibility","_closeOnInteraction","_onHide","_onShow","_animationStart","_animationDone","_breakpointObserver","_isHandset","observe","Handset","BreakpointObserver","NgClass","AsyncPipe"],"sourceRoot":"webpack:///"}