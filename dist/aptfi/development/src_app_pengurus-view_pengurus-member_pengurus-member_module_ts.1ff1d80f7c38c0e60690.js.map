{"version":3,"sources":["./src/app/pengurus-view/pengurus-member/pengurus-member.component.ts","./src/app/pengurus-view/pengurus-member/pengurus-member.component.html","./src/app/pengurus-view/pengurus-member/pengurus-member.module.ts","./src/app/pengurus-view/pengurus-member/pengurus-member.service.ts"],"names":[],"mappings":"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","file":"src_app_pengurus-view_pengurus-member_pengurus-member_module_ts.1ff1d80f7c38c0e60690.js","sourcesContent":["import { ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Store } from '@ngxs/store';\nimport { merge, fromEvent } from 'rxjs';\nimport { distinctUntilChanged, debounceTime, startWith, switchMap, map } from 'rxjs/operators';\nimport { Member } from 'src/app/models/member.model';\nimport { SetLoadingState } from '../../states/loading.state';\nimport { PengurusMemberService } from './pengurus-member.service';\n\n@Component({\n  selector: 'app-pengurus-member',\n  templateUrl: './pengurus-member.component.html',\n  styleUrls: ['./pengurus-member.component.scss'],\n})\nexport class PengurusMemberComponent implements OnInit {\n  isLoadingResults: boolean;\n  resultsLength: any;\n  displayedColumns: string[] = ['index', 'university_name', 'faculty_name', 'prodi_name', 'status', 'action'];\n  dataSource = new MatTableDataSource();\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  @ViewChild('filterInput', { static: true }) filterInput: ElementRef;\n\n  constructor(\n    private cdref: ChangeDetectorRef,\n    private pengurusMemberService: PengurusMemberService,\n    private store: Store,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.paginator.pageIndex = this.route.snapshot.queryParams.page || 0;\n    this.paginator.pageSize = this.route.snapshot.queryParams.size || 10;\n    this.paginator.page.next();\n  }\n\n  ngAfterViewInit() {\n    this.filterInput.nativeElement.value = this.route.snapshot.queryParams.search || '';\n    this.sort.sort({\n      id: 'university_name',\n      start: 'asc',\n      disableClear: false,\n    });\n\n    this.cdref.detectChanges();\n\n    merge(this.sort.sortChange, this.paginator.page, fromEvent(this.filterInput.nativeElement, 'keyup'))\n      .pipe(\n        distinctUntilChanged(),\n        debounceTime(500),\n        startWith({}),\n        switchMap(() => {\n          // this.store.dispatch(new SetLoadingState(true));\n          return this.loadData();\n        })\n      )\n      .subscribe();\n  }\n\n  loadData() {\n    return this.pengurusMemberService\n      .getAllMember(\n        this.paginator.pageIndex + 1,\n        this.paginator.pageSize,\n        this.sort.active,\n        this.sort.direction,\n        this.filterInput.nativeElement.value\n      )\n      .pipe(\n        map((data) => {\n          this.resultsLength = data.pagination.length;\n          return data.data;\n        }),\n        map((data) => {\n          setTimeout(() => {\n            this.filterInput.nativeElement.focus();\n          }, 500);\n          this.store.dispatch(new SetLoadingState(false));\n          data = data.map((d: Member) => {\n            d.prodi = d.prodis.filter((p) => p.prodiType === 's1')[0];\n            return d;\n          });\n          this.dataSource.data = data.map((d: any, i: number) => {\n            d.index = this.paginator.pageIndex > 0 ? i + this.paginator.pageIndex * this.paginator.pageSize + 1 : i + 1;\n            return d;\n          });\n        })\n      );\n  }\n\n  onDetailClick(member: Member) {\n    this.router.navigate([`pengurus/anggota/detail/${member.uuid}`], {\n      queryParams: {\n        page: this.paginator.pageIndex,\n        search: this.filterInput.nativeElement.value,\n        size: this.paginator.pageSize,\n      },\n    });\n  }\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"32px\">\n  <mat-form-field fxFlex=\"70%\">\n    <mat-label>Cari</mat-label>\n    <input matInput #filterInput />\n  </mat-form-field>\n</div>\n<div class=\"mat-elevation-z8\">\n  <mat-table [dataSource]=\"dataSource\" matSort>\n    <!-- Index Column -->\n    <ng-container matColumnDef=\"index\">\n      <mat-header-cell *matHeaderCellDef>No.</mat-header-cell>\n      <mat-cell *matCellDef=\"let element; let i = index\">\n        <span class=\"mobile-label\">No:</span>\n        {{ element.index }}\n      </mat-cell>\n    </ng-container>\n\n    <!-- Path Column -->\n    <ng-container matColumnDef=\"university_name\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Nama Universitas</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        <span class=\"mobile-label\"></span>\n        <a class=\"hover\" (click)=\"onDetailClick(element)\">{{ element.universityName }}</a>\n      </mat-cell>\n    </ng-container>\n    <!-- Path Column -->\n    <ng-container matColumnDef=\"faculty_name\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Fakultas</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        <span class=\"mobile-label\"></span>\n        {{ element.facultyName }}\n      </mat-cell>\n    </ng-container>\n    <!-- Path Column -->\n    <ng-container matColumnDef=\"prodi_name\">\n      <mat-header-cell *matHeaderCellDef>Program Studi</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        <span class=\"mobile-label\"></span>\n        {{ element.prodi.prodiName }}\n      </mat-cell>\n    </ng-container>\n    <!-- Path Column -->\n    <ng-container matColumnDef=\"status\">\n      <mat-header-cell *matHeaderCellDef>Status Anggota</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        <span class=\"mobile-label\"></span>\n        <span class=\"pills success\">Aktif</span>\n      </mat-cell>\n    </ng-container>\n\n    <!-- Action Column -->\n    <ng-container matColumnDef=\"action\">\n      <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\" fxLayout=\"row\" fxLayoutGap=\"8px\">\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n          <mat-icon>more_vert</mat-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\">\n          <button mat-menu-item (click)=\"onDetailClick(element)\">Detail</button>\n        </mat-menu>\n      </mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\n  </mat-table>\n\n  <mat-paginator\n    [pageSizeOptions]=\"[5, 10, 20]\"\n    [length]=\"resultsLength\"\n    showFirstLastButtons\n    aria-label=\"Select page of periodic elements\"\n  >\n  </mat-paginator>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { PengurusMemberComponent } from './pengurus-member.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatListModule } from '@angular/material/list';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PengurusMemberComponent,\n  },\n];\n\n@NgModule({\n  declarations: [PengurusMemberComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    MatPaginatorModule,\n    MatTableModule,\n    MatChipsModule,\n    MatInputModule,\n    MatSortModule,\n    FlexLayoutModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatIconModule,\n    MatTabsModule,\n    MatListModule,\n  ],\n  providers: [DatePipe],\n})\nexport class PengurusMemberModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClientService } from 'src/app/core/http-client.service';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PengurusMemberService {\n  constructor(private httpClient: HttpClientService) {}\n\n  getAllMember(page: number, size: number, sortColumn: string, sortDirection: string, search: string) {\n    return this.httpClient.get(`${environment.api}/members/paginate`, {\n      params: {\n        page: page.toString(),\n        size: size.toString(),\n        orderBy: sortColumn,\n        orderDirection: sortDirection,\n        search,\n      },\n    });\n  }\n\n  getDosenByUniversity(uuid: string, type: string) {\n    return this.httpClient.get(`${environment.api}/dosens/by-university/${uuid}`, {\n      params: {\n        type,\n      },\n    });\n  }\n}\n"],"sourceRoot":"webpack:///"}